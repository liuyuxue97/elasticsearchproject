{"index": {"_index": "web_api", "_id": "1"}}
{"API name": ["AMEE REST API"], "Description": [" AMEE provides data and solutions for sustainability and an intelligent supply chain. The AMEE API provides data about 20 million companies including financial risk, carbon emissions, carbon efficiency ratings, company contact information and environmental ratings. The AMEE API also provides modeling for energy consumption and carbon emissions for activities such as transport, electricty, manufacturing processes.\nfrom the provider: \"AMEE is a platform for greenhouse gas calculation, with access to emissions factors, calculation algorithms, and storage for data history. Our science team take the published methodologies from the science community and put them into a simple unified API, so you don't have to trawl through PDFs and spreadsheets to work it all our yourself. With over 8 million possible calculations, the platform covers everything from simple electricity calculations through to insanely complex industrial processes. If you need to work out the environmental impact of an activity, AMEE has the environmental intelligence you need.\""], "Url": ["https://www.amee.com/pages/api"], "Category": ["Science", "Environment", "Sustainability", "Weather"], "Provider": ["AMEE"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.amee.com/pages/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://live.amee.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "2"}}
{"API name": ["GoodGuide REST API"], "Description": [" The GoodGuide API enables developers to access GoodGuide.com data through a REST-based interface. Version 1.0 of the GoodGuide API currently supports one operation, search, that returns information and GoodGuide ratings about entities. An entity as defined by the GoodGuide API is a product, company, brand, or product category for which there is a GoodGuide rating. Through the API, you can find information about any entity currently available on GoodGuide.com.\nGoodGuide provides information about the health, environmental and social performance of products and companies.\u00ef\u00bf\u00bd"], "Url": ["http://developer.goodguide.com/docs"], "Category": ["Recommendations", "Environment", "Health", "Sustainability", "Ratings"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.goodguide.com"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "3"}}
{"API name": ["Brighter Planet CM1 REST API"], "Description": [" This web service, part of Brighter Planet's carbon middleware suite, enables developers to build flexible, real-time carbon footprint estimates from sources such as cars, flights, and houses into business applications. Brighter Planet delivers cloud-based web services providing on-demand carbon information for a fraction of a cent per query, meant for enhancing existing operational data with environmental intelligence that matters. The emission calculation service provides greenhouse gas emission estimates for a variety of emitters of arbitrary description. The API uses RESTful protocol and responses can be formatted in XML and JSON."], "Url": ["http://impact.brighterplanet.com/"], "Category": ["Environment", "Sustainability", "Weather"], "Provider": ["Faraday"], "ServiceType": ["Web/Internet"], "Documentation": ["http://impact.brighterplanet.com/documentation"], "Architectural Style": ["REST"], "Endpoint Url": ["http://impact.brighterplanet.com"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "4"}}
{"API name": ["WiserEarth REST API"], "Description": [" WiserEarth is a free online community space connecting people working toward a just and sustainable world. WiserEarth includes the largest international directory of NGOs (110,000 records). Organizations and communities worldwide are using WiserEarth groups to coordinate their efforts. The API offers access to organizations (except email addresses), solutions, groups (only the About Page metadata), resources, jobs, and events. Currently only Read access is available. Inquire about Write access."], "Url": ["http://www.wiser.org/group/API"], "Category": ["Other", "Environment", "Non-Profit", "Social"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.wiser.org/group/API"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.wiserearth.org"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "5"}}
{"API name": ["Carma REST API"], "Description": [" From their site: Carbon Monitoring for Action (CARMA) is a massive database containing carbon emissions data of over 50,000 power plants and 4,000 power companies worldwide. CARMA is the first global inventory of a major, emissions-producing sector of the economy."], "Url": ["http://carma.org/api"], "Category": ["Other", "Sustainability", "Environment", "Science"], "Provider": [], "ServiceType": [], "Documentation": ["http://carma.org/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://carma.org/api/1.0/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "6"}}
{"API name": ["API Hood Global Tides REST API v1.0"], "Description": [" The API Hood Global Tides provides Oceans tidal heights and extremes predictions. Tide predictions calculate low and high tides based on time and location. Developers can use JSON format to make calls via RapidAPI.\nNote: Predictions are based on historical tidal gauge data and satellite altimetry and do not take current weather and seismic events into consideration."], "Url": ["https://api.hood.land/api/tides"], "Category": ["Weather", "Marine", "Nature", "Water"], "Provider": ["API Hood"], "ServiceType": ["Web/Internet"], "Documentation": ["https://rapidapi.com/apihood/api/tides/details"], "Architectural Style": ["REST"], "Endpoint Url": ["https://tides.p.rapidapi.com/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "7"}}
{"API name": ["CubeSensors REST API"], "Description": [" CubeSensors are small devices that contain seven different sensors for detecting environmental conditions. They are capable of monitoring air quality, temperature, humidity, noise, light, barometric pressure, and sensor motion. CubeSensors glow different colors to reflect the health of indoor environments. The CubeSensors API enables developers to access CubeSensors sensor data programmatically."], "Url": ["http://api.cubesensors.com/docs"], "Category": ["Internet of Things", "Environment", "Hardware", "Health", "Home Automation"], "Provider": ["CubeSensors"], "ServiceType": [], "Documentation": ["http://api.cubesensors.com/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.cubesensors.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "8"}}
{"API name": ["AASHE STARS REST API"], "Description": [" STARS is a program of AASHE, the Association for the Advancement of Sustainability in Higher Education. STARS, the Sustainability Tracking, Assessment, and Rating System, is a self-reporting framework for colleges and universities in the United States or Canada to measure and track their sustainability performance.\nThe STARS API exposes three resources: Institutional metadata, reports, and the STARS technical manual. This is a REST API that currently only accepts GET requests."], "Url": ["http://stars-api-documentation.readthedocs.org/en/latest/"], "Category": ["Education", "Sustainability", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://stars-api-documentation.readthedocs.org/en/latest/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://stars.aashe.org/api/0.1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "9"}}
{"API name": ["Earth911 Search REST API v1"], "Description": [" Earth911 specializes in providing people across the country with useful and accessible recycling information. Among other site features, they also boast the largest and most accurate recycling directory in the U.S. The Earth911 Search API enables developers to add the ability to search this directory to any website, mobile application, or phone number. The API uses REST calls issued in JSON format."], "Url": ["http://api.earth911.com/"], "Category": ["Search", "Environment", "Sustainability"], "Provider": ["Earth911"], "ServiceType": ["Web/Internet"], "Documentation": ["http://api.earth911.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.earth911.com/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "10"}}
{"API name": ["Environmental Life Cycle Impact Assessment RPC API"], "Description": [" The service from the Center for Energy and Processes (CEP) in France provides estimates of environmental impact of photovoltaic (PV) technologies over their complete life cycles. It assesses impact of PV solar electricity technologies and installations based on a number of established computation methods. Calculations of cost and benefit over the life of an installation help to guide decision-making and justify the investment.\nAPI methods support estimates of photovoltaic technology performance both at a geographic point on a map and within a defined area of interest (AOI). Life cycle cost and benefit are then estimated from the Ecoinvent database. Mapping data comply with the Open Geospatial Consortium (OGC) protocol."], "Url": ["http://www.webservice-energy.org/web-services/ogc-web-services/environmental-lca\u2026"], "Category": ["Weather", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/ogc-web-services/environmental-lca-ogc-wps"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "11"}}
{"API name": ["EnergyStar ABS RPC API"], "Description": [" The free web service from the U.S. Environmental Protection Agency (EPA) promotes sharing of data on energy use and facility energy-consumption information. It interacts with EPA's Portfolio Manager software tool to help applications provide energy and building data as part of the Energy Star energy performance rating. This benchmarking supports development of environmental performance metrics.\nAPI methods support management of Energy Star rating status, updating of building and energy meter information, and retrieval of benchmarking data for local comparisons. Methods also support management of ABS program user account information."], "Url": ["http://portfoliomanager.energystar.gov/webservices/home/api;jsessionid=B3D50EAD3\u2026"], "Category": ["Government", "Reference", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://portfoliomanager.energystar.gov/webservices/home/api;jsessionid=B3D50EAD3F0FCB10143381C506842912.beta-esws-dist-3"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "12"}}
{"API name": ["EPA Station Catalog RPC API"], "Description": [" The EPA's Station Catalog API provides a summary of information on water quality monitoring stations such as the station's name, period of record, and result counts by characteristic type. This API operates over both SOAP and HTTP GET protocols."], "Url": ["http://www.epa.gov/storet/web_services.html"], "Category": ["Science", "Environment", "Water", "Government"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.epa.gov/storet/web_services.html"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://gov.epa.storet.stationcatalogservice/StationCatalogService.wsdl"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "13"}}
{"API name": ["EPA Watershed Summary RPC API"], "Description": [" The EPA's Watershed Summary API provides a summary of information for the types of data available within a given watershed, which is identified by an 8-digit HUC (Hydrologic Unit Code). This data includes which organizations have data, the number of stations, and result counts by characteristic type."], "Url": ["http://www.epa.gov/storet/web_services.html"], "Category": ["Science", "Government", "Environment", "Water"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.epa.gov/storet/web_services.html"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://gov.epa.storet.watershedsummary/WatershedSummaryService.wsdl"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "14"}}
{"API name": ["NOAA ERDDAP REST API"], "Description": [" This data service provides a combined interface to access and download scientific datasets and subsets on oceanography in common file formats. Typical uses involve charting and mapping. ERDDAP presents a single format for accessing multiple repositories, which the service reformats to interact with the remote server hosting the desired data.\nAPI methods support retrieving a list of available resource URLs, resource categories, and datasets, as well as metadata describing those resources. Methods also allow both full-text and advanced search against the datasets."], "Url": ["http://coastwatch.pfeg.noaa.gov/erddap/rest.html"], "Category": ["Science", "Data", "Marine", "Open Data"], "Provider": ["NOAA"], "ServiceType": ["Web/Internet"], "Documentation": ["http://coastwatch.pfeg.noaa.gov/erddap/rest.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://coastwatch.pfeg.noaa.gov/erddap/search/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "15"}}
{"API name": ["EEA Discomap REST API"], "Description": [" The European Environment Agency (EEA) provides the public with GIS APIs to get a wide range of environmental data for Europe and helps you create your own map-services. As of today EEA covers the thematic areas such as Air, Water, Biodiversity, Land and Noise. More topics will be added. Services exposed from discomap.eea.europa.eu are allowed to be re-used by anybody. EEA content can be integrated in many different ways by developers or by any end-user who might find an interest in combining EEA's information with their own or other public map-services (mashups).\nAs of today EEA covers the thematic areas such as Air, Water, Biodiversity, Land and Noise. We support access of these service to as many possible ways EEA can handle. All these map-services have meta data and a simple interface that allows you to discovered.\nThese map-services are exposed in many other portals such as the INSPIRE portal, ArcGis.com, GEOS and many other. EEA gives anybody the rights to re-link these services into there own web-site or portals. EEA however only maintains it's meta data from the services hosted in this infrastructure."], "Url": ["Discomap"], "Category": ["Mapping", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.eea.europa.eu/code/gis"], "Architectural Style": ["REST"], "Endpoint Url": ["http://discomap.eea.europa.eu/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "16"}}
{"API name": ["U.K. Department for Environment Hydrology Data REST API v0.2.0"], "Description": [" The Hydrology API provides access to historic water flow information in the U.K. Get data about monitoring stations, flood-monitoring, measures, readings, and more with the API."], "Url": ["http://environment.data.gov.uk/hydrology/doc/reference#introduction"], "Category": ["Water", "England", "Environment"], "Provider": ["Crown"], "ServiceType": ["Web/Internet"], "Documentation": ["http://environment.data.gov.uk/hydrology/doc/reference"], "Architectural Style": ["REST"], "Endpoint Url": ["http://environment.data.gov.uk/hydrology/id/stations.json"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "17"}}
{"API name": ["NOC Innovations Global Coastal Dataset REST API v1.0"], "Description": [" UK's National Oceanography Centre Global coastal API predicts accurate astronomical tidal heights and currents (high and low water) for any defined geographical area. API documentation is not public so developers must contact provider for access."], "Url": ["https://noc-innovations.co.uk/software"], "Category": ["Marine"], "Provider": ["NOC Innovations"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "18"}}
{"API name": ["CO2 Offset REST API v3.1.15"], "Description": [" This API targets developers who want to build their own services based on CO2 compensation/offset, but who do not want to implement clearing and settlement processes directly. Primary use case are carbon footprint tools, reports and analyzers to get an inexpensive way to compensate directly (from with the service)."], "Url": ["https://co2offset.io/"], "Category": ["Environment", "Climate", "Sustainability"], "Provider": ["Corrently Corp", "STROMDAO"], "ServiceType": ["Web/Internet"], "Documentation": ["https://co2offset.io/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.corrently.io/v2.0/co2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "19"}}
{"API name": ["Smart Sea Level Sensors REST API v1.0"], "Description": [" This API provides an easy way to retrieve measurements and metadata from sea level sensors deployed in Chatham County, GA. The API is built according to the OGC SensorThings API standard, which provides a unified way to retrieve measurements from IoT sensor systems. Retrieve data about all sensors, specific sensors, measurements from specific sensors, and measurements within start and end dates with this API"], "Url": ["https://www.sealevelsensors.org/data-packages/"], "Category": ["Internet of Things", "Marine", "Sustainability", "Water"], "Provider": ["Georgia Tech"], "ServiceType": ["Web/Internet"], "Documentation": ["https://dev.sealevelsensors.org/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.sealevelsensors.org/v1.0/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "20"}}
{"API name": ["SeaVision REST API v1"], "Description": [" The U.S. Department of Transportation's SeaVision offers maritime situational awareness tools and web-based unclassified maritime information sharing in order to increase maritime security and build partnerships within the maritime community. The SeaVision Public API supports ingesting data into SeaVision and sharing data with external systems. API returns vessel data, incidents, vessel history and more."], "Url": ["https://info.seavision.volpe.dot.gov/node/131"], "Category": ["Marine", "Boating", "Security"], "Provider": ["U.S. Department of Transportation"], "ServiceType": ["Web/Internet"], "Documentation": ["https://info.seavision.volpe.dot.gov/node/131"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.seavision.volpe.dot.gov/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "21"}}
{"API name": ["MeteoEye REST API v2.0"], "Description": [" MeteoEye offers hotspots detection service of thermal anomaly points (fires/wildfires) which have been detected by data of the meteorological satellites. Thermal anomaly points are available to the users within 30 minutes after receiving the satellites information. MeteoEye API offers management for functions including plans, DeductedResources, Events, Resources and ValueSets."], "Url": ["https://meteoeye.gis.by"], "Category": ["Satellites", "Fire"], "Provider": ["Geoinformation systems"], "ServiceType": ["Web/Internet"], "Documentation": ["https://meteoeye.gis.by/api/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://meteoeye.gis.by/api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "22"}}
{"API name": ["Quantitative Plant REST API v1"], "Description": [" Quantitative Plant offers image analysis software tools and models for plants. The Quantitative Plant API enables users to query and retrieve data from the website, including information about the models, software, and datasets. Users can filter by type of measurment, automation, systems &license for tools, plus filter on the presence of groundtruth data for datasets."], "Url": ["https://www.quantitative-plant.org/api"], "Category": ["Nature", "Agriculture", "Images", "Models", "Science", "Visualizations"], "Provider": ["Quantitative Plant"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.quantitative-plant.org/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.quantitative-plant.org/api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "23"}}
{"API name": ["National Grid ESO Carbon Intensity REST API v2.0.0"], "Description": [" National Grid ESO's Carbon Intensity API enables users and smart devices to schedule and minimize carbon emissions at a local level. The API provides an indicative trend of regional carbon intensity of the electricity system in Great Britain (GB) 96+ hours ahead of real-time. It provides programmatic and timely access to both forecast and estimated carbon intensity data. National Grid ESO is the electricity system operator for Great Britain."], "Url": ["https://carbonintensity.org.uk/"], "Category": ["Sustainability", "Climate", "Energy"], "Provider": ["Carbon Intensity", "National Grid ESO"], "ServiceType": ["Web/Internet"], "Documentation": ["https://carbon-intensity.github.io/api-definitions/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.carbonintensity.org.uk"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "24"}}
{"API name": ["Emissions REST API v2"], "Description": [" Emissions API offers satellite-based emissions data about methane, carbon monoxide, oxone, and nitrogen oxide from the European Space Agency\u2019s Sentinel-5P satellite. Get data about averages, date range, GeoJSON feature, products (methane, carbon monoxide, oxone, and nitrogen oxide), and statistic arrays."], "Url": ["https://emissions-api.org/"], "Category": ["Climate", "Open Data", "Satellites", "Sustainability"], "Provider": ["Emissions API"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.v2.emissions-api.org/ui/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.v2.emissions-api.org/api/v2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "25"}}
{"API name": ["ClimateTrade Unspecified API v1"], "Description": [" ClimateTrade enables companies to offset their carbon footprints. The ClimateTrade API offers programmatic integration to this service. Developers can implement the API to let businesses calculate the exact carbon footprint generated by products or services at the purchase point. A list projects that offset carbon footprints are then offered to the business. Project examples are wind power, solar farms, rice husk co-generation power plants, etc. Interested developers can contact the provider for API and documentation access."], "Url": ["https://climatetrade.com/api/"], "Category": ["Sustainability", "Business", "Climate", "Energy", "Non-Profit"], "Provider": ["ClimateTrade"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["Unspecified"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "26"}}
{"API name": ["CarbonScopeData REST API v1"], "Description": [" CarbonScopeData RESTful API enables developers to integrate carbon emissions data into applications. It provides access to two types of life-cycle inventory (LCI) data from CarbonScopeData: process LCI and environmentally extended input-output LCI. The API is useful to quantify, track and reduce climate impacts."], "Url": ["https://www.carbonscopedata.com/api/home"], "Category": ["Sustainability", "Climate", "Energy"], "Provider": ["CleanMetrics"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.carbonscopedata.com/api/Documentation"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.carbonscopedata.com/api/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "27"}}
{"API name": ["electricityMap REST API v3"], "Description": [" electricityMap is a platform including visualizations, database tracking and API, to help users understand the climate impact of electricity. The electricityMap API provides hourly live, historical, and forecasted global electricity emissions data from 228 areas globally. This data is useful to inform users how to consume electricity at the optimal time for optimization and reducing the carbon footprint."], "Url": ["https://api.electricitymap.org/"], "Category": ["Sustainability", "Climate", "Energy"], "Provider": ["Tomorrow"], "ServiceType": ["Web/Internet"], "Documentation": ["http://static.electricitymap.org/api/docs/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.electricitymap.org/v3/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "28"}}
{"API name": ["API Ninjas REST API v1.0"], "Description": [" API Ninjas provides 1 API endpoint for 16 data APIs divided into three tiers. Tier 1 offers fundamental building block data for cities, currency conversion, country stats, dictionary, exchange rates, geocoding, reverse geocoding, facts, jokes, and trivia. Tier 2 offers data for thousands of cars from dozens of automakers, celebrity data, and text &extraction from images. Tier 3 offers data about Air Quality (AQI), nutrition extraction via natural language processing alogrithms, and weather for regions around the world."], "Url": ["https://api-ninjas.com/api/"], "Category": ["Data", "Auto", "Celebrities", "Cities", "Climate", "Countries", "Currency", "Dictionary", "Fitness", "Food", "Health", "Humor", "Images", "Location", "OCR", "Trivia", "Weather"], "Provider": ["API Ninjas"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api-ninjas.com/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.api-ninjas.com/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "29"}}
{"API name": ["SOBOS Water levels worldwide FloodAlert REST API v1.1"], "Description": [" Our REST API provides programmatic access to read and write historic, current, forecast waterlevel data, station meta data and several related."], "Url": ["http://waterlevelapi.com"], "Category": ["Water", "Environment"], "Provider": ["SOBOS"], "ServiceType": ["Web/Internet"], "Documentation": ["https://github.com/SOBOS-GmbH/pegelalarm_public_pas_doc/wiki"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.pegelalarm.at/api/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "30"}}
{"API name": ["Climatekuul REST API v1.0"], "Description": [" Climatekuul API enables applications to apply carbon footprint offsets to applications for e-commerce deliveries, carshare, rideshare, trucking and fleet management, food and parcel delivery, air travel and more."], "Url": ["http://api.climatekuul.com/docs/"], "Category": ["Sustainability", "Air Travel", "Climate", "eCommerce"], "Provider": ["Mithqal Digital"], "ServiceType": ["Web/Internet"], "Documentation": ["http://api.climatekuul.com/docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.climatekuul.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "31"}}
{"API name": ["TheRainery REST API v1"], "Description": [" TheRainery API provides access to raw weather forecasts from trusted Meteorological Institutes including NOAA, M\u00e9t\u00e9o France, DWD. The API offers methods to retrieve atmospheric forecasts, marine forecasts, and astronomical data."], "Url": ["https://therainery.com/"], "Category": ["Weather", "Agriculture", "Astronomy", "Data-as-a-Service", "Environment", "Marine"], "Provider": ["TheRainery"], "ServiceType": ["Web/Internet"], "Documentation": ["https://therainery.com/documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.therainery.com/forecast/astmospheric?model=GFS_13&amp;latitude=48.8582&amp;longitude=2.2945"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "32"}}
{"API name": ["Offset REST API v1.0"], "Description": [" The Offset API enables developers to purchase CO2 offsets on behalf of their customers. The API offers methods to calculate CO2 emissions and manage projects for compensation (such as reforestation, solar panels, biodiesel, etc.), and also manage pricing, refunds, and purchases. CO2 footprints for travel, flight, hotel, bus, car, shipping, manufacturing and more. Proceeds go to a user's choice climate organization or technology startups.\nFrom the Provider: \"The Offset API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, header-based authentication, and verbs. Offset API supports multiple projects that allow for CO2 compensation. You can use projects codes in requests to override how amount is split between projects. \""], "Url": ["https://docs.offset-api.com"], "Category": ["Environment", "Climate", "Sustainability"], "Provider": ["offsetAPI"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.offset-api.com"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.offset-api.com/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "33"}}
{"API name": ["Bloowatch REST API v1"], "Description": [" Bloowatch provides information and alerts about endangered species. The Bloowatch API offers data from the endangered species list, with data returned from a URL call with an animal parameter. Data includes animal description, habitat, image, location, name, population, scientific name, endangered status and more."], "Url": ["http://www.bloowatch.org/developers/api"], "Category": ["Animals", "Climate", "Environment", "Sustainability"], "Provider": ["Bloopix Design"], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.bloowatch.org/developers/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://bloowatch.org/developers/json/species/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "34"}}
{"API name": ["Datalastic Maritime Vessels and Ports Data REST API"], "Description": [" Datalastic Maritime Vessels and Ports Data API offers vessels Information, images, real-time location, destination, images, historical data, ports information, vessels in ports, vessels in a radius of a port search and more. Get geo-coordinates of vessels, MMSI and IMO for ship identification, ETD, ETA, heading, call sign, dead weight tonnage, marine port information, and track ships with the API."], "Url": ["https://datalastic.com/"], "Category": ["Marine", "Boating", "Transportation"], "Provider": ["Datalastic"], "ServiceType": ["Web/Internet"], "Documentation": ["https://datalastic.com/developers-documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.datalastic.com/api/v0/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "35"}}
{"API name": ["Golemio REST API v0.1"], "Description": [" The Golemio API provides data from the city of Prague such as air quality, parking, public spaces, public transport, traffic and waste. Golemio is Prague's Data Platform that provides data and direct links to the specific needs of Prague, its citizens and its visitors."], "Url": ["https://golemio.cz/en/node/720"], "Category": ["Cities", "Climate", "Open Data", "Parking", "Transportation"], "Provider": ["Golemio"], "ServiceType": ["Web/Internet"], "Documentation": ["https://golemioapi.docs.apiary.io/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.golemio.cz/v2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "36"}}
{"API name": ["HuntScore REST API v1.0"], "Description": [" HuntScore provides big game hunting maps, data, and tools. The HuntScore API retrieves data from the HuntScore website including counties, drawings, harvests, records, photos, scores, posts, tips, states, and units.\nThis API is currently available by invitation-only."], "Url": ["https://api.huntscore.com/"], "Category": ["Recreation", "Animals", "Nature", "Sports", "Weapons"], "Provider": ["HuntScore"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.huntscore.com/1.0/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.huntscore.com/1.0"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "37"}}
{"API name": ["Trip to Carbon REST API v1.1"], "Description": [" Trip to Carbon provides simple carbon emission calculation tools for travel. The Trip to Carbon API provides a travelers' carbon footprint based on available fuel usage or distance traveled. The carbon footprint is provided in kilograms, based on input of what kind of fuel, country traveled, motorbike, transit, bus, bike, type of flight and other parameters. The API uses two methods outlined by the IPCC, DEFRA U.K & GHG Protocol to determine the footprint."], "Url": ["https://triptocarbon.com/documentation"], "Category": ["Sustainability", "Climate", "Travel"], "Provider": ["Trip to Carbon"], "ServiceType": ["Web/Internet"], "Documentation": ["https://triptocarbon.com/documentation/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.triptocarbon.xyz/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "38"}}
{"API name": ["ESG Enterprise Data REST API v1.3"], "Description": [" The ESG Enterprise Data API allows you to query and search Environmental, Social, and Governance (ESG) risk ratings with the company name and stock symbols. ESG Enterprise database maintains over 40000 company ratings worldwide. This REST API supports data searches for ESG risk scores that are formatted in JSON with HTTP GET Requests authenticate via Token."], "Url": ["https://www.esgenterprise.com/esg-analytics/esg-api-developer/"], "Category": ["Financial", "Environment", "Stocks", "Sustainability"], "Provider": ["ESG Enterprise"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.esgenterprise.com/esg-analytics/esg-api-developer/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "39"}}
{"API name": ["Great Circle Routing REST API v2"], "Description": [" The Great Circle Routing API provides routes for sailing and motor boat vessels. The API returns ideal isochronic forecast route from a user's own polar data and wind, sea state weather information for a specified route with potentially several waypoints. Great Circle-Squid is a world-leading provider of marine weather services, both for race management and sailors (skippers and navigators)."], "Url": ["https://www.squid-sailing.com/doc-api/"], "Category": ["Marine", "Boating", "Location", "Mapping"], "Provider": ["Great Circle-Squid"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.squid-sailing.com/doc-api/routing/description.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://front-remora.greatcircle.be/routings/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "40"}}
{"API name": ["Great Circle Forecast REST API v1"], "Description": [" The Great Circle Forecast API provides weather forecasts primarily for sailing races. Data returned includes wind, pressure, temperature, precipitations, sea currents, etc. for a specified location. These forecasts can be computed for every location on the planet, with time interval varying from 1 minute to 3 hours and up to a horizon of 7 days into the future. Great Circle-Squid is a world-leading provider of marine weather services, both for race management and sailors (skippers and navigators)."], "Url": ["https://front-remora.greatcircle.be/forecast"], "Category": ["Weather", "Boating", "Marine"], "Provider": ["Great Circle-Squid"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.squid-sailing.com/doc-api/forecast/description.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://front-remora.greatcircle.be/forecast"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "41"}}
{"API name": ["Flooderizer Flood Detection REST API v1.0"], "Description": [" Flooderizer Flood Detection API detects flooded areas in an input photo using artificial intelligence and a powerful cloud infrastructure. Useful for IT developers who want to make apps for surveillance cameras or any kind of camera used at malls, buildings, roads, agriculture etc.\nFrom the provider: \"Flood Detection API - Flooderizer (also known as Flood Recognition API or Flood Detector API) is a cross browsers REST API which get a JSON input with a still photo (as base64 encoded string), containing flooded areas and returns a JSON string which contains predictions of the input photo regarding the probability of a flood. The recognized Flooded Areas have confidence score, timestamp, tagId, tagName. Of course, there are some limitations in order to get a higher accuracy. We recommend properly exposed, unobstructed JPEG photos at 1920x1080 (full HD resolution) where the flooded area is clear and focused. If the flooded area details are too small or blured, the accuracy is lower and the AI algorithm may not classify in a proper way. We do not store pictures. Also, the quality and the angles of the camera are very important and it contribute to a higher reading accuracy. It should has varifocal lenses, high shutter speed, good infrared lighting beam, full HD resolution.\nAllthough this Automatic Flood Detection API (currently we do not offer a Flood Detection sdk) is intended for software development and therefore developers, we have also here an Flood Detection online application that may be used to check the input and output JSONs of the API. The necessary steps are written below, basically for this real time Flood Detection API you send an authorized POST request in JSON format to the API endpoint and you get as JSON response the output as described below through parameters and examples.\nThis Flood Detection API is useful for a large number of domains like apps for: security cameras for malls, parkings, buildings, agriculture etc. You own the commercial copyright of the resulted JSON with no additional fee meaning you may use it in your own apps for sale.\""], "Url": ["https://www.de-vis-software.ro/flood-detection-api.aspx"], "Category": ["Artificial Intelligence", "Nature", "Recognition", "Water"], "Provider": ["DE VIS Software"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.de-vis-software.ro/flood-detection-api.aspx"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.de-vis-software.ro/flooderizer.aspx"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "42"}}
{"API name": ["openEO REST API v1"], "Description": [" The openEO API lets cloud back-ends with large Earth observation (EO) datasets communicate with applications in an interoperable way. Developers can use this API to discover Earth observation data and processes from cloud back-ends, execute (chained) processes on back-ends, run user-defined functions (UDFs) on back-ends, download results and manage user content including billing. openEO is a part of the Horizon 2020 project and funded with a grant from the European Commission to enable the exploration of space and satellite data."], "Url": ["https://openeo.org/documentation/1.0/"], "Category": ["Astronomy", "European", "Open Data", "Satellites"], "Provider": ["European Union", "openEO"], "ServiceType": ["Web/Internet"], "Documentation": ["https://openeo.org/documentation/1.0/developers/api/reference.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://openeo.cloudprovider.com/api/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "43"}}
{"API name": ["ODWeather REST API v1.0"], "Description": [" The OceanDrivers (OD) ODWeather API offers weather data about the ocean including currents, wind and swell from, aemet, Ocib Bahia de Palma Buoy, Easy Wind and other weather stations. Data is provided for Yacht club and other usage. OceanDrivers provides ocean data software including real wind time information, ocean weather and real time current measurements."], "Url": ["https://api.oceandrivers.com/"], "Category": ["Weather", "Boating", "Marine"], "Provider": ["OceanDrivers"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.oceandrivers.com/static/docs.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.oceandrivers.com/static/resources.json"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "44"}}
{"API name": ["aircheckr REST API v1.5"], "Description": [" aircheckr API provides hyper-local, near real-time air pollution information. It returns Air Quality Index (AQI) data from territories, cities, regions, at street level. Also get statistics of long term AQI for an area with this API. The aircheckr service calculates the outside air quality and measures Nitrogen Dioxide, Ozone and Particulate matter."], "Url": ["https://www.aircheckr.com/developers"], "Category": ["Environment", "Climate", "Weather"], "Provider": ["AirCheckr", "Nazka Maps"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.aircheckr.com/api_docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.aircheckr.com/v1.5/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "45"}}
{"API name": ["spectator.earth REST API v1.0"], "Description": [" The spectator.earth API allows you to interact with spectator.earth programmatically using its functionalities and data directly. You can search for satellite data, request images in high resolution, track satellite overpasses and more. To use most of the endpoints, you'll need a key that is automatically generated for every account at https://app.spectator.earth. spectator.earth tracks and monitors earth-imaging satellites so users can get up-to-date satellite imagery."], "Url": ["https://api.spectator.earth"], "Category": ["Satellites", "Images"], "Provider": ["Spectator"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.spectator.earth"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.spectator.earth"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "46"}}
{"API name": ["Carbon Interface REST API v1"], "Description": [" Carbon Interface API provides estimates about C02 emissions from activities. Users provide details about the activity and the API uses the most accurate estimation methodologies to compute the amount of C02 emitted from doing the activity. Emissions data can be returned for electricity, airplane flights, product manufacturing, shipping, and other specific activities."], "Url": ["https://docs.carboninterface.com/#introduction"], "Category": ["Climate", "Sustainability"], "Provider": ["Carbon Interface"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.carboninterface.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.carboninterface.com/api/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "47"}}
{"API name": ["Troposphere Weather REST API v1.0"], "Description": [" Troposphere Weather is an easy to use versatile weather API which provides hyperlocal forecasts, historic climate data und location/place search. Get data about temperature, wind, rain, humidity, pressure, snow, air quality index, sunshine hours and more with this API."], "Url": ["https://www.troposphere.io/developer"], "Category": ["Weather", "Climate", "Location", "Mapping"], "Provider": ["Troposphere"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.troposphere.io/developer"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.troposphere.io"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "48"}}
{"API name": ["Atmosphere nitrous oxide levels REST API v1.0"], "Description": [" This API provides on a monthly basis, the amount of nitrous oxide in the atmosphere from 2001. Expressed as a mole fraction in dry air, parts per million (ppm)."], "Url": ["https://global-warming.org"], "Category": ["Climate", "Environment", "Science", "Sustainability"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://global-warming.org"], "Architectural Style": ["REST"], "Endpoint Url": ["https://global-warming.org/api/nitrous-oxide-api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "49"}}
{"API name": ["Global temperature anomalies REST API v1.0"], "Description": [" This API provides on a monthly basis, the global mean surface temperature anomaly from 1880.04 to present (in celsius)."], "Url": ["https://global-warming.org"], "Category": ["Climate", "Environment", "Science", "Sustainability"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://global-warming.org"], "Architectural Style": ["REST"], "Endpoint Url": ["https://global-warming.org/api/temperature-api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "50"}}
{"API name": ["Earth arctic sea ice extent REST API v1.0"], "Description": [" This API provides the average monthly Arctic sea ice extent each September since 1979, derived from satellite observations."], "Url": ["https://global-warming.org"], "Category": ["Climate", "Environment", "Marine", "Science", "Sustainability"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://global-warming.org"], "Architectural Style": ["REST"], "Endpoint Url": ["https://global-warming.org/api/arctic-api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "51"}}
{"API name": ["Global warming methane atmosphere concentration REST API v1.0"], "Description": [" This API provides on a monthly basis, the amount of methane in the atmosphere from 1983 to the present. Expressed as a mole fraction in dry air, parts per million (ppm)."], "Url": ["https://global-warming.org/"], "Category": ["Environment", "Climate", "Science", "Sustainability"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://global-warming.org/"], "Architectural Style": ["REST"], "Endpoint Url": ["ttps://global-warming.org/api/methane-api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "52"}}
{"API name": ["Global Warming carbon dioxide (CO2) atmosphere concentration REST API v1.0"], "Description": [" This API provides on a quasi-daily basis, the amount of carbon dioxide (CO2) in the atmosphere from 2010.01.01 to present. It is expressed as a mole fraction in dry air, parts per million (ppm)."], "Url": ["https://global-warming.org"], "Category": ["Environment", "Climate", "Predictions", "Science", "Sustainability"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://global-warming.org"], "Architectural Style": ["REST"], "Endpoint Url": ["https://global-warming.org/api/co2-api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "53"}}
{"API name": ["Planet Orders REST API v2.0"], "Description": [" This Planet Orders API is raster tools to create analysis-ready data with Planet's imagery archive. It is an ordering service to create pipelines to continuously ingest imagery for processing and analysis. This includes services to; cancel orders in bulk, download orders, Get aggregated order stats and more. This API supports JSON formats and utilizes Basic HTTP authentication and requires an API Key. Planet provides daily satellite imagery and insights."], "Url": ["https://developers.planet.com/quickstart/apis"], "Category": ["Satellites", "Analytics", "Images", "Ordering"], "Provider": ["Planet Labs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.planet.com/docs/orders"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.planet.com/compute/ops/orders/v2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "54"}}
{"API name": ["Planet Basemaps REST API v1.0"], "Description": [" This Planet Basemaps API returns satellite imagery and allows you to search, clip, order, and view data from maps. It provides a way to download a full mosaic or just one or more selected quads. The API supports JSON and GeoSON formats and utilizes Basic HTTP authentication and requires an API Key. Planet provides daily satellite imagery and insights."], "Url": ["https://developers.planet.com/quickstart/apis"], "Category": ["Satellites", "Analytics", "Geography", "Images", "Mapping", "Photos"], "Provider": ["Planet Labs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.planet.com/docs/basemaps"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.planet.com/basemaps/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "55"}}
{"API name": ["Planet Tasking REST API v2.0"], "Description": [" The Planet Tasking API is a programmatic interface that enables you with the ability to manage and request imagery collections in an automated way to; create, edit, and cancel SkySat point collection orders, Get the status of an order, view metadata on the images tasked and more. The Planet Tasking REST API allows you to integrate commonly used aspects such as orders, editing and cancellation, with services for; Order creation, Stereo create, Filtering and Area. This Tasking API is currently in Beta. This API supports GeoJSON/JSON formats and utilizes Basic HTTP authentication and requires an API Key. Planet provides daily satellite imagery and insights."], "Url": ["https://developers.planet.com/quickstart/apis"], "Category": ["Satellites", "Analytics", "Images", "Ordering", "Tasks"], "Provider": ["Planet Labs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.planet.com/docs/tasking"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.planet.com/tasking/v2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "56"}}
{"API name": ["MSC GeoMet Climate RPC API v1.3.0"], "Description": [" The Canadian Centre for Climate Services (CCCS) is an important part of the Pan-Canadian Framework on Clean Growth and Climate Change. The CCCS will be the official source of reliable climate information, data, and tools from the Government of Canada, and will provide training and user support to help increase climate resilience across Canada. Get data about snow depth, precipitation changes, projected mean temperature, projected minimum temperature and other information about geographical areas with this API."], "Url": ["https://www.canada.ca/en/environment-climate-change/services/weather-general-too\u2026"], "Category": ["Climate", "Canadian", "Government"], "Provider": ["Government of Canada"], "ServiceType": ["Web/Internet"], "Documentation": ["https://eccc-msc.github.io/open-data/msc-geomet/readme_en"], "Architectural Style": ["RPC"], "Endpoint Url": ["https://geo.weather.gc.ca/geomet-climate?lang=en&amp;version=1.3.0&amp;LAYERS=CLIMATE_STATIONS&amp;SERVICE=WMS&amp;REQUEST=GetCapabilities"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "57"}}
{"API name": ["Autogrow REST API v1.0"], "Description": [" The Autogrow REST API enables users to interact with Autogrow devices, retrieve Autogrow data, integrate third party devices and build web applications. This API is accessed over HTTPS with data that is sent and received in JSON format. It provides access to data from devices, user profile data and more. The Autogrow Lab is a collaborative environment for continued research and development of control systems for indoor agriculture, that focuses on blending tech and data, with plant science. Autogrow provides indoor growers with affordable, accessible and simple innovation solutions globally."], "Url": ["https://lab.autogrow.com/docs/en/api.html"], "Category": ["Agriculture", "Environment", "Internet of Things", "Science"], "Provider": ["Autogrow"], "ServiceType": ["Web/Internet"], "Documentation": ["https://lab.autogrow.com/docs/en/intro.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.autogrow.com/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "58"}}
{"API name": ["Planet Analytics REST API v1.0"], "Description": [" The Planet Analytics API is a RESTful service that provides programmatic access to interface with Planet Analytic Feeds. Planet Analytic Feeds include feeds of data derived from satellite imagery such as building detection (construction, urban growth & plan future development), road detection, well pad detection (to monitor oil and gas construction across basins), and more. The Analytics API provides operations for working with feeds, subscriptions, and collections of results to transform Planet imagery into analytic feeds that detect and classify objects, identify geographic features and more. Planet provides daily satellite imagery and insights."], "Url": ["https://developers.planet.com/docs/analytics"], "Category": ["Satellites", "Analytics", "Geography", "Mapping", "Photos"], "Provider": ["Planet Labs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.planet.com/docs/analytics/reference"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.planet.com/analytics"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "59"}}
{"API name": ["Sentinel Hub REST API v1.0"], "Description": [" The Sentinel Hub API enables developers to integrate satellite imaging processing capabilities with their applications. The API can be utilized to enable batch processing, catalogs, and statistical analysis. The API requires JSON formatted payloads and returns JSON responses. Sentinel Hub is a cloud-based satellite imagery system. This platform offers global coverage, multi-temporal processing, and customized scripting."], "Url": ["https://docs.sentinel-hub.com/api/latest/api/overview/"], "Category": ["Cloud", "Images", "Satellites"], "Provider": ["Sinergise Laboratory"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.sentinel-hub.com/api/latest/reference/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://services.sentinel-hub.com/api/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "60"}}
{"API name": ["Ambee REST API v1.0"], "Description": [" Ambee provides an environment API with methods for real-time weather, air quality, water vapor, soil data, and pollen count. This API enables users to get accurate & actionable proprietary data insights. Ambee provides Environmental Intelligence for a Healthier World."], "Url": ["https://docs.ambeedata.com/"], "Category": ["Environment", "Agriculture", "Climate", "Fire", "Health", "Monitoring", "Water", "Weather"], "Provider": ["DataAir"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.ambeedata.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.ambeedata.com/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "61"}}
{"API name": ["Clean Power Research PowerClerk REST API v1.0"], "Description": [" The PowerClerk API allows programmatic access to the following basic PowerClerk functions; project creation, editing, and submission. PowerClerk is a Distributed Energy Resource (DER) program management SaaS from Clean Power Research. Authorized access requires an API Key with user authentication that utilizes Basic Authentication. Clean Power Research builds services for energy transformation with cloud software to engage customers, automate programs, integrate solar and more."], "Url": ["https://developers.cleanpower.com/application_process_automation/api-method-refe\u2026"], "Category": ["Weather", "Data", "Energy", "Environment", "Solar"], "Provider": ["Clean Power Research"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.cleanpower.com/application_process_automation"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.powerclerk.com/Services.svc/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "62"}}
{"API name": ["MetOcean Hindcast Statistics REST API v1.0.0"], "Description": [" This MetOcean API provides access to 37 years of data about oceans, including frequency of wave height, period and direction for each month, frequency of wind speed and others. This REST API retrieves statistics from MetOcean for specific location sites and along routes, and returns data in CF-JSON format. MetOcean Solutions is a science-based consultancy that offers specialist numerical modeling and analytical services in meteorology and oceanography."], "Url": ["https://www.metocean.co.nz/apis"], "Category": ["Weather", "Marine", "Metadata", "Science", "Statistics"], "Provider": ["Meteorological Service of New Zealand"], "ServiceType": ["Web/Internet"], "Documentation": ["http://docs.stats.metoceanapi.com"], "Architectural Style": ["REST"], "Endpoint Url": ["https://stats.metoceanapi.com/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "63"}}
{"API name": ["MetOcean Forecast Data Time Series REST API v0.3"], "Description": [" This MetOcean API provides access to MetOcean weather Forecast data such as sea surface temperature, visibility, wave height, period and direction of total sea state and swell, wind speed and direction. air temperature, and ocean surface currents. This REST API accepts location or a series of sites as query parameters to extract data from available models with data that is returned in CF-JSON format. MetOcean Solutions is a science-based consultancy that offers specialist numerical modeling and analytical services in meteorology and oceanography."], "Url": ["https://www.metocean.co.nz/apis"], "Category": ["Weather", "Marine", "Metadata", "Science"], "Provider": ["Meteorological Service of New Zealand"], "ServiceType": ["Web/Internet"], "Documentation": ["http://docs.forecast.metoceanapi.com"], "Architectural Style": ["REST"], "Endpoint Url": ["https://forecast.metoceanapi.com/v0"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "64"}}
{"API name": ["The Green Web Foundation REST API v1.0"], "Description": [" The Green Web Foundation API returns domain data indicating if a website runs on renewable energy. The Green Web Apps show in a browser the source of energy of every visited site. To date, Internet users have performed well over half a billion checks with the apps, monitoring the emergence of The Green Web."], "Url": ["https://www.thegreenwebfoundation.org/green-web-feed/"], "Category": ["Sustainability", "Domains", "Energy", "Environment", "Search", "Solar"], "Provider": ["The Green Web Foundation"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.thegreenwebfoundation.org/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.thegreenwebfoundation.org/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "65"}}
{"API name": ["Clean Power Research Irradiance and Weather Data REST API v2.0"], "Description": [" The Clean Power Research Irradiance and Weather Data API allows users to request irradiance (the rate at which solar energy falls onto a surface) and weather data. The WeatherData endpoint returns available data such as Global Horizontal Irradiance, Direct Normal Irradiance, Diffuse Horizontal Irradiance, 10-Meter Height Wind Speed and many others. This API supports HTTP GET and POST with XML data and access that requires the utilization of Basic Authentication via username and password, and requests also need the use of HTTPS. Clean Power Research builds services for energy calculation, simulation, and automation."], "Url": ["https://developers.cleanpower.com/irradiance-and-weather-data"], "Category": ["Weather", "Data", "Energy", "Environment", "Solar"], "Provider": ["Clean Power Research"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.cleanpower.com/irradiance-and-weather-data/rest-basics"], "Architectural Style": ["REST"], "Endpoint Url": ["https://service.solaranywhere.com/api/v2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "66"}}
{"API name": ["Clean Power Research Utility Rates and Bill Savings REST API v2.0"], "Description": [" The Clean Power Research Utility Rates and Bill Savings API provides a way to perform detailed energy bill calculations. Get data about electric bill charges, energy usage, individual charges and more. This API supports HTTP GET and POST with JSON and may also support XML with certain requests. Access requires the utilization of Basic Authentication via username and password that are sent in the request header, and requests also need the use of HTTPS. Clean Power Research builds services for energy calculation, simulation, and automation."], "Url": ["https://developers.cleanpower.com/utility-rates-bill-savings"], "Category": ["Energy", "Data", "Energy", "Environment"], "Provider": ["Clean Power Research"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.cleanpower.com/utility-rates-bill-savings/rest-basics"], "Architectural Style": ["REST"], "Endpoint Url": ["https://service.getpowerbill.com/api/v2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "67"}}
{"API name": ["Clean Power Research Solar Simulations REST API v2.0"], "Description": [" Clean Power Research builds services for energy calculation, simulation, and automation. The Clean Power Research Solar Simulations API provides access to irradiance and weather data. All Solar Simulation API methods support XML. The API can simulate PV output to receive AC energy production, Plane Of Array Irradiance (POAI), solid and liquid precipitation, and more."], "Url": ["https://developers.cleanpower.com/solar-simulations"], "Category": ["Solar", "Data", "Energy", "Environment"], "Provider": ["Clean Power Research"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.cleanpower.com/solar-simulations/rest-basics"], "Architectural Style": ["REST"], "Endpoint Url": ["http://service.solaranywhere.com/api/v2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "68"}}
{"API name": ["WeatherOps Climate Analysis REST API v1.0"], "Description": [" The WeatherOps Climate Analysis API retrieves degree days, precipitation, relative humidity, solar radiation, temperature, wind, evapotranspiration, and climatology data in JSON format. Responses can be about historical, current, or forecast data for any area, such as an agriculture field, urban area, or utility service area, with time series specifications. WeatherOps tools are powered by DTN to provide businesses with actionable insights."], "Url": ["https://www.weatherops.com/apis-climate-analysis"], "Category": ["Weather", "Climate", "Solar"], "Provider": ["DTN"], "ServiceType": ["Web/Internet"], "Documentation": ["http://docs.api.wdtinc.com/insight-api/en/latest/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://insight.api.wdtinc.com/daily-high-temperature/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "69"}}
{"API name": ["Bird.i Tiles REST API v1.0"], "Description": [" The Bird.i Tiles API allows users to view image impressions from satellite imagery as a layer within a mapping application. It enables you with the ability to use \u201cGet Tile\u201d to return a single image tile with the provided coordinates. Bird.i is a Scottish tech start-up that provides high resolution satellite imagery and machine learning technology to businesses globally."], "Url": ["https://hibirdi.com/apis/birdi-apis"], "Category": ["Images", "Business", "Machine Learning", "Mapping", "Metadata", "Satellites"], "Provider": ["Birdi"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.hibirdi.com"], "Architectural Style": ["REST"], "Endpoint Url": ["https://tiles-api.hibirdi.com/tiles"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "70"}}
{"API name": ["Bird.i Image REST API v1.0"], "Description": [" The Bird.i Image API provides the ability to retrieve an image from the Bird.i satellite imagery service. It allows you to return a single image tile for a given location using the provided coordinates and image ID. Bird.i is a Scottish tech start-up that provides high resolution satellite imagery and machine learning technology to businesses globally."], "Url": ["https://hibirdi.com/apis/birdi-apis"], "Category": ["Images", "Business", "Machine Learning", "Metadata", "Satellites"], "Provider": ["Birdi"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.hibirdi.com"], "Architectural Style": ["REST"], "Endpoint Url": ["https://image-api.hibirdi.com/image"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "71"}}
{"API name": ["Bird.i Catalog REST API v1.0"], "Description": [" The Bird.i Catalog API provides the ability to browse and search imagery and metadata from the Bird.i satellite imagery catalog. It allows you to retrieve information about images in the Bird.i catalog, return a list of available images, return catalog data for images and more. Bird.i is a Scottish tech start-up that provides high resolution satellite imagery and machine learning technology to businesses globally."], "Url": ["https://hibirdi.com/apis/birdi-apis"], "Category": ["Images", "Business", "Machine Learning", "Metadata", "Satellites"], "Provider": ["Birdi"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.hibirdi.com"], "Architectural Style": ["REST"], "Endpoint Url": ["https://catalog-api.hibirdi.com/catalog"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "72"}}
{"API name": ["MyRadar Weather and Nowcasting REST API v0.99"], "Description": [" The MyRadar Weather and Nowcasting API offers its in-house industry-leading nowcasting support, including up-to-the-minute rain prediction using our patent-pending algorithms. It is also a drop-in replacement for the former Dark Sky API.\nInterested developers should contact "], "Url": ["http://myradar.com"], "Category": ["Weather", "Environment"], "Provider": ["Acme Atron-o-matic"], "ServiceType": ["Web/Internet"], "Documentation": ["https://myradar.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://myradar.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "73"}}
{"API name": ["Shipfinder REST API v1.0"], "Description": [" The Shipfinder API displays data with a ship's location. It embeds a ships position and a map in a user's business system or website, creating vessel management and monitoring system.\nDevelopers can access ship search, single ship, multiple ships, and area ships in JSON formats."], "Url": ["http://api.shipfinder.com/"], "Category": ["Marine", "Boating", "Satellites"], "Provider": ["Shipfinder"], "ServiceType": ["Web/Internet"], "Documentation": ["http://api.shipfinder.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.shipfinder.com/apicall/QueryShip"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "74"}}
{"API name": ["Natural Resources Wales River Levels REST API v1.0"], "Description": [" The Natural Resources Wales River Levels API allows developers to retrieve readings on river levels taken at measurement stations across Wales. Developers can retrieve all river levels or just river levels for a given location or with a given status. Results are returned as a single GeoJSON data structure."], "Url": ["https://api-portal.naturalresources.wales/docs/services/"], "Category": ["Water", "Environment", "Nature"], "Provider": ["Natural Resources Wales"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api-portal.naturalresources.wales/docs/services/577521aed81b570928363e10/operations/577521e0d81b570928363e11"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.naturalresources.wales/riverlevels/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "75"}}
{"API name": ["Rock Seven REST API v2.0"], "Description": [" Rock Seven provides satellite tracking products and IoT devices for government, military, NGOs, and private institutions. The Rock Seven API allows developers to send messages to RockSTAR devices, and retrieve configurations. This platform utilizes the Iridium satellite network for voice and data information coverage."], "Url": ["https://docs.rock7.com/reference"], "Category": ["Satellites", "Internet of Things", "Military"], "Provider": ["Rock Seven"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.rock7.com/reference"], "Architectural Style": ["REST"], "Endpoint Url": ["https://core.rock7.com/API2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "76"}}
{"API name": ["NatureServe Explorer REST API v1.1.2"], "Description": [" The NatureServe API provides access to NatureServe's information about more than 100,000 rare and endangered species and ecosystems in the Americas which are published on NatureServe Explorer. JSON formats are available to perform HTTP requests and receive HTTP responses. Overview of search services include species taxonomy, scientific taxonomy, ecosystems taxonomy, status, and location. NatureServe is a non-profit consortium of biodiversity scientists that works with 100 network organizations and over 1,000 conservation scientists to collect, analyze, and standardize biodiversity data."], "Url": ["https://explorer.natureserve.org/api-docs/"], "Category": ["Science", "Data", "Education", "Environment", "Nature", "Sustainability"], "Provider": ["NatureServe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://explorer.natureserve.org/api-docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://explorer.natureserve.org/api/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "77"}}
{"API name": ["Environment Agency Real Time Flood-Monitoring REST API v0.8"], "Description": [" The Environment Agency Real Time Flood-Monitoring API displays information related to U.K. flood warnings and flood alerts, flood areas which to which warnings or alerts apply, measurements of water levels and flows, and information on the monitoring stations providing those measurements.\nThe API provides a REST-style access to the data via simple HTTP GET requests which return data in JSON format. Some data is also available in RDF and XML formats."], "Url": ["https://environment.data.gov.uk/flood-monitoring/doc/reference"], "Category": ["Environment", "England"], "Provider": ["Crown"], "ServiceType": ["Web/Internet"], "Documentation": ["https://environment.data.gov.uk/flood-monitoring/doc/reference"], "Architectural Style": ["REST"], "Endpoint Url": ["http://environment.data.gov.uk/flood-monitoring"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "78"}}
{"API name": ["Climate FieldView Platform REST API v4.0.11"], "Description": [" The Climate FieldView Platform API retrieves crop performance in agricultural fields, based on climate conditions. Manage argonomic data such as field boundries, field data, resource owner, and farm organization data.\nUse Jason Web Token to authenticate and make calls in JSON format.\nClimate Fieldview provides crop performance analysis, field health imagery, variable rate prescriptions, fertility management, data connectivity, and data visualization for farms."], "Url": ["https://dev.fieldview.com/technical-documentation/"], "Category": ["Climate", "Agriculture"], "Provider": ["The Climate Corporation"], "ServiceType": ["Web/Internet"], "Documentation": ["https://dev.fieldview.com/technical-documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://platform.climate.com/v4/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "79"}}
{"API name": ["NASA Power REST API v1.0"], "Description": [" NASA POWER API allows external applications to connect and interact with POWER Data, which is solar and meteorogical data from satellite observations. Examples are available in Python for Solar, Meteorology, Operations and more. The POWER Project is supported by NASA Earth Science's Applied Sciences Program and provides solar and meteorological data sets that support renewable energy, building energy efficiency and agriculture."], "Url": ["https://power.larc.nasa.gov/docs/services/api/"], "Category": ["Science", "Agriculture", "Data", "Energy", "Satellites", "Solar", "Weather"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["https://power.larc.nasa.gov/docs/services/api/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://power.larc.nasa.gov/cgi-bin/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "80"}}
{"API name": ["OpenTopography REST API v1.0"], "Description": [" The OpenTopography API facilitates access to high resolution Earth topography data.\nThis RESTful Web service for global raster data returns metadata catalogs, data management, processing, and analysis, and data space. The data was collected during the NASA Shuttle Endeavour Radar Topography Mission in February, 2000. Raster data is geospatial data based on a matrix of square areas.\nThis project is supported by the National Science Foundation. The OpenTopography facility is located in the San Diego Supercomputer Center, at the University of California in San Diego."], "Url": ["https://opentopography.org/developers#SRTM"], "Category": ["Nature", "Data", "Geology", "Mapping", "Science"], "Provider": ["Open Topography"], "ServiceType": ["Web/Internet"], "Documentation": ["https://opentopography.org/developers"], "Architectural Style": ["REST"], "Endpoint Url": ["https://portal.opentopography.org/otr/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "81"}}
{"API name": ["GeoGarage REST API v1.0"], "Description": [" The GeoGarage API displays nautical charts for web and mobile. Services include interoperability with geospatial solutions, geo-referenced digital nautical charts processed in the GeoGarage Tiling Engine, and returns of nautical time zones in maritime areas.\nGeoGarage provides a business-to-business online mapping service with a new API that is already in use by different public and private-sector organizations. The Geogarage API plugs across all browsers and operating systems."], "Url": ["https://www.geogarage.com/blog/news-1/post/geogarage-time-zone-api-31"], "Category": ["Marine", "Charts", "Mapping", "Platform-as-a-Service", "Time", "Water"], "Provider": ["GeoGarage"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.geogarage.com/blog/news-1/post/geogarage-time-zone-api-31"], "Architectural Style": ["REST"], "Endpoint Url": ["https://geogarage.com/api/timezone/xml?location=Lat,Lon&amp;timestamp=time&amp;key=API_KEY"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "82"}}
{"API name": ["Weatherbit Climate Normals REST API v2.0"], "Description": [" The Weatherbit API returns 30 year historical climate normals ranging from monthly to hourly intervals with a period of calculation of 1981 to 2010. Data is sourced from the ERA5-Land dataset. Developers can programatically retrieve temporal averages for temperature, dew point, wind speed, precipitation, and snowfall. This API supports a spatial resolution of 9 kilometers. The Weatherbit Climate Normals API features REST architecture, and JSON formatted responses."], "Url": ["https://www.weatherbit.io/api/climate-normals"], "Category": ["Climate", "Weather"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api/climate-normals"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "83"}}
{"API name": ["r2server REST API v1"], "Description": [" The r2server API retrieves satellite data from r2cloud with telemetry, manages observations, and manages metrics from base stations. r2server allows developers to configure and install a base station, know how to build antennas, and get satellites telemetry in JSON format. r2cloud enables users to decode satellite signals on Raspberry Pi."], "Url": ["https://r2server.ru/api"], "Category": ["Satellites", "Internet of Things", "Science"], "Provider": ["r2server"], "ServiceType": ["Standard"], "Documentation": ["https://r2server.ru/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://r2server.ru/api/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "84"}}
{"API name": ["EcoMatcher TreeManager REST API v1.0"], "Description": [" The EcoMatcher TreeManager API integrates data about automated tree gifting. EcoMatcher lets users request tree planting as an addition to checkout payment. Customers can decide to add trees, increasing revenues and improving contribution to a greener world. The API provides methods to get tree data such as farmer name, tree name, company name, company URL, company image, tree latitude and longitude based on SKU, or Gift Code."], "Url": ["https://www.ecomatcher.com/intro-api-integration/"], "Category": ["Sustainability", "Gifts", "Nature", "Payments"], "Provider": ["EcoMatcher"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.ecomatcher.com/intro-api-integration/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "85"}}
{"API name": ["Print Releaf REST API v1"], "Description": [" The Print Releaf API enables automatic reforesting for a company's paper consumption. The system allows exchanging paper consumption for trees in realtime. Users can send raw paper consumption data to be analyzed, and certifiably reforest the equivalent number of trees at the reforestation project.\nDevelopers can use API Keys to authenticate, make calls, and receive JSON formats in return. Developers can integrate PrintReleaf data about estimating, quoting, point-of-sale, or print monitoring with this API."], "Url": ["https://printreleaf.com/api"], "Category": ["Sustainability", "Environment", "Printing"], "Provider": ["PrintReleaf"], "ServiceType": ["Web/Internet"], "Documentation": ["https://printreleaf.com/docs/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.printreleaf.com/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "86"}}
{"API name": ["Weatherlogics climate REST API v1"], "Description": [" The Weatherlogics climate API provides a complete and high-quality climate data for Canada. With this family of APIs, developers can search for Canadian climate data, records, and normals for over 700 locations."], "Url": ["https://climate.weatherlogics.com"], "Category": ["Climate", "Weather"], "Provider": ["Weatherlogics"], "ServiceType": ["Product"], "Documentation": ["https://documenter.getpostman.com/view/8270641/SWLk3516"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherlogics.com/climate/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "87"}}
{"API name": ["City of Calgary Public Trees REST API v2.1"], "Description": [" The City of Calgary Public Trees API retrieves urban forest data location of trees, and trees on public land. Developers can authenticate with a token and make requests that will return JSON, XML, and CSV formats in return. See the urban forest management map at "], "Url": ["https://dev.socrata.com/foundry/data.calgary.ca/tfs4-3wwa"], "Category": ["Cities", "Canadian", "Environment", "Nature", "Open Data"], "Provider": ["The City of Calgary"], "ServiceType": ["Web/Internet"], "Documentation": ["https://dev.socrata.com/foundry/data.calgary.ca/tfs4-3wwa"], "Architectural Style": ["REST"], "Endpoint Url": ["https://data.calgary.ca/resource/tfs4-3wwa.json"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "88"}}
{"API name": ["City of Calgary Historical Air Quality REST API v2.1"], "Description": [" The City of Calgary Historical Air Quality API retrieves historical air quality data collected by the Calgary Region Airshed Zone and submitted to Alberta Environment and Parks (AEP). In addition to air quality monitoring data, an Air Quality Health Index (AQHI) is calculated hourly at certain monitoring stations, providing a number from 1 to 10+ that indicates the relative health risk associated with local air quality."], "Url": ["https://dev.socrata.com/foundry/data.calgary.ca/uqjm-jxgp"], "Category": ["Cities", "Canadian", "Environment"], "Provider": ["The City of Calgary"], "ServiceType": ["Web/Internet"], "Documentation": ["https://dev.socrata.com/foundry/data.calgary.ca/uqjm-jxgp"], "Architectural Style": ["REST"], "Endpoint Url": ["https://data.cityofchicago.org/resource/ydr8-5enu.json?"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "89"}}
{"API name": ["AerisWeather Air Quality REST API"], "Description": [" The Aeris Weather Air Quality API retrieves interpolated GeoJSON data or specific stations based on a query action. The API includes air quality index (AQI), category, dominant pollutant, and information for pollutants when available. Users can query about ozone, carbon monoxide, nitrogen dioxide, station ID and location, and more. AerisWeather provides a weather service for business needs and custom weather influenced solutions"], "Url": ["https://www.aerisweather.com/support/docs/api/reference/endpoints/airquality/"], "Category": ["Weather", "Environment", "Mapping"], "Provider": ["AerisWeather"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.aerisweather.com/support/docs/api/reference/endpoints/airquality/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.aerisapi.com/airquality"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "90"}}
{"API name": ["Weatherbit Historical Energy Weather REST API v2.0"], "Description": [" This Weatherbit API returns historical weather data specific to the energy industry from a network of over 120,000 stations. The API allows you to retrieve cooling or heating degree data and other information for sun hours, precipitation, snowfall and more. It is Get requests that returns aggregate energy specific historical weather fields, over a specified time period and UP TO 150 stations. The supported response format is JSON with an API Key required for authentication. Weatherbit.io is historical weather, current weather, and forecasts API's."], "Url": ["https://www.weatherbit.io/api/weather-energy"], "Category": ["Weather", "Climate", "Energy", "Environment"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/history/energy"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "91"}}
{"API name": ["Weatherbit Historical Ag-Weather REST API v2.0"], "Description": [" This Weatherbit API returns historical weather data specific to the Agriculture industry. Users can retrieve forecasted soil temperature, soil moisture, evapotranspiration and more. The supported response format is JSON with an API Key required for authentication. Weatherbit.io is historical weather, current weather, and forecasts API's."], "Url": ["https://www.weatherbit.io/api/ag-weather-api"], "Category": ["Weather", "Agriculture", "Climate", "Environment"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/history/agweather"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "92"}}
{"API name": ["Weatherbit Severe Weather Alerts REST API v2.0"], "Description": [" This Weatherbit API provides severe weather alerts from local meteorological agencies for the US, EU member nations, and others. It is a Get request for severe weather alerts issued by meteorological agencies for provided parameters. The supported response format is JSON with an API Key required for authentication. Weatherbit.io is historical weather, current weather, and forecasts API's."], "Url": ["https://www.weatherbit.io/api/alerts"], "Category": ["Weather", "Climate", "Environment", "Health"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/alerts"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "93"}}
{"API name": ["Weatherbit Historical Weather Hourly REST API v2.0"], "Description": [" This Weatherbit API returns historical hourly weather data from a network of over 120,000 stations from a nearby reporting station. It is Get Requests that provides a way to Get history by lat/lon, Get history by city name, Get history by postal code and more. The supported response format is JSON with an API Key required for authentication. Weatherbit.io is historical weather, current weather, and forecasts API's."], "Url": ["https://www.weatherbit.io/api/weather-history-hourly"], "Category": ["Weather", "Agriculture", "Climate", "Environment"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "94"}}
{"API name": ["Weatherbit Bulk Download REST API v2.0"], "Description": [" The Weatherbit Bulk Download API provides current observations for many cities at once, or many stations at once and are accessible to Advanced plan users. Weatherbit.io provides historical weather, current weather, and forecast APIs."], "Url": ["https://www.weatherbit.io/api/bulk-datasets"], "Category": ["Weather", "Climate", "Environment"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/bulk/files"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "95"}}
{"API name": ["Weatherbit Ag-Weather Forecast REST API v2.0"], "Description": [" Weatherbit Ag-Weather Forecast API returns an 8-day forecast for weather data specific to the Agriculture industry. It allows you to retrieve predictions for soil temperature, soil moisture, evapotranspiration, and more. The supported response format is JSON with an API Key required for authentication.Weatherbit.io is historical weather, current weather, and forecasts APIs."], "Url": ["https://www.weatherbit.io/api/ag-weather-api-forecast"], "Category": ["Weather", "Agriculture", "Climate", "Environment", "Predictions"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/forecast/agweather"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "96"}}
{"API name": ["Weatherbit Hourly Weather Forecast REST API v2.0"], "Description": [" This Weatherbit API returns a 2 to 5-day forecast in 1 hour intervals for any point on the planet. It is Get requests that returns an hourly forecast when each point represents a one hour period for; Date, City, Postal and more. The supported response format is JSON with an API Key required for authentication. Weatherbit.io is historical weather, current weather, and forecasts API's."], "Url": ["https://www.weatherbit.io/api/weather-forecast-120-hour"], "Category": ["Weather", "Climate", "Environment", "Health"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/forecast/hourly"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "97"}}
{"API name": ["Ambience Data REST API v1.0"], "Description": [" The Ambience Data API provides real-time, hyperlocal, weather data and pollution data globally. It allows users access to detailed and accurate real-time or historical pollution data and weather forecasts with a simple REST API. This includes; Pollution, Weather and Hourly Forecast data for; a three-day forecast that returns the geocode weather for the current day up to three days, a forty eight-hourly forecast that returns the geocode weather for the current hour up to the next forty eight hours etc. Ambience Data provides an environmental sensor agnostic end-to-end IoT platform that supports smart sensors, monitoring, data analytics and more."], "Url": ["https://www.ambiencedata.com/api"], "Category": ["Data", "Environment", "Weather"], "Provider": ["Ambience Data"], "ServiceType": ["Web/Internet"], "Documentation": ["http://apis.ambiencedata.com"], "Architectural Style": ["REST"], "Endpoint Url": ["http://apis.ambiencedata.com/api"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "98"}}
{"API name": ["PathSense Indirect API"], "Description": [" The PathSense service provides geofencing capabilities for applications. The service features GPS accuracy in cities with tall buildings, tunnels, etc. This is indirect access to this service. Please refer to the corresponding SDKs below. The Android/iOS TruePath (road snapping) matches notoriously messy GPS data to roads, even in areas where tall buildings block the GPS signal, such as San Francisco, Chicago, and New York. Low power background location Continuous tracking of visits and paths, with near zero battery drain."], "Url": ["https://developer.pathsense.com"], "Category": ["Location", "Artificial Intelligence", "Background", "Geography", "Satellites"], "Provider": ["PathSense"], "ServiceType": ["Product"], "Documentation": ["https://developer.pathsense.com/documentation"], "Architectural Style": ["Indirect"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "99"}}
{"API name": ["Unofficial AirVisual REST API v1"], "Description": [" The Unofficial AirVisual API enables weather information, air pollution data, and health recommendations in third-party applications. This API can be used to get information and measurements by city, real-time weather data, key pollutant concentration values, and station names with coordinates."], "Url": ["https://rapidapi.com/apidojo/api/airvisual1"], "Category": ["Health", "Environment", "Weather"], "Provider": ["APIDojo"], "ServiceType": ["Web/Internet"], "Documentation": ["https://rapidapi.com/apidojo/api/airvisual1/endpoints"], "Architectural Style": ["REST"], "Endpoint Url": ["https://rapidapi.com/apidojo/api/airvisual1/endpoints"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "100"}}
{"API name": ["DicksonOne REST API"], "Description": [" The DicksonOne API returns JSON data about environmental monitoring. Methods are available for device monitoring for temperature, unit readings, events about device settings, and other sensor data. The API uses standard HTTP response codes and authentication. It is cloud-based and it provides alarm notification methods. DicksonOne is a cloud-based environmental monitoring system."], "Url": ["https://www.dicksonone.com/api/rest/docs#api-reference"], "Category": ["Environment", "Cloud", "Internet of Things", "Monitoring", "Reporting"], "Provider": ["DicksonOne"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.dicksonone.com/api/v2/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.dicksonone.com "], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "101"}}
{"API name": ["BreezoMeter Weather REST API v1.0"], "Description": [" The BreezoMeter Weather API allows developers to retrieve weather conditions - such as temperature, wind speed, humidity, and precipitation - for a specified location. This API can return the current conditions, the hourly forecast for up to five days, and the daily forecast for up to five days.\nBreezoMeter provides global, real-time air quality data that can help individuals make better health decisions based on their local air pollution levels and their personal sensitivities."], "Url": ["https://docs.breezometer.com/api-documentation/"], "Category": ["Weather", "Environment", "Location"], "Provider": ["BreezoMeter"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.breezometer.com/api-documentation/weather-api/v1/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.breezometer.com/weather/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "102"}}
{"API name": ["BreezoMeter Pollen REST API v2"], "Description": [" The BreezoMeter Pollen API allows developers to retrieve the daily pollen forecast for a given location. Returned information includes pollen types, plants, and indexes for the specified location.\nBreezoMeter provides global, real-time air quality data that can help individuals make better health decisions based on their local air pollution levels and their personal sensitivities."], "Url": ["https://docs.breezometer.com/api-documentation/"], "Category": ["Health", "Environment", "Weather"], "Provider": ["BreezoMeter"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.breezometer.com/api-documentation/pollen-api/v2/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.breezometer.com/pollen/v2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "103"}}
{"API name": ["BreezoMeter Fires REST API v1.0"], "Description": [" The BreezoMeter Fires API allows developers to retrieve current fire information for the area around a specified location. This is a new API which is currently in Beta. Additional functions may be added in the near future, but no breaking changes are expected to occur.\nBreezoMeter provides global, real-time air quality data that can help individuals make better health decisions based on their local air pollution levels and their personal sensitivities."], "Url": ["https://docs.breezometer.com/api-documentation/"], "Category": ["Safety", "Environment", "Weather"], "Provider": ["BreezoMeter"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.breezometer.com/api-documentation/fires-api/v1/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.breezometer.com/fires/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "104"}}
{"API name": ["Divesites REST API"], "Description": [" The Divesites API returns database information for scuba divers including location, weather, latitude & longitude, map, and tide stations. The API supports POST and GET methods, JSON and AJAX formats. Divesites API determines the location using Geo IP location and return sites in a radius from that point."], "Url": ["http://api.divesites.com/docs/"], "Category": ["Recreation", "Database", "Location", "Marine", "Sports", "Water", "Weather"], "Provider": ["Divesites"], "ServiceType": ["Web/Internet"], "Documentation": ["http://api.divesites.com/docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.divesites.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "105"}}
{"API name": ["AerisWeather Fires REST API v1"], "Description": [" The AerisWeather Fires API provides access to a dataset of active wildfires across the U.S. Data returned includes the type of fire, location, area (size), cause and percent contained. AerisWeather provides a weather service for business needs and custom weather influenced solutions. It enables you with the ability to create your own weather data, with Weather API\u2019s and developer toolkits."], "Url": ["https://www.aerisweather.com/support/docs/api/reference/endpoints/fires"], "Category": ["Weather", "Environment", "Fire", "Mapping"], "Provider": ["AerisWeather"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.aerisweather.com/support/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.aerisapi.com/fires"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "106"}}
{"API name": ["Boats Group Inventory REST API"], "Description": [" The Boats Group Inventory API provides detailed boating related information. This interface supports methods to perform searches, and access resources in several standard units of length and currencies. This information is provided in JSON, XML or PLIST format. API Keys are required to authenticate. Boats Group is a recreational marine industry service that operates Boat Trader, YachtWorld, boats.com, Cosas De Barcos, and YachtCloser."], "Url": ["http://api.boats.com/docs/services/details?s=inventory"], "Category": ["Boating", "Data", "Directories", "Marine", "Marketplace"], "Provider": ["Boats Group"], "ServiceType": ["Web/Internet"], "Documentation": ["http://api.boats.com/docs/services/details"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.boats.com/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "107"}}
{"API name": ["USFS Major Fires FIRE REST API v1.0"], "Description": [" The FIRE API is a USFS service that provides access to forest service data and logs Current Large Incidents. The data is available as a single day kmz, or a remote csv. This service retrieves any day of logged large incidents and returns it as geoJSON. It returns the object of a parameter date's large fire incidents in JSON or JSONp. The Forest Service manages public lands in national forests and grasslands, which encompass 193 million acres."], "Url": ["http://fire-api.herokuapp.com"], "Category": ["Environment", "Data", "Nature", "Safety"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://fire-api.herokuapp.com/api/v1.0"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "108"}}
{"API name": ["Amentum Atmosphere REST API v1.1.1"], "Description": [" Instantly access empirical models of atmospheric density and composition that are recommended by the Committee on Space Research (COSPAR) for satellite drag calculations.\nAPI requests must contain a key \"API-Key\" in the header (see code samples). Obtain a key from https://developer.amentum.io\nThe NRLMSISE-00 model was developed by the US Naval Research Laboratory. It is based on mass spectrometry and incoherent radar scatter data, includes drag and accelerometer data, and accounts for anomalous oxygen at high altitudes. It is recommended by the International Committee on Space Resarch (COSPAR) as the standard for atmospheric composition.\nThe API now automatically updates the Ap and F10.7 cm radio flux indices unless provided by the user.\nThe JB2008 (Jacchia-Bowman) model is a newer model developed by Space Environment Technologies and the US Air Force Space Command. The model accounts for various phenomena related to EUV heating of the thermosphere and uses the DST index as the driver of global density changes. The model is complementary to the NRLMSISE00 model and is more accurate during times of high solar activity and geomagnetic storms. It is recommended by COSPAR as the standard for thermospheric density in satellite drag calculations.\nThe API now automatically updates the indices needed to account for global density variations due to geomagnetic storms and EUV heating."], "Url": ["https://amentum.space/atmosphere"], "Category": ["Science", "Satellites", "Science"], "Provider": ["Amentum"], "ServiceType": ["Web/Internet"], "Documentation": ["https://atmosphere.amentum.space"], "Architectural Style": ["REST"], "Endpoint Url": ["https://atmosphere.amentum.io"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "109"}}
{"API name": ["Mushroom Observer REST API"], "Description": [" The Mushroom Observer API allows developers to integrate mushroom related resources with applications. The API can be utilized to access entry points to retrieve images, comments, locations, names, projects, and sequences. This information is available in JSON format. The API requires API Keys for authentication."], "Url": ["https://github.com/MushroomObserver/mushroom-observer/blob/master/README_API.md"], "Category": ["Science", "Data", "Nature", "Photos"], "Provider": ["Mushroom Observer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://github.com/MushroomObserver/mushroom-observer/blob/master/README_API.md"], "Architectural Style": ["REST"], "Endpoint Url": ["http://mushroomobserver.org/api/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "110"}}
{"API name": ["Beach and Creek Monitoring Results San Mateo REST API"], "Description": [" The Beach and Creek Monitoring Results San Mateo API returns water data in JSON, CSV, and XML formats. With the API, developers can implement water data indicating E.Coli, Enterococcus, and Coliform bacteria. Water samples from natural recreational waters in San Mateo County are sampled each week."], "Url": ["https://dev.socrata.com/foundry/data.smcgov.org/kpd9-xf4h"], "Category": ["Water", "Nature"], "Provider": ["County of San Mateo California"], "ServiceType": ["Web/Internet"], "Documentation": ["https://dev.socrata.com/foundry/data.smcgov.org/kpd9-xf4h"], "Architectural Style": ["REST"], "Endpoint Url": ["https://data.smcgov.org/resource/kpd9-xf4h.json"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "111"}}
{"API name": ["The Whale Hotline REST API"], "Description": [" The Whale Hotline API allows developers to access public sighting reports of marine mammals. The Hotline receives thousands of sightings every year. Sightings can be filtered by species, orca type, orca pod, date and time, and location. Data is available in JSON format.\nThis API is provided by The Whale Museum."], "Url": ["http://hotline.whalemuseum.org/api"], "Category": ["Animals", "Marine", "Nature"], "Provider": ["Whale Museum"], "ServiceType": ["Web/Internet"], "Documentation": ["http://hotline.whalemuseum.org/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://hotline.whalemuseum.org"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "112"}}
{"API name": ["MoonCalc REST API"], "Description": [" The MoonCalc API provides access to mooncalc.org to determine the course of the moon, moonrise, moon angle, full moon and lunar eclipse for any location and time. It allows you to integrate the calculation of the moon\u2019s location that is based on latitude, longitude, date, time and more."], "Url": ["https://www.torsten-hoffmann.de/web.html#mondverlauf"], "Category": ["Mapping", "Astronomy", "Nature", "Time"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.torsten-hoffmann.de/apis/suncalcmooncalc/link_en.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://mooncalc.org/#/lat,lon,zoom/date/time/objectlevel/maptype"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "113"}}
{"API name": ["SunCalc REST API"], "Description": [" The SunCalc API provides access to suncalc.org to determine the course of the sun, sunrise, sun angle, shadow length, solar eclipse for any location and time. It allows you to integrate the calculation of the sun's location that is based on latitude, longitude, date, time and more."], "Url": ["https://www.torsten-hoffmann.de/web.html#sonnenverlauf"], "Category": ["Mapping", "Astronomy", "Nature", "Time"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.torsten-hoffmann.de/apis/suncalcmooncalc/link_en.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://suncalc.org/#/lat,lon,zoom/date/time/objectlevel/maptype"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "114"}}
{"API name": ["BrAPI Breeding REST API v1.0"], "Description": [" The Breeding API (BrAPI) project is an effort to enable interoperability among plant breeding databases. BrAPI is a Standardized RESTful Web Service API Specification for communicating plant breeding data. This community driven standard is free to be implemented by any group interested in plant breeding data management. BrAPI manages information concepts like breeding programs and studies, scientific observations and variables, plant germplasm and pedigrees, and genotype sequences and markers. Learn more at brapi.org. Released on November 13, 2017. This version is now Archived for reference, please use the Latest Stable Release."], "Url": ["https://brapi.org"], "Category": ["Agriculture", "Database", "Flowers", "Food", "International", "Nature", "Open Source", "Science", "Standards", "Visualizations"], "Provider": ["BrAPI"], "ServiceType": ["Standard"], "Documentation": ["https://brapi.org/specification"], "Architectural Style": ["REST"], "Endpoint Url": [" https://test-server.brapi.org/brapi/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "115"}}
{"API name": ["Idaho Fish and Game Hunter Reports REST API"], "Description": [" The Idaho Fish and Game Hunter Reports API returns hunter reports for a subset of data about hunts, weapons, harvest, season, games, ornaments, and more in JSON format. The data is provided by the State of Idaho Fish and Game department."], "Url": ["https://fishandgame.idaho.gov/ifwis/rest/services/wildlife/mhr/readme.html"], "Category": ["Nature", "Education", "Fishing", "Recreation"], "Provider": ["Idaho Fish and Game"], "ServiceType": ["Web/Internet"], "Documentation": ["https://fishandgame.idaho.gov/ifwis/rest/services/wildlife/mhr/readme.html"], "Architectural Style": ["REST"], "Endpoint Url": [" http://fishandgame.idaho.gov/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "116"}}
{"API name": ["Fishbase REST API v1"], "Description": [" The Fishbase API returns fish data provided by rOpenSci, a non-profit that advocates for sharing of scientific data. With this API, developers can implement data about fish ecology, ecosystems, fecundity, food items, maturity, population growth, reproduction, species, and swimming. The REST API uses backend SQL and it queries data in JSON format. Learn more at "], "Url": ["https://fishbaseapi.readme.io/docs"], "Category": ["Science", "Animals", "Fishing", "Marine", "Nature", "Open Data", "Sustainability"], "Provider": ["Fishbase", "rOpenSci"], "ServiceType": ["Web/Internet"], "Documentation": ["https://github.com/ropensci/fishbaseapi"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "117"}}
{"API name": ["National Park Service REST API v1"], "Description": [" The National Park Service API returns parks' events, news, and alerts. With the API, developers can implement campgrounds, lesson plans, parks, people, places, and visitor centers into applications. They can authenticate with an API Key."], "Url": ["https://www.nps.gov/subjects/developer/api-documentation.htm"], "Category": ["Nature", "Countries", "Events", "Recreation"], "Provider": ["National Park Service"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.nps.gov/subjects/developer/api-documentation.htm"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "118"}}
{"API name": ["Powderhook Events REST API"], "Description": [" The Powderhook Events API returns hunting, fishing, and shooting events data in the United States. Data includes event title, location, description, host name, registration links, pricing, and more. It gets data from 50 state agencies as well as Cabela's, NWTF, MDF, Eventbrite, Kalkomey, and others. Interested developers can register for API and documentation access."], "Url": ["https://powderhook.com/events-landing"], "Category": ["Recreation", "Events", "Fishing", "Nature", "Sports"], "Provider": ["Powderhook"], "ServiceType": ["Web/Internet"], "Documentation": ["https://powderhook.com/events-landing"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "119"}}
{"API name": ["Powderhook Map Data REST API"], "Description": [" The Powderhook Map Data returns outdoor location data, mapping services, and GIS data. With the API, developers can implement trips, recreation overlays, conservation initiatives, and geographic areas. The API and documentation are available to developers who register."], "Url": ["https://powderhook.com/data"], "Category": ["Recreation", "Data", "Mapping", "Nature"], "Provider": ["Powderhook"], "ServiceType": ["Web/Internet"], "Documentation": ["https://powderhook.com/data"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "120"}}
{"API name": ["Planet Tiles Data REST API v1.0"], "Description": [" The Planet Tiles API returns data about tiled imagery of the Earth in desktop and web applications that support XYZ and WMTS protocols. With the API, developers can discover and display imagery to display in web browsers. Planet provides daily satellite imagery and insights."], "Url": ["https://developers.planet.com/docs/basemaps/tile-services/#api-tile-service"], "Category": ["Satellites", "Geography", "Mapping", "Photos"], "Provider": ["Planet Labs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.planet.com/docs/apis"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "121"}}
{"API name": ["Weatherbit Live Air Quality REST API v2.0"], "Description": [" The Weatherbit current Air Quality API returns live air quality conditions, and air quality index scores for any point in the world. It also returns data on the 6 major surface pollutants - PM 2.5, PM 10, CO, SO2, NO2, and O3."], "Url": ["https://www.weatherbit.io/api/airquality-current"], "Category": ["Weather", "Climate", "Environment", "Health"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/current/airquality"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "122"}}
{"API name": ["Cloverly REST API v1.0"], "Description": [" Cloverly is an API for consuming carbon offsets. Additionally, it does have some endpoints for calculating carbon impact, but the primary function is the consumption of the carbon offsets."], "Url": ["https://cloverly.com/for-developers"], "Category": ["Environment", "Sustainability"], "Provider": ["Cloverly"], "ServiceType": ["Standard"], "Documentation": ["https://cloverly.com/documentation"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.cloverly.app"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "123"}}
{"API name": ["Environment Agency Water Quality Archive REST API"], "Description": [" The Environment Agency Water Quality Archive API returns JSON, CSV, and RDF formats with UK water quality data. Water samples are taken from the country and analyzed by laboratories. Data has been measured since the year 2000 until the present day, containing 4 million samples from 58,000 sample points."], "Url": ["https://environment.data.gov.uk/water-quality/view/doc/reference"], "Category": ["Environment", "England", "Water"], "Provider": ["Crown"], "ServiceType": ["Web/Internet"], "Documentation": ["https://environment.data.gov.uk/water-quality/view/doc/reference"], "Architectural Style": ["REST"], "Endpoint Url": ["http://environment.data.gov.uk/water-quality"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "124"}}
{"API name": ["World Bank Indicator REST API v2"], "Description": [" The World Bank Indicator API returns indicator queries about population, gross national income, and energy use in JSON and XML formats. With the API, developers can create applications targeting countries in development with data about food security, climate change, and access to energy."], "Url": ["https://datahelpdesk.worldbank.org/knowledgebase/articles/898599-indicator-api-q\u2026"], "Category": ["Demographics", "Banking", "Climate", "Education", "Energy", "Financial"], "Provider": ["World Bank Group"], "ServiceType": ["Web/Internet"], "Documentation": ["https://datahelpdesk.worldbank.org/knowledgebase/articles/898599-indicator-api-queries"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.worldbank.org/v2/indicator"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "125"}}
{"API name": ["CIMIS Web REST API"], "Description": [" The CIMIS Web API is a RESTful service that provides access to data about evapotranspiration (ETo) and weather from the CIMIS Weather Station Network and the Spatial CIMIS System. CIMIS stands for the California Irrigation Management Information System. The API can be used to operate Wi-Fi aware irrigation smart controllers, browser and mobile apps. The CIMIS Web API is managed by the California Department of Water Resources (DWR)."], "Url": ["https://et.water.ca.gov/Rest/Index"], "Category": ["Water", "Climate", "Environment", "Internet of Things", "Weather"], "Provider": ["State of California"], "ServiceType": ["Web/Internet"], "Documentation": ["https://et.water.ca.gov/Home/Index"], "Architectural Style": ["REST"], "Endpoint Url": ["http://et.water.ca.gov/api"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "126"}}
{"API name": ["British Antarctic Survey Marine Vessel Live Position REST API"], "Description": [" The British Antarctic Survey Marine Vessel Live Position API allows developers to retrieve vessel positions by call sign.\nThe British Antarctic Survey APIs provide access to scientific data, metadata, and website information. These services are still under development, and developers may need to contact the BAS Information Services team for access to private repositories."], "Url": ["https://www.bas.ac.uk/api/"], "Category": ["Marine", "England", "Environment", "Location", "Science"], "Provider": ["British Antarctic Survey"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.bas.ac.uk/api/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "127"}}
{"API name": ["RealEarth REST API"], "Description": [" RealEarth is a mapping data discovery platform developed by the Space Science and Engineering Center and the Cooperative Institute for Meteorological Satellite Studies at the University of Wisconsin-Madison. The API provides the latest simulations associated with meteorology, aviation, flood hazards, and more."], "Url": ["https://www.ssec.wisc.edu/realearth/"], "Category": ["Science", "Climate", "Mapping", "Weather"], "Provider": ["University of Wisconsin"], "ServiceType": ["Web/Internet"], "Documentation": ["https://realearth.ssec.wisc.edu/doc/api.php"], "Architectural Style": ["REST"], "Endpoint Url": ["https://realearth.ssec.wisc.edu/api/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "128"}}
{"API name": ["British Antarctic Survey Job Vacancies REST API"], "Description": [" The British Antarctic Survey Job Vacancies API allows developers to search for job vacancies by title.\nThe British Antarctic Survey APIs provide access to scientific data, metadata, and website information. These services are still under development, and developers may need to contact the BAS Information Services team for access to private repositories."], "Url": ["https://www.bas.ac.uk/api/"], "Category": ["Marine", "England", "Environment", "Jobs", "Science"], "Provider": ["British Antarctic Survey"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.bas.ac.uk/api/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "129"}}
{"API name": ["GEO DAB REST API v1.1.0"], "Description": [" The GEO DAB API aims to simplify application development by returning catalog services from the web, open searches with GEO, open archives initiatives, and web processing services. The REST API provides a Swagger URL. GEO (or Group On Earth Observations) operates GEOSS: Group On Earth Observations System of Systems, a set of coordinated, independent Earth observation, information and processing systems that interact for public an private use. GEO Discovery and Access Broker (DAB) is a middleware component which is in charge of interconnecting the heterogeneous and distributed capacities contributing to GEOSS."], "Url": ["http://api.eurogeoss-broker.eu/"], "Category": ["Sustainability", "Catalogs", "Climate", "Nature", "Reporting", "Water"], "Provider": ["Group on Earth Observations"], "ServiceType": ["Product"], "Documentation": ["http://api.geodab.eu/dab/api-rest-docs/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "130"}}
{"API name": ["FishWatch REST API v1"], "Description": [" The FishWatch API provides access to information on seafood sustainability. For a given fish species, the FishWatch API can return information on population, fishing rate, habitat impacts, bycatch, availability, source, taste, texture, and more.\nThis service and its content are provided by NOAA Fisheries to help spread information about the science behind U.S. sustainable seafood."], "Url": ["https://www.fishwatch.gov/resources"], "Category": ["Marine", "Animals", "Environment", "Fishing", "Food", "Nature", "Sustainability"], "Provider": ["NOAA"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.fishwatch.gov/resources"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.fishwatch.gov/api/species"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "131"}}
{"API name": ["British Antarctic Survey Antarctic Placenames REST API"], "Description": [" The British Antarctic Survey Antarctic Placenames API allows developers to retrieve place names from the SCAR Composite Gazetteer of Antarctica (CGA), a collection of all names of features that have been submitted by representatives of national gazetteers.\nThe British Antarctic Survey APIs provide access to scientific data, metadata, and website information. These services are still under development, and developers may need to contact the BAS Information Services team for access to private repositories."], "Url": ["https://www.bas.ac.uk/api/"], "Category": ["Marine", "England", "Environment", "Geography", "Science"], "Provider": ["British Antarctic Survey"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.bas.ac.uk/locations/v1/j"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "132"}}
{"API name": ["British Antarctic Survey Meteorology Data / SOSMET REST API"], "Description": [" The British Antarctic Survey Meteorology Data / SOSMET API allows developers to retrieve data from the SOS Meteorological Data Service.\nThe British Antarctic Survey APIs provide access to scientific data, metadata, and website information. These services are still under development, and developers may need to contact the BAS Information Services team for access to private repositories."], "Url": ["https://api.bas.ac.uk/meteorology/v1/"], "Category": ["Marine", "England", "Environment", "Science", "Weather"], "Provider": ["British Antarctic Survey"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.bas.ac.uk/api/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "133"}}
{"API name": ["Cal-Adapt REST API"], "Description": [" The Cal-Adapt API provides programmatic access to climate data via Cal-Adapt. It allows users to access only the data requested, without downloading the entire dataset. Cal-Adapt is developed by the Geospatial Innovation Facility at the University of California, Berkeley."], "Url": ["https://berkeley-gif.github.io/caladapt-docs/index.html"], "Category": ["Climate", "Data", "Environment", "Weather"], "Provider": ["UC Regents"], "ServiceType": ["Web/Internet"], "Documentation": ["https://cal-adapt.org/data"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.cal-adapt.org/api"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "134"}}
{"API name": ["USGS Earthquake Catalog REST API v1.0"], "Description": [" USGS Earthquake Catalog API allows custom searches for earthquake information using a variety of parameters. USGS develop new methods and tools to enable timely, relevant, and useful information about the Earth and its processes, and provides science about hazards, water, energy, minerals, and other natural resources. This service is an implementation of the FDSN Event Web Service Specification."], "Url": ["https://earthquake.usgs.gov/fdsnws/event/1"], "Category": ["Earthquakes", "Data", "Nature"], "Provider": ["USGS"], "ServiceType": ["Web/Internet"], "Documentation": ["https://earthquake.usgs.gov/ws"], "Architectural Style": ["REST"], "Endpoint Url": ["https://earthquake.usgs.gov/fdsnws/event/1/version"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "135"}}
{"API name": ["Magic Seaweed Forecast REST API"], "Description": [" The Magic Seaweed Forecast API allows access to core marine weather data for creative and interesting projects that support developers and surfers. The API requires a valid API key and follows Restful convention to query for information that retrieves a JSON array of data representing the forecast.\nThe Magic Seaweed Forecast service provides access to core weather and ocean open data, whose purpose is specifically for surfers and surfing but is also useful for a huge range of activities. Magic Seaweed supports global surf forecasting and news service."], "Url": ["https://magicseaweed.com/developer/forecast-api"], "Category": ["Sports", "Marine", "Open Data", "Water", "Weather"], "Provider": ["Magic Seaweed"], "ServiceType": ["Web/Internet"], "Documentation": ["https://magicseaweed.com/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["http://magicseaweed.com/api"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "136"}}
{"API name": ["Weatherbit Air Quality Forecast REST API v2.0"], "Description": [" The Weatherbit Air Quality Forecast returns hourly forecasted air quality conditions and air quality index score. It includes data on the 6 major surface pollutants - PM 2.5, PM 10, CO, SO2, NO2, and O3."], "Url": ["https://www.weatherbit.io/api/airquality-forecast"], "Category": ["Weather", "Climate", "Environment", "Health"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api/airquality-forecast"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/forecast/airquality"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "137"}}
{"API name": ["Hiking Project Data REST API"], "Description": [" The Hiking Project Data API provides access to some of the data found on the publicly available pages of the Hiking Project website. Developers can retrieve trails by maximum distance, minimum trail length, or minimum star rating. They can also get conditions for a given trail or retrieve a list of up to 200 of a user's to-dos."], "Url": ["https://www.hikingproject.com/data"], "Category": ["Sports", "Nature"], "Provider": ["Adventure Projects"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.hikingproject.com/data"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.hikingproject.com/data/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "138"}}
{"API name": ["eBird REST API v2.0"], "Description": [" The eBird API allows developers to programmatically retrieve data from the eBird website. Developers can retrieve birding observation information such as recent or notable observations within a region, observations of a given species within a region, recent nearby observations, and historic observations on a given date. Developers can also get information on regions, hotspots, bird taxonomy, and more."], "Url": ["https://documenter.getpostman.com/view/664302/S1ENwy59?version=latest"], "Category": ["Animals", "Nature", "Science"], "Provider": ["eBird"], "ServiceType": ["Web/Internet"], "Documentation": ["https://documenter.getpostman.com/view/664302/S1ENwy59"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.ebird.org/v2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "139"}}
{"API name": ["Mountain Project Data REST API"], "Description": [" REI's Mountain Project (via Adventure Projects) is a crowd-sourced guide to climbing areas and routes built by climbers, providing a definitive climbing resource. Contributors add areas and routes, detailed descriptions, photos, ratings, and comments to bring you an extensive guide to climbing around the world, with more added on a daily basis.\nThe Mountain Project API provides simple access to certain limited data. All of the data returned by the API is already available on publicly available pages on the Mountain Project site. The API can return returns general user information, the user's most recent ticks (keeping track of what you've climbed), auser's to-dos, details for up to 200 routes, and routes for a given query. All requests require a private key that identifies you. Data is returned in JSON.\nUsage of the API is at Mountain Project's sole discretion and may be discontinued at any time. Every request is tracked to be sure your code caches data and does not make excessive requests or your account will be deactivated."], "Url": ["https://www.mountainproject.com/data/"], "Category": ["Sports", "Geography", "Location", "Mapping", "Nature"], "Provider": ["Adventure Projects"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.mountainproject.com/data"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.mountainproject.com/data/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "140"}}
{"API name": ["Trefle REST API v1"], "Description": [" The Trefle API in REST architecture supports JSON format to return botanical data for plant species. With the API, developers could build farming robots, gardening apps, and search apps with information related to plants of the world. Trefle.io aims to deliver all plant information gathered from USDA, Tela Botanica, Tropicos, and International Plant Names Index (IPNI)."], "Url": ["https://trefle.io/reference"], "Category": ["Nature", "Agriculture", "Data", "Directories", "Hacking", "Nature", "Open Data", "Science"], "Provider": ["Trefle"], "ServiceType": ["Web/Internet"], "Documentation": ["https://trefle.io/reference"], "Architectural Style": ["REST"], "Endpoint Url": ["https://trefle.io"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "141"}}
{"API name": ["Meniscus Analytics Platform (MAP) REST API"], "Description": [" The Meniscus Analytics Platform (MAP) RESTful API easily allows users to fully integrate complex analytics directly into their own applications and dashboards.\nThe platform is a generic platform for delivering real-time analytics solutions. MAP provides the complete back-end solution to turning raw data into calculated metrics. The Meniscus Analytics Platform was initially developed in 2014 to overcome inherent scaling issues and the rigid database structure in Meniscus Calculation Engine (MCE) whilst also delivering several orders of magnitude improvements in calculation speed. MAP is built on top of MongoDB.\nMAP uses OAuth for authorization and a username/password combination for Authentication. The API calls can either use the OAuth username/password combination or they can use a Read Only API key that will be provided by Meniscus."], "Url": ["http://www.meniscus.co.uk/integrate-meniscus-api-into-your-applications/"], "Category": ["Software-as-a-Service", "Analytics", "Data", "Environment", "Weather"], "Provider": ["Meniscus"], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.meniscus.co.uk/integrate-meniscus-api-into-your-applications/map-api-documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://map-rainuk.meniscus.co.uk/MAP/ReadData/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "142"}}
{"API name": ["SunsetWx Sunburst Web REST API v1.0"], "Description": [" The Sunburst Web API allows you to fetch SunsetWx\u2019s sunrise and sunset quality predictions. Sunburst currently supports JSON format, with geographical data conforming to GeoJSON. Sunset Weather provides Sunset and Sunrise Predictions using an algorithm comprised of meteorological factors."], "Url": ["https://sunsetwx.com/sunburst"], "Category": ["Predictions", "Nature", "Weather"], "Provider": ["SunsetWx"], "ServiceType": ["Web/Internet"], "Documentation": ["https://sunburst.sunsetwx.com/v1/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["https://sunburst.sunsetwx.com/v1/quality"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "143"}}
{"API name": ["Blockstream Satellite REST API"], "Description": [" The Blockstream Satellite API is currently in Beta and is utilizing Lightning Testnet method for payment. The Blockstream RESTful Satellite API responds with a JSON object and allows you to submit messages for broadcast, that support broadcasting secure messaging, alternative blockchains, a global podcast and more. It provides a way to create applications that broadcast messages globally using the Blockstream Satellite network. It is open for anyone to integrate the API into existing applications or build new services that can send both encrypted and unencrypted data. The Blockstream Satellite network broadcasts the Bitcoin blockchain for free. Blockstream aims to reduce reliance on trust, by providing global Bitcoin and blockchain technology for financial markets."], "Url": ["https://www.blockstream.com/satellite-api"], "Category": ["Blockchain", "Bitcoin", "Financial", "Marketplace", "Satellites"], "Provider": ["Blockstream Corp."], "ServiceType": ["Web/Internet"], "Documentation": ["https://github.com/Blockstream/satellite-api"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "144"}}
{"API name": ["ClimBiz ADAPT Climate Projection REST API v1"], "Description": [" The ClimBiz ADAPT Climate Project API allows users to access climate projection information for different scenarios, data types (i.e. temperature, precipitation, etc), and geographies such as countries, states/provinces, etc."], "Url": ["http://api.climbiz.com:8084/documentation/"], "Category": ["Climate", "Predictions"], "Provider": ["ClimBiz"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.climbiz.com"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "145"}}
{"API name": ["Plant.id REST API"], "Description": [" The Plant.id API returns plant identification data in JSON format, using photos recognizable by deep machine learning. API Key is required to authenticate. Plant.id enables users to identify plants from images. It is powered by FlowerChecker."], "Url": ["https://plant.id/api"], "Category": ["Nature", "Agriculture", "Flowers", "Machine Learning", "Recognition"], "Provider": ["FlowerChecker"], "ServiceType": ["Web/Internet"], "Documentation": ["https://plant.id/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.plant.id/identify"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "146"}}
{"API name": ["Plant Image Analysis REST API"], "Description": [" The Plant Image Analysis API data can be accessed using a GET request that is constructed from a custom URL. The results are returned as a JSON file and may include data for Roots, Leaves, Measurements and more. The Plant Image Analysis Database provides a way to reference plant image analysis software and plant image datasets."], "Url": ["https://www.plant-image-analysis.org/api"], "Category": ["Images", "Analytics", "Database", "Nature", "Open Data", "Science"], "Provider": ["Plant Image Analysis"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.plant-image-analysis.org/api?type=dataset&amp;field=organ&amp;q=root-system"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "147"}}
{"API name": ["Sound Metrics Indirect API"], "Description": [" Sound Metrics is a provider of underwater acoustic technology with imaging sonars such as the ARIS Explorer. Sonar imaging has applications in evidence recovery (law enforcement), pipeline inspection, construction, military, and fish surveying. This API is accessible by using C# or F# calls; SDKs are provided by Sound Metrics."], "Url": ["http://www.soundmetrics.com/"], "Category": ["Water", "Audio", "Construction", "Fishing", "Images", "Marine", "Photos"], "Provider": ["Sound Metrics"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["Indirect"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "148"}}
{"API name": ["Seametrix REST API v1.2"], "Description": [" Seametrix API provides a REST API with sea distances and sea routing between ports and waypoints and comes along with a complete database of sea and inland ports and terminals across the globe."], "Url": ["https://seametrix.net/sea-distances-api/"], "Category": ["Shipping", "Boating", "Logistics", "Marine", "Shipping", "Software-as-a-Service", "Transportation", "Travel"], "Provider": ["Seametrix"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "149"}}
{"API name": ["trash nothing! REST API v1.0"], "Description": [" The trash nothing! API connects third-party applications with the trash nothing! platform which people can use to freecycle unwanted items. The API is used to retrieve user data, posts, group functionalities, upload photos, and more. This API responds in JSON format."], "Url": ["https://trashnothing.com/developer"], "Category": ["Community", "Environment", "Marketplace", "Social", "Sustainability"], "Provider": ["trash nothing"], "ServiceType": ["Web/Internet"], "Documentation": ["https://editor.swagger.io/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://trashnothing.com/api/v1.0/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "150"}}
{"API name": ["Unofficial SpaceX REST API v2.0"], "Description": [" This is an Unofficial SpaceX Open Source REST API for rocket, core, capsule, pad, and launch data. This public API does not require authentication and includes endpoints for; Launches, Rockets, Capsules, Company Info, Roadster Info and more. SpaceX designs, manufactures and launches advanced rockets and spacecraft."], "Url": ["https://github.com/r-spacex"], "Category": ["Data", "Air Travel", "Astronomy", "Satellites"], "Provider": ["Independent Developer"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.reddit.com/r/spacex"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.spacexdata.com/v2/launches"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "151"}}
{"API name": ["Searoutes REST API v1.0.0"], "Description": [" The searoutes.com API is a route optimization system that delivers GeoJSON data for routing on the water. The API supports street/ocean routing for inter-modal supply chains, fuel consumption, voyage weather, and piracy zones which can be avoided and displayed during mapping. Canals and inland rivers can also be used. API Keys are required for authentication."], "Url": ["https://discover.searoutes.com/api/"], "Category": ["Marine", "Shipping", "Weather"], "Provider": ["searoutes"], "ServiceType": ["Web/Internet"], "Documentation": ["https://discover.searoutes.com/wp-includes/swagger-ui"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.searoutes.com/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "152"}}
{"API name": ["California Coastal Commission Meeting Agendas REST API v1"], "Description": [" The California Coastal Commission Meeting Agendas API can be consumed with GET requests that display JSON format in return. It provides data on the items being addressed by the Commission at each of its monthly meetings. Each agenda includes Spanish language translations, URLs to reports, and results."], "Url": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Category": ["Marine"], "Provider": ["State of California"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.coastal.ca.gov/agendas/v1/:year/:month"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "153"}}
{"API name": ["California Coastal Commission Cleanup Day REST API v1"], "Description": [" The California Coastal Commission Cleanup Day is available with GET requests that display JSON format in return. It provides data on over 900 beaches and waterways where people contribute to the state's largest volunteer event. Each location includes attributes that define the characteristics of that cleanup location, such as organizer contact information and what to bring."], "Url": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Category": ["Marine", "Environment"], "Provider": ["State of California"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.coastal.ca.gov/ccd/v1/locations"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "154"}}
{"API name": ["California Coastal Commission Locations REST API v1"], "Description": [" The California Coastal Commission Locations API returns JSON data after making GET requests. It provides data on over 1500 public beaches spanning all 15 coastal counties. Each location includes attributes that define the characteristics of that beach, such as dog friendliness and wheelchair accessible."], "Url": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Category": ["Marine"], "Provider": ["State of California"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.coastal.ca.gov/access/v1/locations"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "155"}}
{"API name": ["California Coastal Commission Sea Level Rise Vulnerability REST API v1"], "Description": [" The California Coastal Commission Sea Level Rise Vulnerability API provides data on how rising seas put coastal resources in all 15 coastal counties at risk. Each county includes attributes such as economics, infrastructure, and public access.\nThe API eeturns JSON data by making GET requests, displaying counties and their respective SLR vulnerability synthesis."], "Url": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Category": ["Marine", "Environment"], "Provider": ["State of California"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.coastal.ca.gov/open-data/api-docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.coastal.ca.gov/vulnerability/v1/counties"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "156"}}
{"API name": ["Stormglass REST API"], "Description": [" The Storm Glass Marine Weather API allows fetching forecasts for any coordinate using conventional HTTP requests. When a request is successful, a response will be sent back in the form of a JSON object. API Key is required to authenticate."], "Url": ["https://docs.stormglass.io/"], "Category": ["Weather", "Marine"], "Provider": ["Stormglass"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.stormglass.io/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "157"}}
{"API name": ["Dockwa OnWater REST API v1"], "Description": [" Dokwa is an engineering company that provides a variety of technology products. The Dockwa OnWater API allows you to determine if a particular geographic point, in term of latitude and longitude parameters, is on water or land. The API conveys data in JSON format."], "Url": ["https://onwater.io/"], "Category": ["Geography", "Location", "Marine", "Water"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["https://onwater.io/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.onwater.io/api/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "158"}}
{"API name": ["BabbleLabs Clear Cloud Unspecified API v0.9.0"], "Description": [" The BabbleLabs Clear Cloud API allows developers to utilize speech enhancement for common format video and audio. It provides a way to enhance streaming audio content, upload an audio file to be enhanced, download the enhanced version, upload a video file with embedded audio to be enhanced, download the enhanced version and enhance the audio in the context of a video stream. BabbleLabs files are processed via cloud API in Google Cloud that delivers automated, zero-click speech enhancement processing. This includes the following audio and video formats; wav, mp3, aac, ogg, aiff, mp4 and mov. BabbleLabs is enhancing speech quality, accuracy, and personalization to power voice applications and devices."], "Url": ["https://babblelabs.com/products/clear-cloud/"], "Category": ["Audio", "Cloud", "Content", "Environment", "Video"], "Provider": ["BabbleLabs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://babblelabs.com/documentation/clear-cloud/0.9.0"], "Architectural Style": ["Unspecified"], "Endpoint Url": ["http://api.babblelabs.com/audioEnhancer "], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "159"}}
{"API name": ["OrbitalViews REST API v0.0.1"], "Description": [" The OrbitalViews API offers an agriculture interface with information related to elevation, water needs, solar radiation and more. The latest version supports NDVI, NDWI, Albedo, LAI, CIR, RGB and Biomass Variance maps. Developers can also expose their own data or algorithms for seamless integration with this API. API Keys are required for external requests."], "Url": ["https://orbitalviews.eu/description/"], "Category": ["Agriculture", "Analytics", "Data", "Photos", "Satellites"], "Provider": ["OrbitalViews"], "ServiceType": ["Web/Internet"], "Documentation": ["https://orbitalviews.eu/documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://orbitalviews.eu/description/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "160"}}
{"API name": ["Open AQ REST API v1.0"], "Description": [" OpenAQ uses a combination of open data and open source tools as well as a global, grassroots community to fight air inequality in different locations across the world. Use the Open AQ API to build apps that power a variety of air quality measurement tools. The API convey responses in JSON format."], "Url": ["https://docs.openaq.org"], "Category": ["Data", "Climate", "Countries", "Environment", "Localization", "Open Source"], "Provider": ["OpenAQ"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.openaq.org"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.openaq.org/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "161"}}
{"API name": ["Weatherbit Degree Day REST API v2.0"], "Description": [" The Historical Energy Weather API (Degree Days API) returns historical weather data specific to the energy industry from their network of over 38,000 stations. With this API, you can retrieve cooling or heating degree day data. Additionally, you can retrieve other valuable information like total sun hours, precipitation, snowfall, and more for any point in the world via postal code, latitude/longitude, city, or weather station ID.\nThe API has call limitations and pricing tiers, ranging from \"Free\" (75 calls per hour) to \"Advanced\" (30,000 calls/minute)"], "Url": ["https://www.weatherbit.io/api/weather-energy"], "Category": ["Weather", "Climate", "Energy"], "Provider": ["Weatherbit"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.weatherbit.io/api/weather-energy"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.weatherbit.io/v2.0/history/energy"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "162"}}
{"API name": ["ADMIRALTY UK Tidal REST API"], "Description": [" The ADMIRALTY UK Tidal API allows you to access tidal predictions for the UK coastline. It enables you with the ability to Get predictions of high tide and low tide times, locate permanent and temporary tide stations around the UK\u200b and more. ADMIRALTY provides news and updates on ADMIRALTY Maritime Data Solutions, global hydrographic and geospatial information."], "Url": ["https://www.admiralty.co.uk/digital-services/data-solutions/uk-tidal-api"], "Category": ["Marine", "Data", "News Services", "Predictions"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["https://admiraltyapi.portal.azure-api.net/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "163"}}
{"API name": ["Data.BaltimoreCity.Gov Vegetated Area REST API"], "Description": [" The Data.BaltimoreCity.Gov Vegetated Area API returns esriGeometryPolygon data with vegetated zones in the city of Baltimore. Supported Query Formats: JSON, AMF, geoJSON. See a live example at https://data.baltimorecity.gov/dataset/Vegetated-Area-egis_rest_services_OpenBaltimore_Ve/jraa-fcme This API is provided by OpenBaltimore, Baltimore City's Open Data Warehouse."], "Url": ["https://maps.baltimorecity.gov/egis/rest/services/OpenBaltimore/Vegetated_Area/M\u2026"], "Category": ["Cities", "Agriculture", "Data", "Mapping", "Nature", "Open Data"], "Provider": ["City of Baltimore"], "ServiceType": ["Web/Internet"], "Documentation": ["https://data.baltimorecity.gov/dataset/Vegetated-Area-egis_rest_services_OpenBaltimore_Ve/jraa-fcme"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "164"}}
{"API name": ["Atlas of Living Australia Taxonomy Name Matching REST API"], "Description": [" The Atlas of Living Australia Taxonomy Name Matching API provides a way to match scientific names to taxon concepts. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://biodiversity.org.au/nsl"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Nature", "Science", "Search"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://github.com/AtlasOfLivingAustralia/ala-name-matching"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "165"}}
{"API name": ["Atlas of Living Australia Regions REST API"], "Description": [" The Atlas of Living Australia Regions API is a Explorer web service to explore a region from a predefined set of regions or custom region. This includes state, territory, local governments, bio regions and more. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://regions.ala.org.au"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Lists", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://regions.ala.org.au/regions/regionList "], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "166"}}
{"API name": ["Atlas of Living Australia Dashboard REST API"], "Description": [" The Atlas of Living Australia Dashboard API is a Dashboard web service for giving data breakdowns across a range of applications. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://dashboard.ala.org.au/"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://dashboard.ala.org.au/dashboard/data"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "167"}}
{"API name": ["Atlas of Living Australia NSL REST API"], "Description": [" The Atlas of Living Australia NSL API is a National Species Lists web service for retrieving taxon concepts, names, publications and references. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://api.ala.org.au/apps"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://biodiversity.org.au"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "168"}}
{"API name": ["Atlas of Living Australia Lists REST API"], "Description": [" The Atlas of Living Australia Lists API is a species web service for for creating and editing lists of taxa. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://lists.ala.org.au"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://lists.ala.org.au/ws"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "169"}}
{"API name": ["Atlas of Living Australia Collectory REST API"], "Description": [" The Atlas of Living Australia Collectory API is a registry web service for interacting with attribution information. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://collections.ala.org.au"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://code.google.com/archive/p/ala-collectory/wikis"], "Architectural Style": ["REST"], "Endpoint Url": ["http://collections.ala.org.au/ws"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "170"}}
{"API name": ["Atlas of Living Australia DigiVol REST API"], "Description": [" The Atlas of Living Australia DigiVol API is a crowdsourcing web service for the volunteer portal. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://volunteer.ala.org.au/"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://volunteer.ala.org.au/ajax"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "171"}}
{"API name": ["Atlas of Living Australia Layers REST API"], "Description": [" The Atlas of Living Australia Layers API is an intersect web service for interacting with geospatial layers and provides spatial search capabilities. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["http://spatial.ala.org.au"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://spatial.ala.org.au/ws"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "172"}}
{"API name": ["Atlas of Living Australia BIE REST API"], "Description": [" The Atlas of Living Australia BIE API provides search web services for species data, names and profiles. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://bie.ala.org.au"], "Category": ["Australian", "Animals", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Nature", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "173"}}
{"API name": ["Navarik Inspection RPC API v1.7"], "Description": [" The Navarik Inspection API allows oil companies and inspection vendors to submit and retrieve data from the Navarik Inspection web service. This includes; Invoicing, Nominations, Time Logs, Utilities and more. Navarik provides physical operations software and data services for the commodity trading industry."], "Url": ["https://navarik-insp.readme.io/docs"], "Category": ["Data-as-a-Service", "Energy", "Marine", "Shipping"], "Provider": ["Navarik"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "174"}}
{"API name": ["IUCN Red List REST API v3"], "Description": [" The International Union for Conservation of Nature and Natural Resources (IUCN) Red List of Threatened species provides evaluation of conservation status of plant and animal species. The IUCN Red List API outputs the same data which is from the IUCN Red List website. The API provides endpoints to a variety of functional parameters including species, countries, species by country, species by region, and species by category, among others."], "Url": ["http://apiv3.iucnredlist.org/api/v3/docs"], "Category": ["Science", "Animals", "Lists", "Nature"], "Provider": ["International Union for Conservation of Nature"], "ServiceType": ["Web/Internet"], "Documentation": ["http://apiv3.iucnredlist.org/api/v3/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["http://apiv3.iucnredlist.org/api/v3/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "175"}}
{"API name": ["Storm Glass REST API"], "Description": [" The Storm Glass API gives developers access to global marine weather data from multiple sources using a single REST API.\nThe API returns marine weather forecasts for the next 7 days in hourly resolution. Forecasts include swell height, swell direction, swell period, wave height, wave direction, wave period, wind speed, wind direction, and air temperature."], "Url": ["https://stormglass.io/"], "Category": ["Marine", "Weather"], "Provider": ["Storm Glass"], "ServiceType": ["Web/Internet"], "Documentation": ["https://stormglass.io/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.stormglass.io/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "176"}}
{"API name": ["CarbonDoomsDay Web REST API"], "Description": [" The CarbonDoomsDay Web API is a RESTish Web service that is used to access climate change related data. It enables anyone to enhance NOAA's carbon dioxide data by building charts, sensor networks, and more. NOAA scientists measure the carbon dioxide in the Earth's atmosphere from Mauna Loa, Hawaii. CarbonDoomsDay provides a way to digest this public data for everyone."], "Url": ["https://github.com/giving-a-fuck-about-climate-change/carbondoomsday/wiki"], "Category": ["Data", "Climate", "Environment", "Science"], "Provider": ["CarbonDoomsDay"], "ServiceType": ["Web/Internet"], "Documentation": ["https://github.com/giving-a-fuck-about-climate-change/carbondoomsday"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.carbondoomsday.com/api/co2/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "177"}}
{"API name": ["OpenUV Global UV Index Forecast REST API v1.0"], "Description": [" The OpenUV Global UV Index Forecast API in JSON format provides Ultraviolet index data in real time. With the API, developers can build wearable apps, bots, and smart home assistants, based on data provided by The Royal Netherlands Meteorological Institute (KNMI), The National Institute of Water and Atmospheric Research (NIWA) of New Zealand, Ozone data from OMI datasets, AURA Satellite, and NASA. It includes JSON responses and API Key."], "Url": ["https://www.openuv.io"], "Category": ["Weather", "Climate", "Health", "Predictions"], "Provider": ["OpenUV"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.openuv.io/uvindex"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "178"}}
{"API name": ["USDA NASS Quick Stats REST API v1"], "Description": [" The National Agricultural Statistics Service (NASS) Quick Stats is an on-line database containing official published aggregate estimates related to U.S. agricultural production. NASS develops these estimates from data collected through:"], "Url": ["https://www.quickstats.nass.usda.gov/api"], "Category": ["Agriculture", "Animals", "Data", "Environment", "Food", "Government", "Statistics"], "Provider": ["USDA"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.quickstats.nass.usda.gov/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://quickstats.nass.usda.gov/api/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "179"}}
{"API name": ["Foreca Climate Data REST API"], "Description": [" The Foreca Climate Data API allows you to get annual weather statics at a glance. Based on measurements at official weather observation sites, this API offers accurate information about daily or monthly average temperatures and precipitation. Climate data is available via the API for any inland location specified by latitude-longitude coordinates and for all Foreca forecast locations (over 150.000 named locations worldwide).\nThe Foreca Climate Data API is helpful for websites wishing to inform their visitors and businesses who need to make decisions based on what the weather may be like be like two months in advance. For consumers, information about precipitation and temperature is helpful for travel planning.\nFor more detailed information, please complete the contact us form on the API's homepage, and a Foreca team member will assist you."], "Url": ["https://corporate.foreca.com/en/weather-data/climate-data"], "Category": ["Weather", "Climate", "Data", "Statistics"], "Provider": ["Foreca"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "180"}}
{"API name": ["Netherlands Biodiversity REST API v2.11"], "Description": [" The Netherlands Biodiversity API provides programmatic access to more than 8 million specimen records from the Natural History Collection at the Naturalis Biodiversity Center in Leiden, the Netherlands. More specimens are being added continuously as their digitization project proceeds. Developers can use the API to get details about specimens, taxonomy information, geographic data, multimedia about specimens, metadata and more. The Naturalis Biodiversity Center serves as a national museum, academic research institute, and cultural heritage institution with a focus on describing, understanding, and exploring biodiversity."], "Url": ["http://docs.biodiversitydata.nl/en/latest/"], "Category": ["Museums", "Geology", "Nature", "Science"], "Provider": ["Naturalis Biodiversity Center"], "ServiceType": ["Web/Internet"], "Documentation": ["http://docs.biodiversitydata.nl/en/latest/introduction/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.biodiversitydata.nl/v2/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "181"}}
{"API name": ["Air by Propeller Open REST API v1.0"], "Description": [" The Air by Propeller Open API enables developers to use Propeller's asthma condition forecast in their own applications to find out the latest asthma conditions and air quality in your area. Use the Respiratory forecast resource to Get current asthma condition forecast for a geolocation and Get current asthma condition forecast for a bounded box geolocation. Propeller Health is an FDA cleared digital therapeutic that provides tools and services to better manage your asthma, COPD and respiratory disease."], "Url": ["https://www.propellerhealth.com/air-by-propeller/"], "Category": ["Health", "Applications", "Developers", "Environment", "Healthcare"], "Provider": ["Propeller Health"], "ServiceType": ["Web/Internet"], "Documentation": ["http://forecastdocs.propellerhealth.com/swagger.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://open.propellerhealth.com/prod/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "182"}}
{"API name": ["MeteoGroup Nautical REST API"], "Description": [" MeteoGroup is a provider of full-service B2B weather solutions that allow businesses to take into account weather predictions in their decision-making processes. The MeteoGroup Nautical API is a shipping solution that supports the transmission of weather forecasts and hindcasts for the marine industry. It allows developers to integrate the capabilities for accessing weather forecasts for sailing routes and other offshore locations. It delivers data for prevailing conditions at the high seas including currents, swell, water temperature, and wind waves among others. The API supports only a single call at a time for requests of weather parameters such as location and time stamp. Users can access the latest weather predictions and hindcast data stretching a maximum of one year back from the current date."], "Url": ["https://api.weather.mg/api-detail-pages/nautical-parameter.html"], "Category": ["Weather", "Marine", "Predictions", "Shipping"], "Provider": ["MeteoGroup"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.weather.mg/api-detail-pages/nautical-parameter.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://nautical.weather.mg/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "183"}}
{"API name": ["Meteomatics Weather REST API v3.0"], "Description": [" The Meteomatics Weather API provides access to historical, current, and forecast weather data for locations around the world, including model data and observational data in both time series and areal formats. Historical data goes back as far as 1979. Many response formats are supported, including CSV, JSON, XML, and GeoTIFF.\nDevelopers can try the API free for two weeks before applying for paid access."], "Url": ["https://api.meteomatics.com"], "Category": ["Weather", "Environment", "Geography"], "Provider": ["Meteomatics"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.meteomatics.com"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.meteomatics.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "184"}}
{"API name": ["Astro Digital REST API v2.0"], "Description": [" The Astro Digital REST API allows developers to access and integrate the functionality of Astro Digital with other applications. Some example API methods include managing tasks, retrieving assets and images, and managing users. Astro Digital provides satellite images from space and makes them available through an API."], "Url": ["https://github.com/AstroDigital"], "Category": ["Satellites", "Astronomy", "Images", "Science"], "Provider": ["Astro Digital"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.developmentseed.org/satellites/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.astrodigital.com/v2.0/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "185"}}
{"API name": ["Plume REST API v1.0"], "Description": [" The Plume API is a machine learning and atmospheric science that provides air quality data and hourly forecasts. The AI powered platform for live and forecast pollution data includes; get/pollution/forecast and get/uv/forecast. Plume Labs provides air quality data for businesses, researchers and organizations to build solutions that help people breathe better air."], "Url": ["https://plume.io/en/"], "Category": ["Environment", "Artificial Intelligence", "Health", "Open Data", "Platform-as-a-Service", "Predictions", "Reporting", "Science"], "Provider": ["Plume Labs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://plume.readme.io/docs"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.plume.io/1.0"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "186"}}
{"API name": ["SkyWatch REST API"], "Description": [" SkyWatch is a company that specializes in capturing and providing accessibility to satellite data. The SkyWatch platform, EarthCache, allows users to retrieve remote sensing datasets for consumption in a variety of business, enterprise, and scientific applications. The API returns responses in JSON format."], "Url": ["https://www.skywatch.co/products/earthcache"], "Category": ["Satellites", "Aggregation", "Analytics", "B2B", "Big Data", "Business", "Data", "Images", "Intelligence", "Machine-to-Machine", "Monitoring"], "Provider": ["SkyWatch"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.skywatch.co/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.skywatch.co"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "187"}}
{"API name": ["MetGIS Weather Point REST API v1"], "Description": [" ULTRA-PRECISE WEATHER DATA FOR BETTER DECISION-MAKING\nMetGIS combines exact weather models and terrain data and thus creates ultra-precise forecasts. With a resolution of up to 30 m MetGIS forecasts are among the best in the world. For you this means: Better decisions, targeted actions and new opportunities.\nPOINT-BASED API: FORECASTS, CURRENT AND HISTORIC WEATHER DATA\nMetGIS weather data can be retrieved from the point API via https that are delivered in JSON or JSONP format and is optimized for mountainous and remote regions worldwide - thanks to extremely detailed geographical data!\nEXTREMELY DETAILED WEATHER MAPS (TILES)\nWeather layers for Google Maps & co: Embed extremely detailed weather layers (tiles) into web projects, apps and GIS."], "Url": ["http://weatherapi.metgis.com"], "Category": ["Weather", "Climate"], "Provider": ["MetGIS"], "ServiceType": ["Web/Internet"], "Documentation": ["http://wetterapi.metgis.com/f-8-lightbox.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.metgis.com/forecast"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "188"}}
{"API name": ["DigitalGlobe GBDX S3 Storage REST API v1.0"], "Description": [" GBDX stores ancillary data and derived products in an Amazon Web Services (AWS) S3 bucket. When a workflow is run on the GBDX platform, a task called \"StageDataToS3\" is typically the last task run by the workflow. This task takes the processed data and places it in the AWS S3 bucket. The GBDX S3 Storage Service allows users to access this data and provides the temporary credentials required to access a Prefix, Folder, or Object in the S3 bucket. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth satellite imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/s3-storage-service-course"], "Category": ["Big Data", "Analytics", "Cloud", "Extraction", "Images", "Intelligence", "Library", "Location", "Mapping", "Nature", "Storage", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://geobigdata.io/s3creds/v1/prefix"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "189"}}
{"API name": ["DigitalGlobe GBDX Authentication REST API v1.0"], "Description": [" The DigitalGlobe GBDX Authentication API allows you to get access to DigitalGlobe's GBDX platform. GBDX uses OAuth2 for authentication and authorization, and you will need your GBDX username, password, and API key. To make a request to any GBDX API, you'll need an OAuth2 token. It is an open protocol to allow secure authorization in a simple and standard method from web, mobile, and desktop applications. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth satellite imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/authentication-course"], "Category": ["Big Data", "Analytics", "Authentication", "Cloud", "Extraction", "Images", "Intelligence", "Library", "Location", "Mapping", "Nature", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://geobigdata.io/auth/v1/oauth/token/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "190"}}
{"API name": ["DigitalGlobe GBDX IDAHO REST API v1.0"], "Description": [" The DigitalGlobe GBDX IDAHO service is a cloud-based, data storage format designed for high availability and real time access. IDAHO is an acronym for the IPE Data Architecture Highly-available Object-store that is a tile-based imagery format optimized for storage in cloud-based object stores. IDAHO images consist of two file types; tiles and metadata files. Converting large footprint satellite imagery into the IDAHO format provides imagery-manipulating algorithms, and tile-based access to the imagery that significantly reduces load time and compute time through parallel processing. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/idaho-course"], "Category": ["Big Data", "Analytics", "Big Data", "Cloud", "Extraction", "Intelligence", "Library", "Location", "Mapping", "Nature", "Photos", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://idaho.geobigdata.io/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "191"}}
{"API name": ["DigitalGlobe GBDX Write Vector REST API"], "Description": [" DigitalGlobe provides a service that allows users that have vectors of their own and would like to visualize in the index, easily pass them to other users. Vector write can be completed via shapefile ingest or API writes of JSON formatted vectors. JSON formatted vectors may be written via either synchronous and asynchronous methods, and users specify the index for their own provided vectors. Vector generation is useful for direct additions of or updates to vectors, without needing a third party service or a vector submission request form. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/write-vector-services-overview"], "Category": ["Big Data", "Analytics", "Cloud", "Extraction", "Images", "Intelligence", "Library", "Location", "Mapping", "Nature", "Photos", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://vector.geobigdata.io/insight-vector/api/vector/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "192"}}
{"API name": ["DigitalGlobe GBDX AnswerFactory Native/Browser API"], "Description": [" The DigitalGlobe GBDX AnswerFactory web application is supported on Google Chrome. They do not support Microsoft Internet Explorer or Edge and is functional on Firefox but not actively tested. AnswerFactory is a simple web-based interface that allows you to take advantage of the power of GBDX and cloud-based remote sensing at scale. It allows you to create projects containing areas or regions of the globe you care about, then add \"answers\" within those areas including; locating and counting objects, detecting change, identifying foliage, finding OpenStreetMaps (OSM) new features and more. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/answerfactory-overview"], "Category": ["Big Data", "Analytics", "Cloud", "Extraction", "Images", "Intelligence", "Library", "Location", "Mapping", "Nature", "Photos", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Browser"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["Native/Browser"], "Endpoint Url": ["https://vector.geobigdata.io/answer-factory"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "193"}}
{"API name": ["DigitalGlobe GBDX Read Vector REST API"], "Description": [" The DigitalGlobe GBDX Read Vector search capability gives users the ability to query a vast amount of vector data rapidly and easily by location, keyword, date/time, and more. It allows access to a wide variety of vector data including map data and social media records. The API provides the analyst with a tool for visually mapping all available vectors within a given aoi. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/read-vector-services-overview"], "Category": ["Big Data", "Analytics", "Cloud", "Extraction", "Images", "Intelligence", "Library", "Location", "Mapping", "Nature", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://vector.geobigdata.io/insight-vector/api/vectors/OSM/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "194"}}
{"API name": ["DigitalGlobe GBDX Aggregation REST API"], "Description": [" The DigitalGlobe GBDX Aggregation vector capability gives users the ability to summarize a vast amount of vector data rapidly and easily by location, keyword, date/time, and more. Aggregations allow users to poll larger areas for more information before narrowing down their searches to eventually reach the specific data they desire to download. Aggregations also give users the ability to run analytics such as change detection and discovering zones similar to an area of interest. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth satellite imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/aggregations-service-overview"], "Category": ["Big Data", "Analytics", "Cloud", "Extraction", "Images", "Intelligence", "Library", "Location", "Mapping", "Nature", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": [" https://vector.geobigdata.io/insight-vector/api/aggregation"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "195"}}
{"API name": ["DigitalGlobe GBDX Thumbnail REST API v1.0"], "Description": [" The DigitalGlobe GBDX Thumbnail Service lets you request a thumbnail image and the image's metadata. You can request the thumbnail by dimensions (browse mode) or by orientation (thumbnail mode). The service redirects API requests to the Amazon Web Services (S3) location for the image file or the metadata file. This includes; Get a thumbnail by catalog ID and Dimensions, Get the metadata file for an image by catalog ID, Get the location of a thumbnail image and its metadata file by catalog ID and more. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth satellite imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/thumbnail-service-course"], "Category": ["Images", "Big Data", "Cloud", "Extraction", "Intelligence", "Library", "Location", "Mapping", "Nature", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://geobigdata.io/thumbnails/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "196"}}
{"API name": ["DigitalGlobe GBDX Ordering REST API v2.0"], "Description": [" The GBDX Orders API lets you order imagery by catalog ID and check the status of your order. This includes the maximum number of bands, and both \"pan\" and \"multi\" resolution, order status and the S3 bucket location for each acquisition. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience, to provide high-resolution Earth satellite imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/ordering-course-v2"], "Category": ["Images", "Analytics", "Big Data", "Cloud", "Extraction", "Intelligence", "Library", "Location", "Mapping", "Nature", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://geobigdata.io/orders/v2/order"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "197"}}
{"API name": ["DigitalGlobe GBDX Workflow REST API v1.0"], "Description": [" The DigitalGlobe GBDX Workflow system is a series of tasks chained together to run on the GBDX platform. Each \"task\" is an individual process that performs a specific action. In order to run as part of a workflow, a task must be registered in the workflow system's task registry. The Workflow API allows users to: register a task in the workflow system's task registry, manage tasks in the task registry, create a new workflow by submitting a workflow definition and more. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth satellite imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/workflow-api-course"], "Category": ["Images", "Analytics", "Big Data", "Cloud", "Extraction", "Intelligence", "Library", "Location", "Mapping", "Nature", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://geobigdata.io/workflows/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "198"}}
{"API name": ["DigitalGlobe GBDX Catalog REST API v2.0"], "Description": [" DigitalGlobe GBDX Catalog is an API that queries the GBDX Vector Services database. The API is a compatibility layer that allows users to switch from querying the current GBDX catalog to querying Vector services with limited functionality changes. This includes; Get the API heartbeat, Get a record by ID and Search the catalog. GBDX is a living digital library that documents our planet with tools to extract meaningful insights at scale from that library. The ecosystem matches the creators of those insights with customers who can turn them into effective solutions. It is geospatial big data made accessible using a cloud-based platform that puts location intelligence at your fingertips. DigitalGlobe combines resolution, accuracy, global coverage and experience to provide high-resolution Earth satellite imagery, data and analysis."], "Url": ["https://gbdxdocs.digitalglobe.com/docs/catalog-v2-course"], "Category": ["Images", "Analytics", "Big Data", "Cloud", "Extraction", "Intelligence", "Library", "Location", "Mapping", "Nature", "Photos", "Tools"], "Provider": ["DigitalGlobe"], "ServiceType": ["Web/Internet"], "Documentation": ["https://gbdxdocs.digitalglobe.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://geobigdata.io/catalog/v2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "199"}}
{"API name": ["Tomorrow CO2 Signal REST API v1"], "Description": [" Tomorrow is an organization that promotes the efficient use of energy resources. The Tomorrow CO2 Signal API provides carbon footprint detection mechanism that makes it possible for a smart device to consume electricity when the carbon footprint is at its lowest. It provides access to information about the source and production procedures of electricity supply as well as the quantity of carbon attributable to its production. The API sends requests and returns responses in JSON format."], "Url": ["https://docs.co2signal.com/"], "Category": ["Climate", "Energy"], "Provider": ["Tomorrow"], "ServiceType": ["Standard"], "Documentation": ["https://docs.co2signal.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.co2signal.com/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "200"}}
{"API name": ["SmartData IoT BDE REST API v1.3"], "Description": [" The GSMA SmartData IoT BDE API by Orange allows you access to the data translation FIWARE data model NGSIv2. This includes AirQualityObserved, WeatherObserved, Vehicle, PointOfInterest and OnStreetParking. GSMA represents the interests of mobile operators worldwide, uniting nearly 800 operators with almost 300 companies in the broader mobile ecosystem."], "Url": ["http://fiware-datamodels.readthedocs.io/en/latest/index.html"], "Category": ["Transportation", "Environment", "Internet of Things", "Parking", "Travel", "Weather"], "Provider": ["GSMA", "Orange"], "ServiceType": ["Web/Internet"], "Documentation": ["http://122.160.86.105:8088/SmartDataIoTBDE.docx"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "201"}}
{"API name": ["World Air Quality Index REST API"], "Description": [" The World Air Quality Index REST API allows developers to access and integrate the functionality of the index with other applications and websites. Some example API methods include geo-based queries, retrieving air quality data for cities and regions, and retrieving current weather conditions. The World Air Quality Index project is a social enterprise project started in 2007. The mission is to promote air pollution awareness and provide a unified air quality information for places around the world. The project is providing air quality information for more than 70 countries, covering more than 9000 stations in 600 major cities, via those two websites: aqicn.org and waqi.info."], "Url": ["http://aqicn.org/api/"], "Category": ["Environment", "Cities", "Climate", "Health", "Weather"], "Provider": ["World Air Quality"], "ServiceType": ["Web/Internet"], "Documentation": ["http://aqicn.org/json-api/doc/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.waqi.info/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "202"}}
{"API name": ["Foobot REST API"], "Description": [" The Foobot REST API allows developers to access and integrate the functionality of Foobot with other applications. Some example API methods include retrieving device details, searching data points, and retrieving data points. Foobot is an air quality monitor that allows people to monitor the air around them and control air freshness."], "Url": ["https://api.foobot.io/apidoc/index.html"], "Category": ["Environment", "Climate", "Home Automation", "Internet of Things"], "Provider": ["Foobot"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "203"}}
{"API name": ["Weatherbit REST API v1.0"], "Description": [" The Weatherbit API allows developers to get >5 years of backfilled historical data, 16 day (daily) forecasts, 5 day (3 hour interval), 48 hour (hourly) forecasts, and current weather observations programmatically. Weather data is supplied by over 40,000 weather stations, and 370,000 cities located around the world. This service is geared toward high-volume users and is available in both free and paid versions."], "Url": ["https://www.weatherbit.io"], "Category": ["Weather", "Analytics", "Big Data", "Climate", "Data-as-a-Service", "Open Data"], "Provider": ["Weatherbit"], "ServiceType": ["Product"], "Documentation": ["https://weatherbit.io/api"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "204"}}
{"API name": ["WSDOT Traveler Information WSF Schedule REST API"], "Description": [" The WSDOT Traveler API's provides a single gateway to all of WSDOT's data. The Washington State Ferry Schedule data service includes; planned departures, adjustments, contingencies and more. The Washington State Department of Transportation is the steward of a multimodal transportation system and responsible for ensuring that people and goods move safely and efficiently. In addition to building, maintaining, and operating the state highway system, WSDOT is responsible for the state ferry system, and works in partnership with others to maintain and improve local roads, railroads and airports, as well as to support alternatives to driving, such as public transportation, bicycles and pedestrian programs."], "Url": ["http://www.wsdot.wa.gov/ferries/api/schedule/documentation/"], "Category": ["Transportation", "Data", "Marine", "Travel"], "Provider": ["WSDOT"], "ServiceType": ["Web/Internet"], "Documentation": ["http://wsdot.wa.gov/traffic/api/Documentation/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.wsdot.wa.gov/Ferries/API/Schedule/rest/help"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "205"}}
{"API name": ["WSDOT Traveler Information WSF Terminals REST API"], "Description": [" The WSDOT Traveler API's provides a single gateway to all of WSDOT's data. The Washington State Ferry Terminal data service includes; terminal conditions, wait times, locations and more. The Washington State Department of Transportation is the steward of a multimodal transportation system and responsible for ensuring that people and goods move safely and efficiently. In addition to building, maintaining, and operating the state highway system, WSDOT is responsible for the state ferry system, and works in partnership with others to maintain and improve local roads, railroads and airports, as well as to support alternatives to driving, such as public transportation, bicycles and pedestrian programs."], "Url": ["http://www.wsdot.wa.gov/ferries/api/terminals/documentation/"], "Category": ["Transportation", "Data", "Marine", "Travel"], "Provider": ["WSDOT"], "ServiceType": ["Web/Internet"], "Documentation": ["http://wsdot.wa.gov/traffic/api/Documentation/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.wsdot.wa.gov/Ferries/API/Terminals/rest/help"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "206"}}
{"API name": ["WSDOT Traveler Information WSF Vessels REST API"], "Description": [" The WSDOT Traveler API's provides a single gateway to all of WSDOT's data. The Washington State Ferry Vessel data service includes; vessel attributes, locations and more. The Washington State Department of Transportation is the steward of a multimodal transportation system and responsible for ensuring that people and goods move safely and efficiently. In addition to building, maintaining, and operating the state highway system, WSDOT is responsible for the state ferry system, and works in partnership with others to maintain and improve local roads, railroads and airports, as well as to support alternatives to driving, such as public transportation, bicycles and pedestrian programs."], "Url": ["http://www.wsdot.wa.gov/ferries/api/vessels/documentation/index.html"], "Category": ["Transportation", "Data", "Marine", "Travel"], "Provider": ["WSDOT"], "ServiceType": ["Web/Internet"], "Documentation": ["http://wsdot.wa.gov/traffic/api/Documentation/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.wsdot.wa.gov/Ferries/API/Vessels/rest/help"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "207"}}
{"API name": ["WSDOT Traveler Information REST API"], "Description": [" The Traveler Information API's allow you access to WSDOT data. This includes; Border Crossings, Highway Alerts, Mountain Pass Conditions and more. The Washington State Department of Transportation is the steward of a multimodal transportation system and responsible for ensuring that people and goods move safely and efficiently. In addition to building, maintaining, and operating the state highway system, WSDOT is responsible for the state ferry system, and works in partnership with others to maintain and improve local roads, railroads and airports, as well as to support alternatives to driving, such as public transportation, bicycles and pedestrian programs."], "Url": ["http://wsdot.wa.gov/traffic/api/"], "Category": ["Transportation", "Data", "Marine", "Travel", "Weather"], "Provider": ["WSDOT"], "ServiceType": ["Web/Internet"], "Documentation": ["http://wsdot.wa.gov/traffic/api/Documentation/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://wsdot.wa.gov/traffic/api/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "208"}}
{"API name": ["WSDOT Traveler Information Toll REST API"], "Description": [" This API allows you access to WSDOT Tolling data. This includes; current toll rates for high occupancy lanes, get information for the HOV toll lanes and more. The Washington State Department of Transportation is the steward of a multimodal transportation system and responsible for ensuring that people and goods move safely and efficiently. In addition to building, maintaining, and operating the state highway system, WSDOT is responsible for the state ferry system, and works in partnership with others to maintain and improve local roads, railroads and airports, as well as to support alternatives to driving, such as public transportation, bicycles and pedestrian programs."], "Url": ["http://wsdot.wa.gov/traffic/api/Documentation/class_traveler_a_p_i_1_1_controlle\u2026"], "Category": ["Transportation", "Data", "Marine", "Travel", "Weather"], "Provider": ["WSDOT"], "ServiceType": ["Web/Internet"], "Documentation": ["http://wsdot.wa.gov/traffic/api/Documentation/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://wsdot.wa.gov/traffic/api/api/tolling"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "209"}}
{"API name": ["WSDOT Traveler Information WSF Fares REST API"], "Description": [" The WSDOT Traveler API's provides a single gateway to all of WSDOT's data. The Washington State Ferry Fare data service includes; ticket costs, categories, totals and more. The Washington State Department of Transportation is the steward of a multimodal transportation system and responsible for ensuring that people and goods move safely and efficiently. In addition to building, maintaining, and operating the state highway system, WSDOT is responsible for the state ferry system, and works in partnership with others to maintain and improve local roads, railroads and airports, as well as to support alternatives to driving, such as public transportation, bicycles and pedestrian programs."], "Url": ["http://www.wsdot.wa.gov/ferries/api/fares/documentation/rest.html"], "Category": ["Transportation", "Data", "Marine", "Travel", "Weather"], "Provider": ["WSDOT"], "ServiceType": ["Web/Internet"], "Documentation": ["http://wsdot.wa.gov/traffic/api/Documentation/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.wsdot.wa.gov/Ferries/API/Fares/rest"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "210"}}
{"API name": ["Solcast REST API v1.0"], "Description": [" Solcast API delivers solar power and radiation forecasts and measurements, plus temperature - anywhere in the world.\nAuthentication is available via Key.\nWith the API, developers can obtain PV power output forecast, access solar radiation estimates, access real-time data, and apply analytics for individualized forecasts."], "Url": ["https://solcast.com/"], "Category": ["Solar", "Analytics", "Climate", "Energy", "Machine Learning", "Swagger (OpenAPI)", "Weather"], "Provider": ["Solcast"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.solcast.com.au"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.solcast.com.au/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "211"}}
{"API name": ["Airvisual REST API v2"], "Description": [" The IQAir Airvisual API integrates air quality index and air pollution with a coverage in more than 60 countries, including 11,000 government stations. AirVisual data is returned in a standard and concentration AQI (US or China). Several package options are available based on the number of API calls, that can be performed in JSON format and require Key to authenticate."], "Url": ["https://www.iqair.com/air-pollution-data-api"], "Category": ["Weather", "Cities", "Climate", "Environment", "Health", "Sustainability", "Weather"], "Provider": ["Airvisual", "IQAir"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api-docs.iqair.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.airvisual.com/v2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "212"}}
{"API name": ["i-Boating GPS Nautical Charts and Fishing Maps Native/Browser API"], "Description": [" i-Boating is a provider of ENC (Electronic Navigation Charts), Bathymetric maps, & depth maps for inland waterways/lakes. The API allows browser applications to use ENCs as a base map for their browser applications in web applications. ENC maps can also be integrated into native app using their platform specific SDK. For protocol information, contact support@gpsnauticalcharts.com"], "Url": ["http://fishing-app.gpsnauticalcharts.com"], "Category": ["Mapping", "Boating", "Fishing", "Marine", "Water"], "Provider": ["Bist"], "ServiceType": ["Browser"], "Documentation": ["http://fishing-app.gpsnauticalcharts.com"], "Architectural Style": ["Native/Browser"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "213"}}
{"API name": ["AISHub XML Webservice REST API"], "Description": [" This API allows AISHub members to access the webservice and retrieve AISHub data in XML or JSON format. Some data forms that it returns are all AISHub data as XML ZIP file, all vessels in an area with boundaries as JSON file and all data for vessel with MMSI and includes; MMSI, Time, Longitude latitude and more. AIS vessel tracking develops navigation safety the. AIS tracking system was originally developed as a collision avoidance tool which enables commercial vessels to 'see' each other more clearly in any conditions and to improve the helmsman's information about the surrounding environment. AIS continuously transmits vessels' position, identity, speed and course, along with other relevant information, to all other AIS equipped vessels within range."], "Url": ["http://www.aishub.net/xml-description-20.php"], "Category": ["Marine", "Location"], "Provider": ["AISHub"], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.aishub.net/aisdispatcher-description.php"], "Architectural Style": ["REST"], "Endpoint Url": ["http://data.aishub.net/ws.php"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "214"}}
{"API name": ["ETwater Unity REST API v1.0"], "Description": [" This API is a scalable open platform for water management and other environmental services. It is a set of data from many different sources used to transform and analyze this information using a set of REST APIs to directly gain access to the platform\u2019s services and insights for easy integration. Some features include profiles and details about soil types and characteristics, plant type and growth factors specifically related to UV, watering needs and more. The Smart Sprinkler Service allows you to water only and precisely when your lawn, garden or yard needs it."], "Url": ["http://etwater.com/developer/specification/"], "Category": ["Water", "Environment", "Management"], "Provider": ["ETwater"], "ServiceType": ["Web/Internet"], "Documentation": ["http://etwater.com/developer/specification/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://developer-api.etwater.com/api/v1/hello-unity"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "215"}}
{"API name": ["Parrot Flower Power User Indirect API v4.0"], "Description": [" This API provides access to user data using the Flower Power Cloud and returns, Get profile and Obtain version info. The Parrot Pot is a smart flowerpot that helps your plants with a self-watering system and four built-in sensors that monitor light, temperature, soil moisture and fertilizer levels in real time. It sends out customized recommendations and alerts, to help you better care for your plants."], "Url": ["http://developer.parrot.com/docs/FlowerPower/?shell#user-api"], "Category": ["Internet of Things", "Agriculture", "Environment", "Gadgets", "Water"], "Provider": ["Parrot SA\u200b"], "ServiceType": ["Product"], "Documentation": ["http://developer.parrot.com/products.html"], "Architectural Style": ["Indirect"], "Endpoint Url": ["https://api-flower-power-pot.parrot.com/user/v4/profile"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "216"}}
{"API name": ["Parrot Flower Power Cloud Indirect API v1.0"], "Description": [" This API provides access to connect to the Flower Power Cloud, and retrieve your sensors\u2019 data from it. The Parrot Pot is a smart flowerpot that helps your plants with a self-watering system and four built-in sensors that monitor light, temperature, soil moisture and fertilizer levels in real time. It sends out customized recommendations and alerts to help you better care for your plants."], "Url": ["http://developer.parrot.com/docs/FlowerPower/#flower-power-cloud-api"], "Category": ["Internet of Things", "Agriculture", "Environment", "Gadgets", "Water"], "Provider": ["Parrot SA\u200b"], "ServiceType": ["Product"], "Documentation": ["http://developer.parrot.com/products.html"], "Architectural Style": ["Indirect"], "Endpoint Url": ["https://api-flower-power-pot.parrot.com/user/v1/authenticate"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "217"}}
{"API name": ["Parrot Flower Power Sensor Data Indirect API v6.0"], "Description": [" This API provides access to sensor data using the Flower Power Cloud and returns Get Samples for Location, Obtain Sync Data and Obtain garden location statuses. The Parrot Pot is a smart flowerpot that helps your plants with a self-watering system and four built-in sensors that monitor light, temperature, soil moisture and fertilizer levels in real time. It sends out customized recommendations and alerts to help you better care for your plants."], "Url": ["http://developer.parrot.com/docs/FlowerPower/#sensor-data-api"], "Category": ["Internet of Things", "Agriculture", "Environment", "Gadgets", "Water"], "Provider": ["Parrot SA\u200b"], "ServiceType": ["Product"], "Documentation": ["http://developer.parrot.com/products.html"], "Architectural Style": ["Indirect"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "218"}}
{"API name": ["Smart Citizen REST API"], "Description": [" The Smart Citizen API provides public access to the Smart Citizen platform for application development and experimentation. The Smart Citizen platform is designed to connect data, people, and knowledge regarding the living conditions in various cities. The Smart Citizen Kit is a sensor that measures air composition, temperature, humidity, light intensity, and sound levels. Data collected by the sensor is streamed to the platform over wi-fi."], "Url": ["http://developer.smartcitizen.me/"], "Category": ["Environment", "Cities", "Internet of Things", "Weather"], "Provider": ["Smart Citizen"], "ServiceType": ["Browser"], "Documentation": ["http://developer.smartcitizen.me/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.smartcitizen.me/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "219"}}
{"API name": ["Protected Planet REST API"], "Description": [" The Protected Planet API integrates biodiversity and environmental data of the world areas. It is available with HTTP requests and JSON responses. Authentication is required with token."], "Url": ["http://api.protectedplanet.net/documentation"], "Category": ["Countries", "Data", "Database", "Environment", "Science", "Statistics"], "Provider": ["Protected Planet"], "ServiceType": ["Web/Internet"], "Documentation": ["http://api.protectedplanet.net/documentation"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.protectedplanet.net/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "220"}}
{"API name": ["Safecast REST API"], "Description": [" Safecast is an international open citizen science organization that specializes in sharing information about environmental radiation and other pollutants. Safecast maintains the largest dataset of background radiation measurements, and is currently developing a network of sensors that monitor PM1.0, PM2.5, Carbon Monoxide, Nitrogen Dioxide, Ozone and Methane. The Safecast API is used to query and add information to the Safecast dataset. This API uses HTTP for requests, and JSON for responses."], "Url": ["https://api.safecast.org/en-US/home"], "Category": ["Environment", "Climate", "Data", "Health", "Internet of Things"], "Provider": ["Safecast"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.safecast.org/.json"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "221"}}
{"API name": ["Laminar Weather Data REST API v1"], "Description": [" The Laminar Weather Data REST API integrates forecast information, according to visibility, wind, cloud, and climate change. Developers can send HTTP requests to receive XML and GeoJSON responses. Authentication is required with Api Key."], "Url": ["https://developer.laminardata.aero/documentation/weatherdata"], "Category": ["Data-as-a-Service", "Air Travel", "Climate", "Notifications", "Transportation", "Weather"], "Provider": ["Snowflake Software"], "ServiceType": ["Product"], "Documentation": ["https://developer.laminardata.aero/documentation/weatherdata"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "222"}}
{"API name": ["SkyWise Insight REST API"], "Description": [" The SkyWise Insight API allows developers to access historical, current, and forecast data for any geographic area of interest. Weather information is updated hourly and has a resolution of 1km throughout North America. The API includes endpoints for standard weather variables as well as some industry-specific metrics, such as Heating/Cooling Degree Days, Growing Degree Days, and Evapotranspiration."], "Url": ["http://skywise.wdtinc.com"], "Category": ["Weather", "Agriculture", "Climate", "Energy"], "Provider": ["Weather Decision Technologies"], "ServiceType": ["Web/Internet"], "Documentation": ["http://docs.api.wdtinc.com/insight-api/en/latest/index.html"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "223"}}
{"API name": ["Aquaplot REST API v1"], "Description": [" Aquaplot offers sea routing functionality and distance computation for ships. Developers can build integrations related to route planning, route optimization, fleet maneuver planning, and traffic monitoring. The Aquaplot API allows developers to retrieve the distance between 2 coordinates in water. The database contains 3,500 ports. This API uses JSON for responses, and GeoJSON will be available in the near future."], "Url": ["http://doc.aquaplot.com/"], "Category": ["Optimization", "Algorithms", "Analytics", "Developers", "Intelligence", "Logistics", "Mapping", "Marine", "Optimization", "Shipping"], "Provider": ["Gestalt Systems"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.aquaplot.com/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "224"}}
{"API name": ["Predix Public Safety REST API v1"], "Description": [" The Public Safety API offers media obtained from intelligent lighting sensors located along public roadways and in parking lots. This information provides local businesses and city officials with insight with the purpose of improving environment awareness. This REST API returns data in JSON format, and uses OAuth 2 and Tokens for authentication. Predix is an industrial software platform developed by General Electric Digital which aims to improve asset performance management (APM), operations, and business."], "Url": ["https://www.predix.io/services/service.html?id=1767"], "Category": ["Cities", "Environment", "Safety"], "Provider": ["General Electric"], "ServiceType": ["Web/Internet"], "Documentation": ["http://currentbyge.github.io/GE_Current_Documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://ie-public-safety.run.aws-usw02-pr.ice.predix.io"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "225"}}
{"API name": ["BookRetreats REST API"], "Description": [" The BookRetreats API allows authorised partners direct and easy access to listings from over 500 retreats in over 100 locations worldwide. Database of retreats available as XML or JSON. Developers can use our API to display Bookretreats listings on their website as well as in confirmation emails for bookings conducted for other services. BookRetreats.com helps customers discover and book the best yoga retreats, wellness retreats, and yoga teacher trainings on the planet. It allows visitors to unplug from daily life, de-stress, and recharge their batteries."], "Url": ["https://bookretreats.com/contact"], "Category": ["Booking", "Fitness", "Nature", "Tourism", "Travel"], "Provider": ["Book Retreats"], "ServiceType": ["Web/Internet"], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://bookretreats.com"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "226"}}
{"API name": ["Predix Pedestrian Planning REST API v1"], "Description": [" The Pedestrian Planning API offers metadata obtained from intelligent lighting sensors located along public roadways, and parking lots. Information returned by this API includes volume counts by region. This REST API returns data in JSON format, and uses OAuth 2 and Tokens for authentication. Predix is an industrial software platform developed by General Electric Digital which aims to improve asset performance management (APM), operations, and business."], "Url": ["https://www.predix.io/services/service.html?id=1766"], "Category": ["Cities", "Environment", "Parking"], "Provider": ["General Electric"], "ServiceType": ["Web/Internet"], "Documentation": ["http://currentbyge.github.io/GE_Current_Documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://ie-pedestrian.run.aws-usw02-pr.ice.predix.io"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "227"}}
{"API name": ["Predix Parking Planning Streaming API v1"], "Description": [" The Parking Planning API offers parking metadata obtained from lighting sensors in parking lots and along public roadways. Information such as real time occupancy status is available. This REST API returns data in JSON format, and uses OAuth 2 and Tokens for authentication. Predix is an industrial software platform developed by General Electric Digital which aims to improve asset performance management (APM), operations, and business."], "Url": ["https://www.predix.io/services/service.html?id=1765"], "Category": ["Cities", "Analytics", "Environment", "Parking"], "Provider": ["General Electric"], "ServiceType": ["Web/Internet"], "Documentation": ["http://currentbyge.github.io/GE_Current_Documentation/"], "Architectural Style": ["Streaming"], "Endpoint Url": ["https://ie-parking.run.aws-usw02-pr.ice.predix.io"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "228"}}
{"API name": ["Predix Traffic Planning REST API v1"], "Description": [" The Traffic Planning API offers metadata obtained from lighting sensors along public roadways. Information such as speed, and direction is available for historical and real-time development purposes. This REST API returns data in JSON format, and uses OAuth 2 and Tokens for authentication. Predix is an industrial software platform developed by General Electric Digital which aims to improve asset performance management (APM), operations, and business."], "Url": ["https://www.predix.io/services/service.html?id=1763"], "Category": ["Internet of Things", "Cities", "Environment"], "Provider": ["General Electric"], "ServiceType": ["Web/Internet"], "Documentation": ["http://currentbyge.github.io/GE_Current_Documentation/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://ie-traffic.run.aws-usw02-pr.ice.predix.io"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "229"}}
{"API name": ["iNaturalist REST API"], "Description": [" The iNaturalist API allows developers to integrate wildlife sighting data into their applications. iNaturalist.org is a website that allows naturalists, scientists, and citizens to record, share, and discuss their wildlife observations with others. iNaturalist hosts more than 28 million observations of more than 80,000 species around the world. iNaturalist is a joint initiative of the California Academy of Sciences and the National Geographic Society."], "Url": ["http://api.inaturalist.org/v1/docs/"], "Category": ["Environment", "Animals", "Marine", "Science"], "Provider": ["iNaturalist"], "ServiceType": [], "Documentation": ["http://api.inaturalist.org/v1/docs/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "230"}}
{"API name": ["Planet Data REST API v1.0"], "Description": [" The Planet API integrates earth's satellite images and data. It is available in JSON and HTTP protocols with Key. Imagery options include scenes and mosaics."], "Url": ["https://developers.planet.com/docs/data"], "Category": ["Satellites", "Astronomy", "Data", "Images", "Science"], "Provider": ["Planet Labs"], "ServiceType": ["Web/Internet"], "Documentation": ["https://developers.planet.com/docs/data/reference"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.planet.com/data/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "231"}}
{"API name": ["Atlas of Living Australia Biocache REST API"], "Description": [" The Atlas of Living Australia Biocache API is a web service for mapping occurrence data, and species breakdowns for geographic areas. The Atlas of Living Australia web service allows you to gather species data of wildlife, plants and other species data. based on location. Applications accessed by the API include Biocache data, volunteer portal services, species profile data and more. The Atlas of Living Australia is a collaborative, national project that aggregates biodiversity data from multiple sources and makes it available and usable online."], "Url": ["https://api.ala.org.au/apps"], "Category": ["Australian", "Data", "Environment", "Flowers", "Geography", "Guides", "Location", "Science"], "Provider": ["Australian Department of Education and Training"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.ala.org.au/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://biocache.ala.org.au/ws/ogc/getMetadata "], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "232"}}
{"API name": ["World Weather Online Marine, Sailing, Surfing Weather REST API"], "Description": [" The World Weather Online Marine, Sailing, Surfing Weather API integrates forecast data into web services and mobile applications. XML, JSON, and REST are available as protocols to make callbacks."], "Url": ["MARINE, SAILING AND SURFING WEATHER API"], "Category": ["Weather", "Marine", "Predictions"], "Provider": ["World Weather Online"], "ServiceType": [], "Documentation": ["http://developer.worldweatheronline.com/api/docs/marine-weather-api.aspx"], "Architectural Style": ["REST"], "Endpoint Url": ["http://us.worldweatheronline.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "233"}}
{"API name": ["Meteotest Data Exchange REST API v1.0"], "Description": [" The Meteotest Data Exchange API provides data and weather forecasts. Available in German language, Meteotest offers measurements of the past and forecasts of the future, in addition to information about temperature, sunshine, rain showers, snow and wind and fog and thunder and lightning calculated by Meteonorm software. Protocols include JSON, JSONP, XML, YAML, CSV, and Text. Accessible with Key."], "Url": ["https://meteotest.ch/produkt/webservices"], "Category": ["Weather", "Climate", "Environment", "European", "Measurements", "Predictions", "Solar"], "Provider": ["Meteotest"], "ServiceType": ["Web/Internet"], "Documentation": ["https://mdx.meteotest.ch"], "Architectural Style": ["REST"], "Endpoint Url": ["https://mdx.meteotest.ch/api_v1"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "234"}}
{"API name": ["Planet OS REST API"], "Description": [" The Planet OS API provides access to a growing catalog of Earth data from the world's most respected providers. Developers, researchers, and climate specialists can integrate environmental data into applications, analyses, and other data-driven solutions. The RESTful API requires an API key to make requests and is accessible for free with a basic account. Planet OS focuses on collecting earth, environment, weather and climate data through IoT sensors."], "Url": ["Planet OS"], "Category": ["Weather", "Climate", "Data-as-a-Service", "Environment", "Internet of Things"], "Provider": ["Planet OS"], "ServiceType": [], "Documentation": ["http://data.planetos.com"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.planetos.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "235"}}
{"API name": ["meteoblue REST API"], "Description": [" The meteoblue API is an interface for weather data designed to receive forecasts from direct HTTP requests to meteoblue servers. The requests are executed instantaneously and always provide latest up-to-date data. The meteoblue API provides updated local weather information for systems, weather information for each location on Earth (or in the ocean) from coordinates (latitude/longitude) and altitude (asl), flexible requests adapted to user demand (no pre-programmed daily downloads), and the opportunity to minimize infrastructure for hosting weather data."], "Url": ["meteoblue API "], "Category": ["Weather", "Climate", "Location", "Predictions"], "Provider": ["meteoblue"], "ServiceType": [], "Documentation": ["https://content.meteoblue.com/en/products/meteoblue-api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://my.meteoblue.com/dataApi/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "236"}}
{"API name": ["mChan REST API"], "Description": [" mChan API access satellite TV and radio channels data, DVB-S/2 frequency, transponder, and logo by Channel ID or Channel name. Available in JSON format via HTTPS support."], "Url": ["mChan API - The TV Channels API"], "Category": ["TV", "Satellites"], "Provider": ["Independent Developer"], "ServiceType": [], "Documentation": ["http://channelsapi.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://channelsapi.com/ch.php?"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "237"}}
{"API name": ["NASA WISE NEA/COMET DISCOVERY STATISTICS REST API"], "Description": [" NASA WISE NEA/COMET DISCOVERY STATISTICS API gives users access to data on Near Earth Asteroids (NEAs) and Potentially Hazardous Asteroids (PHAs) derived from NASA\u2019s WISE satellite. Possible queries include searching by discovering date, designation, orbit class, and period year. This API is RESTful and formatted for JSON, CSV, and XML."], "Url": ["https://data.nasa.gov/api-documents/foundry/#/data.nasa.gov/7qz6-zrqt"], "Category": ["Astronomy", "Data", "Satellites"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["https://data.nasa.gov/api-documents/foundry/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://data.nasa.gov/resource/7qz6-zrqt.json"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "238"}}
{"API name": ["NASA's Mars Atmospheric Aggregation System (MAAS) REST API"], "Description": [" NASA's Mars Atmospheric Aggregation System (MAAS) API is an interface through which users can access weather and weather related data on Mars. The weather data is provided by NASA's Curiosity Rover currently on Mars and includes information such as, temperature, atmospheric pressure, humidity, wind direction, and weather status. This API is open-sourced and is REST formatted."], "Url": ["http://marsweather.ingenology.com/#get_started"], "Category": ["Astronomy", "Climate", "Data", "Weather"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["http://marsweather.ingenology.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://marsweather.ingenology.com/v1/latest/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "239"}}
{"API name": ["NASA Satellite Situation Center REST API v2.0"], "Description": [" NASA\u2019s Satellite Situation Center (SSC) API gives users access to a wide variety of tools and data related to space sciences including: space physics data, data for rockets and satellites, data concerning heliophysics and several others. The SSC API was created by the NASA/GSFC Space Physics Data Facility (SPDF) and the National Space Science Data Center (NSSDC) with the express intent of helping to promote collaborative research across disciplines. SSC's primary purpose is to track and predict geocentric spacecraft location while also providing a variety of relevant empirical data, mappings, and data analysis."], "Url": ["https://api.nasa.gov/"], "Category": ["Astronomy", "Mapping", "Satellites"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["http://sscweb.gsfc.nasa.gov/WebServices/REST/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://sscweb.gsfc.nasa.gov/WS/sscr/2"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "240"}}
{"API name": ["NASA LANCE-MODIS REST API"], "Description": [" NASA\u2019s LANCE-MODIS API gives users access to a library of geodata. LANCE (Land, Atmosphere Near real-time Capability for EOS) is a term used to denote the satellite imaging of geographical and atmospheric phenomenon (natural and man-made). Combined with MODIS (Moderate-resolution Imaging Spectroradiometer) the LANCE-MODIS API offers data and imagery from variety of satellites and instruments allowing for Near Real-Time (NRT) observation and data acquisition. Data is typically available within 3 hours of satellite observation."], "Url": ["http://lance-modis.eosdis.nasa.gov/user_services/api-lance.html"], "Category": ["Images", "Data", "Geology", "Satellites"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["http://lance-modis.eosdis.nasa.gov/user_services/api-lance.html"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.nasa.gov/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "241"}}
{"API name": ["FengShui REST API"], "Description": [" The Free FengShui REST API allows to integrate compatibility properties into own applications. Intuition and ancient life wisdom can be part of development practices, because it aims to benefit humans and situations as much as possible. FengShui Calculators: KUA Number, Chineese Sign, Astrological Allies, Astrological Enemy, Peach Blossom Animal, Love Compatibility, Bussiness Compatibility, Element of the Hour, Day, Month, Year, Lucky Dimension, Child Gender, Eight Mansions, Flying Star and Four Pillars.\nSamples available at https://github.com/fengshui-api/restApi"], "Url": ["Free FengShui REST API"], "Category": ["Tools", "Astrology", "Chinese", "Design", "Environment", "Religion"], "Provider": ["fengshui-api.com"], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://fengshui-api.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "242"}}
{"API name": ["Dorsal REST API"], "Description": [" The Dorsal API allows developers to access media, reports, and other information from Dorsal, a community-based shark alert system. Dorsal allows users to instantly alert others to shark sightings or attacks in their area. Users can submit reports using the Dorsal website, iPhone app, Android app, Facebook, and Twitter. Dorsal is currently only available for Australia."], "Url": ["https://www.dorsalapp.com/apidocs/"], "Category": ["Emergency", "Australian", "Environment", "Marine", "Notifications", "Safety", "Social"], "Provider": ["Dorsal"], "ServiceType": [], "Documentation": ["https://www.dorsalapp.com/apidocs/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://uat.api.dorsalapp.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "243"}}
{"API name": ["NASA GIBS REST API"], "Description": [" NASA\u2019s Global Imagery Browse Services (GIBS) API gives users access to a database of Earth observation data. The GIBS API offers access to high-resolution satellite images in a tile pyramid format. Users of the GIBS API also have access to an Open Geospatial Consortium (OGC) Web Map Tile Service (WMTS), a Tiled Web Map Service (TWMS), Google Earth KML files, and the Geospatial Data Abstraction Library (GDAL). The GIBS API is powered by \u201cOnEarth\u201d a NASA/JPL server system."], "Url": ["https://wiki.earthdata.nasa.gov/display/GIBS/GIBS+API+for+Developers"], "Category": ["Images", "Data", "Geography", "Mapping", "Photos", "Satellites", "Science"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["https://wiki.earthdata.nasa.gov/display/GIBS/GIBS+API+for+Developers"], "Architectural Style": ["REST"], "Endpoint Url": ["https://wiki.earthdata.nasa.gov/display/GIBS/GIBS+API+for+Developers"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "244"}}
{"API name": ["NASA PO.DAAC Dataset Metadata REST API"], "Description": [" The Physical Oceanography Distributed Active Archive Center (PO.DAAC) is part of NASA's Earth Observing System Data and Information System (EOSDIS). PO.DAAC's purpose is to store oceanography and climatography related data obtained by NASA. PO.DAAC also serves as a pathway to other related archives and provides relevant tools making their datasets easily consumable and applicable. NASA's PO.DAAC Dataset Metadata API gives access to PO.DAAC's dataset catalog. Possible queries include: datasetId, shortName, and format."], "Url": ["http://podaac.jpl.nasa.gov/ws/metadata/dataset/index.html"], "Category": ["Data", "Climate", "Geography", "Science"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["http://podaac.jpl.nasa.gov/ws/metadata/dataset/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://podaac.jpl.nasa.gov/ws/metadata/dataset"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "245"}}
{"API name": ["NASA PO.DAAC Granules Metadata REST API"], "Description": [" The Physical Oceanography Distributed Active Archive Center (PO.DAAC) is part of NASA\u2019s Earth Observing System Data and Information System (EOSDIS). PO.DAAC\u2019s purpose is to store oceanography and climatography related data obtained by NASA. PO.DAAC also serves as a pathway to other related archives and provides relevant tools making their datasets easily consumable and applicable. NASA\u2019s PO.DAAC Granules Metadata API retrieves granule metadata from PO.DAAC's dataset. The Granules Metadata API can retrieve metadata for one given granule or a list of granules added within 24 hours."], "Url": ["http://podaac.jpl.nasa.gov/ws/metadata/granule/index.html"], "Category": ["Metadata", "Climate", "Geography", "Science"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["http://podaac.jpl.nasa.gov/ws/metadata/granule/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://podaac.jpl.nasa.gov/ws/metadata/granule"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "246"}}
{"API name": ["NASA CO2 Virtual Data Environment REST API"], "Description": [" The CO2 Virtual Data Environment API is designed to facilitate research on atmospheric CO2. This API gives users access to a host of datasets concerning atmospheric research including calculations, algorithms, data models, etc. In addition, users have access to tools to aid in the manipulation and transformation of atmospheric data."], "Url": ["https://co2.jpl.nasa.gov/developer/grid_api"], "Category": ["Astronomy", "Climate", "Data", "Science"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["https://co2.jpl.nasa.gov/developer/grid_api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://co2.jpl.nasa.gov/regrid/wps/submit "], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "247"}}
{"API name": ["NASA Earth REST API v1.0"], "Description": [" NASA's Earth API gives users access to Earth observation data. The Earth API is powered by the Google Earth Engine and consists of a database of images from Landsat 8. Landsat 8 is NASA satellite that takes images of the entire Earth every 16 days. Users can query the database for images of a specific place at a specific date.\nNOTE: The API currently only works for a limited data range. The API owners are attempting to fix this."], "Url": ["https://api.nasa.gov/"], "Category": ["Mapping", "Images", "Photos", "Satellites"], "Provider": ["NASA"], "ServiceType": ["Web/Internet"], "Documentation": ["https://api.nasa.gov/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.nasa.gov/planetary/earth/imagery"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "248"}}
{"API name": ["Beagle Sense REST API"], "Description": [" Beagle is a range of wireless sensors that you can place throughout your home or office. Each sensor monitors either air quality, temperature, outdoor noise, indoor noise, air pressure, humidity, or light. Use the Beagle Sense API to access each sensor its data. The API uses GET methods over HTTPS with responses in JSON. Collected data is transmitted over a private wireless network to a local base station where it is securely communicated to Beagle's Cloud Service. A few of the available API methods allow you to return a list of all devices, retrieve raw data from all sensors, or configure your sensor."], "Url": ["https://github.com/BeagleSense/beaglesense-api"], "Category": ["Internet of Things", "Energy", "Environment", "Health", "Home Automation"], "Provider": ["Beagle Sense"], "ServiceType": [], "Documentation": ["https://github.com/BeagleSense/beaglesense-api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.beaglesense.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "249"}}
{"API name": ["Sensorist REST API"], "Description": [" The Sensorist API allows developers to access information from environmental sensor systems programmatically. Sensorist builds and sells wireless sensor systems that can measure an environment's temperature, humidity, CO2 levels, and more. Users can explore their sensors' measurements using Sensorist's website or app, or they can build custom integrations with the API."], "Url": ["https://api.sensorist.com/"], "Category": ["Home Automation", "Environment", "Internet of Things"], "Provider": ["Sensorist"], "ServiceType": [], "Documentation": ["https://api.sensorist.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.sensorist.com/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "250"}}
{"API name": ["Pole Star REST API"], "Description": [" Pole Star API supports the streaming of navigational and tracking data of ships as they cruise the high seas or berths at destination ports. The API\u2019s provider, Pole Star Space Applications, Ltd., is a major international brand in maritime transportation industry. Other than transmitting requests and returns on JSON protocol, the RESTful API has simple configurations designed to aid integration and compatibility with clients' host applications. Pole Star API is well-documented and its access requires API key permissions."], "Url": ["http://purplefinder.polestarglobal.com/api"], "Category": ["Marine", "Data", "Logistics", "Shipping"], "Provider": ["Pole Star Space Applications"], "ServiceType": [], "Documentation": ["http://purplefinder.polestarglobal.com/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://web.polestarglobal.com"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "251"}}
{"API name": ["NEA Datasets REST API"], "Description": [" The NEA Datasets API offers updated weather, and environmental information by Singapore's National Environment Agency. It provides an application with ultraviolet information, forecasts, and earthquake information. Developers need to register and receive an API key before using this API. The National Environment Agency is responsible for preserving a clean environment in Singapore."], "Url": ["https://www.nea.gov.sg/api"], "Category": ["Data", "Asia", "Climate", "Environment", "Weather"], "Provider": ["Government of Singapore"], "ServiceType": [], "Documentation": ["https://www.nea.gov.sg/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.nea.gov.sg/home"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "252"}}
{"API name": ["Urthecast Platform REST API"], "Description": [" The Urthecast Platform is a system of RESTful APIs, services, and tools that allows for fast, scalable access to Earth imagery, video, geospatial information and other data sets in order to build dynamic applications to monitor our ever-changing planet."], "Url": ["https://www.urthecast.com/geosys/geosys-api/"], "Category": ["Mapping", "Activity Streams", "Agriculture", "Algorithms", "Big Data", "Cities", "Climate", "Earthquakes", "Geography", "Geology", "Images", "Machine Learning", "Media", "Monitoring", "Open Data", "Platform-as-a-Service", "Satellites", "Science", "Sustainability", "Water"], "Provider": ["Urthecast"], "ServiceType": ["Unspecified"], "Documentation": ["https://github.com/urthecast/urthecast-api-presentation"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "253"}}
{"API name": ["MapFruition Spatial Operations REST API"], "Description": [" The MapFruition Spatial Operations API is available in JSON format and accessible with an API Key. The API allows developers to integrate GIS features into web services and web applications. With the API, developers can geocode a point location, analyze travel time from point to point, and generate travel time polygons useful to predict drive time. MapFruition provides GIS and GPS services to the government and the state. It also serves commercial clients."], "Url": ["Spatial Operations "], "Category": ["Mapping", "Business", "Environment", "Government", "Location"], "Provider": ["MapFruition"], "ServiceType": [], "Documentation": ["https://market.mashape.com/mapfruition/spatialoperations"], "Architectural Style": ["REST"], "Endpoint Url": ["https://mapfruition-spatialops.p.mashape.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "254"}}
{"API name": ["MapFruition Demographic Inquiry REST API"], "Description": [" The MapFruition Demographic Inquiry API is available in JSON format with an API Key. The API allows users to integrate demographic features such as population summaries, income, consumer expenditures, and educational level into applications. MapFruition provides GIS and GPS services to the government and the state. It also serves commercial clients."], "Url": ["Demographic Inquiry "], "Category": ["Mapping", "Business", "Demographics", "Environment", "Government"], "Provider": ["MapFruition"], "ServiceType": [], "Documentation": ["https://market.mashape.com/mapfruition/demographicinquiry"], "Architectural Style": ["REST"], "Endpoint Url": ["https://market.mashape.com/mapfruition/demographicinquiry "], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "255"}}
{"API name": ["Qalendra Predictions REST API"], "Description": [" The Qalendra Predictions API provides long-range predictions for travel and hospitality. This Restful API responds in the JSON format and employs HTTP Basic Authentication. It is powered by algorithms that ingest big data, compare all destinations at once and identify where the best conditions for vacations, sports and activities are, anywhere in the world, with months in advance. Different data sources are analyzed such as weather , terrain, and traffic. Qalendra offers one pay-per-use plan."], "Url": ["Documentation"], "Category": ["Travel", "Aggregation", "Algorithms", "Analytics", "B2B", "Big Data", "Climate", "Comparisons", "Data Mining", "Geography", "Holidays", "Intelligence", "Location", "Predictions", "Recommendations", "Sports", "Statistics", "Tourism", "Weather"], "Provider": ["Qalendra"], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.qalendra.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "256"}}
{"API name": ["UC Berkeley CoolClimate REST API"], "Description": [" With the CoolClimate API, an initiative created by the University of California, Berkeley developers can create projects that calculate carbon footprints, measurement that assists with the individual management of climate impact. Available as a limited preview, users can access a set of parameters in an Excel document. They can also visit the CoolClimate Calculator homepage available at\nhttp://coolclimate.berkeley.edu/carboncalculator"], "Url": ["API Central CoolClimate"], "Category": ["Climate", "Education", "Environment"], "Provider": ["UC Regents"], "ServiceType": [], "Documentation": ["https://api-central.berkeley.edu/api/11"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api-central.berkeley.edu/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "257"}}
{"API name": ["Terracycle REST API"], "Description": [" The Terracycle API allows application developers to give their end users access to Terracycle's waste collection services. Terracycle is an international upcycling and recycling company that collects difficult-to-recycle packaging and products and repurposes them. They work with over 100 major U.S. brands and 22 countries to collect used packaging and products to prevent them from ending up in landfills. Please contact Terracycle before using their API. Users of the API can get account, shipment, language, and location information, and also information on specific waste collection programs called Brigades."], "Url": ["https://developers.terracycle.com/devportal/docs/getting_started"], "Category": ["Environment"], "Provider": ["TerraCycle"], "ServiceType": [], "Documentation": ["https://developers.terracycle.com/devportal/docs/getting_started"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.terracycle.com/en-US/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "258"}}
{"API name": ["Global Forest Watch REST API v1"], "Description": [" The Global Forest Watch API allows developers to retrieve information on forest change measures, including cover loss, tree cover gain, and disturbances. Specific data that developers can retrieve includes University of Maryland tree cover loss & gain, FORMA (FORest Monitoring for Action) alerts, IMAZON SAD (Deforestation Alert System) alerts, QUICC (Quarterly Indicator of Cover Change) alerts, and NASA active fires."], "Url": ["https://data.globalforestwatch.org/"], "Category": ["Environment", "Climate", "Fire", "Nature", "Sustainability"], "Provider": ["World Resources Institute"], "ServiceType": ["Web/Internet"], "Documentation": ["https://data.globalforestwatch.org/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://ec2-50-18-182-188.us-west-1.compute.amazonaws.com:6080/arcgis/rest/services/ForestGain_2000_2012/ImageServer/query?where=1%3D1&amp;outFields=*&amp;outSR=4326&amp;f=json"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "259"}}
{"API name": ["Natural History Museum REST API"], "Description": [" This REST API lets users access the data portal of London's Natural History Museum to retrieve collection and research datasets for use in software or applications. The datasets, returned in JSON, hold 2.7 million specimen records from the Museum\u2019s Zoology, Botany, Mineralogy, Palaeontology and Entomology collections."], "Url": ["Natural History Museum"], "Category": ["Museums", "Geology", "Nature", "Open Data", "Science"], "Provider": ["Natural History Museum, London"], "ServiceType": [], "Documentation": ["http://data.nhm.ac.uk/about/download"], "Architectural Style": ["REST"], "Endpoint Url": ["http://data.nhm.ac.uk/api/3"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "260"}}
{"API name": ["Iteris ClearAg Soil Condition REST API"], "Description": [" The Soil Conditions API uses detail from several in-house computer models to provide users with historically estimated depth specific soil moisture and temperature conditions. Requests require a unique API key, and both requests and responses are in HTTP.\nIteris ClearAg provides high-resolution data services, derived from data assimilation and modeling technologies, for agricultural applications. ClearAg offers multiple APIs for agribusiness and offers API integration, application framework and white label capability."], "Url": ["Iteris ClearAg Soil Condition "], "Category": ["Weather", "Agriculture", "Climate", "Data"], "Provider": ["Iteris"], "ServiceType": [], "Documentation": ["https://clearag.com"], "Architectural Style": ["REST"], "Endpoint Url": ["http://ag.clearapis.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "261"}}
{"API name": ["Iteris ClearAg Crop Health REST API"], "Description": [" The Crop Health API provides growth, pest, and specific recommendation to agricultural users through single sine, corn growth, spring wheat growth, canola growth, sugar beet growth, and barley growth API services.\nIteris ClearAg provides high-resolution data services, derived from data assimilation and modeling technologies, for agricultural applications. ClearAg offers multiple APIs for agribusiness and offers API integration, application framework and white label capability."], "Url": ["Iteris ClearAg Crop Health API"], "Category": ["Agriculture", "Climate", "Data", "Weather"], "Provider": ["Iteris"], "ServiceType": [], "Documentation": ["https://clearag.com"], "Architectural Style": ["REST"], "Endpoint Url": ["http://ag.clearapis.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "262"}}
{"API name": ["Iteris ClearAg Field Weather REST API"], "Description": [" The Field Weather API uses ClearAg's meteorological data, weather models and sensor data to provide users with field specific weather data. Requests require a unique API key and both requests and responses are in HTTP or HTTPS. Field Weather API methods include historical and current forecasts, temperature, hail, and rain data.\nIteris ClearAg provides high-resolution data services, derived from data assimilation and modeling technologies, for agricultural applications. ClearAg offers multiple APIs for agribusiness and offers API integration, application framework and white label capability."], "Url": ["Iteris ClearAg Field Weather"], "Category": ["Weather", "Agriculture", "Climate", "Data"], "Provider": ["Iteris"], "ServiceType": [], "Documentation": ["https://clearag.com"], "Architectural Style": ["REST"], "Endpoint Url": ["http://ag.clearapis.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "263"}}
{"API name": ["Iteris ClearAg Map Overlay REST API"], "Description": [" The Map Overlay API uses ClearAg's meteorological data, weather models and sensor data to to generate map overlays for specific locals. Requests require a unique API key, and both requests and responses are in HTTP. Map Overlay API provides overlays of observed and forecasted data, including radar imagery, temperature, humidity, and wind speeds. Iteris ClearAg provides high-resolution data services, derived from data assimilation and modeling technologies, for agricultural applications. ClearAg offers multiple APIs for agribusiness and offers API integration, application framework and white label capability."], "Url": ["Iteris ClearAg Map Overlay"], "Category": ["Weather", "Agriculture", "Climate", "Data", "Mapping"], "Provider": ["Iteris"], "ServiceType": [], "Documentation": ["https://clearag.com"], "Architectural Style": ["REST"], "Endpoint Url": ["http://tiles.clearapis.com/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "264"}}
{"API name": ["World Tides REST API"], "Description": [" Use the World Tides API to retrieve tidal information for anywhere in the world. World Tides API accepts calls via GET or POST, returns data in JSON, and supports both HTTP/HTTPS. Developers will receive an API Key for authentication after registering with World Tides. The API will return information on: the coordinates of the closest point where tidal information is available, the height of tides at a given time, or tidal data so that users can calculate tide heights at a given time. See World Tides API documentation for more information and code examples."], "Url": ["World Tides"], "Category": ["Marine", "Data-as-a-Service", "Geography", "Marine", "Time", "Water"], "Provider": ["Brainware"], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.worldtides.info/apidocs"], "Architectural Style": ["REST"], "Endpoint Url": ["https://www.worldtides.info/api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "265"}}
{"API name": ["GardenKit REST API"], "Description": [" GreenIQ's GardenKit API provides access to their product, Smart Garden Hub. Smart Garden Hub is an application that aims to cut down water consumption in gardens and landscapes. The GardenKit API allows developers to access all the components that are required to build full or partial applications based on the GardenKit API's functionality. Some example API methods include retrieving valve settings, configuring valve settings, and accessing light settings."], "Url": ["GardenKit API"], "Category": ["Internet of Things", "Environment", "Home Automation"], "Provider": ["GreenIQ"], "ServiceType": [], "Documentation": ["https://docs.google.com/document/d/16irr_OQ_cuxmZVxaUts4lzFzXOst3IFDRDp3eTYtwrg/edit"], "Architectural Style": ["REST"], "Endpoint Url": ["https://greeniq.net/php/api"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "266"}}
{"API name": ["BreezoMeter Air Quality REST API v2"], "Description": [" The BreezoMeter Air Quality API allows developers to request air quality information for a specified location (given in latitude and longitude coordinates) including indexes, pollutants, and health recommendations. Developers can request a location's current conditions, hourly forecast for up to four days, and hourly history going back up to 30 days.\nBreezoMeter provides global, real-time air quality data that can help individuals make better health decisions based on their local air pollution levels and their personal sensitivities."], "Url": ["https://docs.breezometer.com/"], "Category": ["Health", "Environment", "Fire", "Location", "Weather"], "Provider": ["BreezoMeter"], "ServiceType": ["Web/Internet"], "Documentation": ["https://docs.breezometer.com/api-documentation/air-quality-api/v2/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.breezometer.com/air-quality/v2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "267"}}
{"API name": ["PressureNet.io REST API"], "Description": [" PressureNet.io is a company that provides atmosphere data and software intelligence for improving weather and climate forecasting. They've built an open source platform that collects live atmosphere data from Android smartphones locate around the world. This network takes 5 million measurements per day. Atmosphere researchers can access a feed of this data from the PressureNet API."], "Url": ["PressureNet.io"], "Category": ["Weather", "Climate", "Crowdsourcing", "Data", "Internet of Things", "Mobile", "Open Source"], "Provider": ["Cumulonimbus"], "ServiceType": [], "Documentation": ["http://pressurenet.io/api/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://pressurenet.io/live/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "268"}}
{"API name": ["Broadcastify Live Audio Feed Catalog REST API"], "Description": [" Broadcastify a radio communication platform that specializes in streaming live audio for public safety, aircraft, rail, and marine related communications. Live Audio Feed Catalog API is part of the Broadcastify API systems, when integrated in applications, developers can use it to request for live feeds from the Broadcastify catalog. Outputs for this API are in XML and JSON formats."], "Url": ["Live Audio Feed Catalog API"], "Category": ["Streaming", "Air Travel", "Audio", "Feeds", "Marine", "Safety", "Transportation"], "Provider": ["Zendesk"], "ServiceType": [], "Documentation": ["https://broadcastify.zendesk.com/entries/22579268-Live-Audio-Feed-Catalog-API-v-1-3-Documentation"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.broadcastify.com/audio/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "269"}}
{"API name": ["Thinking Things REST API"], "Description": [" Telefonica's new IoT product line, Thinking Things, are small stackable white blocks that intercept environment data to interface with home automation systems. The modular sensor hardware comes integrated with global connectivity potential, built with Telefonica M2M SIMs. The sensors may be monitored and behaviors automated or with set triggers, all remotely controllable from web or mobile interfaces. Telefonica's Thinking Things API expands the potential to create new applications that interface with these devices. The API, currently in beta, the API can be used to construct home automation apps or connect to logistics systems."], "Url": ["Api Rest Documentation"], "Category": ["Internet of Things", "Environment", "Home Automation", "Logistics", "Machine-to-Machine", "Monitoring"], "Provider": ["Telefonica"], "ServiceType": [], "Documentation": ["http://www.thinkingthings.telefonica.com/support/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://thinkingthings.telefonica.com/Api/v1/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "270"}}
{"API name": ["Growstuff REST API"], "Description": [" Growstuff is an online community of food gardeners. Using their open source platform, gardeners can track seeds they plant, exchange seeds with local gardeners, and learn more about growing their own food. Growstuff is in the process of developing an API that will allow 3rd party applications to be built around their open datasets regarding crop, climate, and geographic specific planting advice. The API will be in a JSON format with HTTP requests. Additional open developer documentation is available on GitHub."], "Url": ["API/Version 1"], "Category": ["Agriculture", "Climate", "Community", "Food", "Geography", "Open Data", "Social", "Time Tracking", "Weather"], "Provider": ["Growstuff"], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "271"}}
{"API name": ["Chain REST API"], "Description": [" The Chain API enables developers to work with environmental data captured on sensor devices. These sensors collect data on local temperature, humidity, and barometric pressure. The Chain API is a project of the MIT Media Lab and is currently being used for the Tidmarsh Living Observatory project. The Chain API is still under development and is not ready for production use."], "Url": ["https://github.com/ssfrr/chain-api"], "Category": ["Data", "Environment", "Internet of Things"], "Provider": ["Independent Developer"], "ServiceType": [], "Documentation": ["https://github.com/ssfrr/chain-api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://chain-api.media.mit.edu/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "272"}}
{"API name": ["World Bank Climate Data REST API"], "Description": [" The World Bank profiles climate data in the site Climate Change World Portal. The organization also offers an API for developers interested to access some of the info uploaded on such website. With the API, users can create an application featuring information in real time. This could be valuable because the reports will always be recent. The API is about access to climate information. Some of the resources include REST basic requests in the form of variables to support time, precipitation, temperature, historical data and statistics. API Key is required. Developers can use this data to support their own applications, as long as they fulfill the requirements stated in World Bank\u2019s terms of use."], "Url": ["Climate Data API"], "Category": ["Climate", "Data", "Weather"], "Provider": ["World Bank Group"], "ServiceType": [], "Documentation": ["http://data.worldbank.org/developers/climate-data-api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://data.worldbank.org/developers/climate-data-api"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "273"}}
{"API name": ["ReliefWeb REST API v1"], "Description": [" ReliefWeb, a specialized digital service of the United Nations Office of Humanitarian Affairs (OCHA), is a source for timely information on global crises and disasters, enabling humanitarians to make informed decisions and plan effective assistance. Content (including that related to COVID-19) on this site including the latest reports, maps, and infographics from trusted sources, is delivered through the API.\nThe ReliefWeb API provides developer-friendly access to content on the ReliefWeb site. ReliefWeb launched in 1996 and has been posting Reports continuously since. Also available are UN reports on major disasters from the 1980s. Data in updated is real-time."], "Url": ["https://apidoc.rwlabs.org/"], "Category": ["News Services", "Community", "Coronavirus", "COVID-19", "Earthquakes", "Emergency", "Environment", "Government", "Non-Profit"], "Provider": ["ReliefWeb"], "ServiceType": ["Web/Internet"], "Documentation": ["https://apidoc.rwlabs.org/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.rwlabs.org/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "274"}}
{"API name": ["US DOE Buildings Performance Database REST API"], "Description": [" The Office of Energy Efficiency and Renewable Energy of the United States Department of Energy provides this API to share aggregate statistical information about energy performance on hundreds of thousands of commercial and residential buildings in the U.S. This API can be used to create your own applications and visualizations, and to estimate EUI, or energy use intensity, for buildings. EUI is measured in energy use per square foot per year."], "Url": ["https://bpd.lbl.gov/developers/"], "Category": ["Government", "Design", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["https://bpd.lbl.gov/developers/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://bpd.lbl.gov/api/v1"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "275"}}
{"API name": ["US DOE Asset Score REST API"], "Description": [" The Office of Energy Efficiency and Renewable Energy of the United States Department of Energy provides this API to help rate commercial buildings on energy efficiency according to its national standards. Using a variety of physical characteristics and likely usage, the tool can rate a building's energy efficiency, including evaluating its systems and identifying areas for possible upgrades."], "Url": ["https://assetscoreapi.pnnl.gov/api"], "Category": ["Government", "Design", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://assetscoreapi.pnnl.gov/api/v1/"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "276"}}
{"API name": ["National Park Service NPMap REST API"], "Description": [" National Park Service's NPMap team enables National Park Service employees, volunteers, and partners to create and embed maps, including nps.gov content management system, into their web pages.\nThe NPMap is made of simple Javascript modules and returns coordinates in Decimal Degrees."], "Url": ["http://www.nps.gov/npmap/support/library/api/"], "Category": ["Mapping", "Nature", "Government"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.nps.gov/npmap/support/library/api/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "277"}}
{"API name": ["ThinkEco Unspecified API"], "Description": [" ThinkEco is a green technology company that creates cost-effective energy efficiency solutions. They have a modlet, self-installable solution that enables device-level energy management to the home and office. Their cloud based software, that is accessed through the modlet, allows users to view energy use, costs, and savings. Additionally, the have a SmartAC dashboard to control electronics from any computer.\nThe ThinkEco API allows developers to integrate the modlet data with a building or energy management system. The API also allows for pulling of energy data and controlling modlets from your own system."], "Url": ["http://www.thinkecoinc.com/"], "Category": ["Science", "Energy", "Environment", "Internet of Things"], "Provider": [], "ServiceType": ["Unspecified"], "Documentation": [], "Architectural Style": ["Unspecified"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "278"}}
{"API name": ["Fruitmap REST API"], "Description": [" Fruitmap is a user generated map of various types of fruit trees around the world. Anyone can easily mark the location of a tree on the site's map. Fruitmap exposes its data through a simple API. The API is able to deliver general data on all of the site's trees by type, as well as the location of all trees of a given type."], "Url": ["http://www.fruitmap.sk/api"], "Category": ["Mapping", "Science", "Environment", "Classification"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.fruitmap.sk/api"], "Architectural Style": ["REST"], "Endpoint Url": ["http://fruitmap.sk/api/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "279"}}
{"API name": ["AirNow FEED API"], "Description": [" AirNOW is a U.S. EPA program that provides forecast and real-time air quality information (AQI) across North America. AirNOW collects data from more than 2,000 monitoring stations and forecasts for over 300 cities.\nThe AirNOW API allows developers to programmatically access air quality forecasts and real-time data. The API is able to deliver data for a specific zip code or a set of geographic coordinates, as well as historical air quality observations."], "Url": ["http://www.airnowapi.org/"], "Category": ["Weather", "Climate", "Environment", "Government"], "Provider": ["AirNow"], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.airnowapi.org/"], "Architectural Style": ["FEED"], "Endpoint Url": ["http://airnowapi.sonomatechdata.com/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "280"}}
{"API name": ["FuelEconomy.gov REST API"], "Description": [" FuelEconomy.gov is the official U.S. government source for fuel economy information. The site features an API that enables developers to programmatically query vehicle fuel efficiency data for a given make, model, and year. This RESTful API is able to deliver emission records, MPG data, and much more."], "Url": ["http://www.fueleconomy.gov/feg/ws/"], "Category": ["Transportation", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.fueleconomy.gov/feg/ws/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.fueleconomy.gov/ws/rest/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "281"}}
{"API name": ["MarineTraffic REST API v1"], "Description": [" MarineTraffic provides data on millions of daily vessel positions, which users may integrate with their applications or websites using the RESTful API. Users can also get the most recent arrivals and departures for a given port or vessel, all of a vessel's AIS positions, or a popular photo of a vessel to display in their app."], "Url": ["http://www.marinetraffic.com/p/api-services"], "Category": ["Travel", "Mapping", "Marine", "Transportation"], "Provider": ["MarineTraffic"], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.marinetraffic.com/p/api-services"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "282"}}
{"API name": ["NWCC Air-Water Database RPC API"], "Description": [" The NWCC (National Water and Climate Center) is a US government organization created to develop information and technology resources on snow, water, climate, and hydrology. The NWCC provides the Air-Water Database (AWDB) API, which allows users to retrieve data, metadata, 30-year normals, and water availability forecasts via SOAP calls."], "Url": ["http://www.wcc.nrcs.usda.gov/web_service/awdb_web_service_landing.htm"], "Category": ["Science", "Weather", "Government", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.wcc.nrcs.usda.gov/web_service/awdb_web_service_landing.htm"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://www.wcc.nrcs.usda.gov/awdbWebService/services?WSDL"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "283"}}
{"API name": ["Evergreen REST API"], "Description": [" Evergreen is a asset-backed digital currency that allows users to exchange euros for evergreens, and use them as payment. The evergreens are exchanged at a 6:1 ratio with Euros, and are backed by a basket of currencies and environmental investments. The Evergreen API uses REST calls and returns JSON. Users can make calls to interface between mobile apps and websites to manipulates wallets containing evergreens. An account is required with service."], "Url": ["http://evrgr.github.io"], "Category": ["Payments", "Merchants", "Bitcoin", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://evrgr.github.io"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "284"}}
{"API name": ["CNGnow REST API"], "Description": [" CNGnow.com is a website dedicated to spreading information about natural gas vehicles and the benefits of Compressed Natural Gas (CNG). The CNGnow Station Data API exposes crowdsourced station data. The free API delivers station information such as name, address, payment options, PSI, operating hours, last reported price, and phone number. Calls can specify a particular station, or search by location or keyword."], "Url": ["http://www.cngnow.com/stations/pages/api.aspx"], "Category": ["Environment", "Transportation", "Transportation"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.cngnow.com/stations/pages/api.aspx"], "Architectural Style": ["REST"], "Endpoint Url": ["http://services.cngnow.com/V1/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "285"}}
{"API name": ["Ocean Networks Canada REST API"], "Description": [" Ocean Networks Canada (ONC) supports research on complex Earth processes through its ocean observatories, for the advancement of science and the Benefit of Canada. The Ocean Networks Canada API provides programmatic access to much of ONC\u00e2\u20ac\u2122s data and services. Exposed resources include information describing data products, sensor and observation data, station information, and archival data."], "Url": ["http://wiki.neptunecanada.ca/display/help/API"], "Category": ["Science", "Marine", "Canadian"], "Provider": [], "ServiceType": [], "Documentation": ["http://wiki.neptunecanada.ca/display/help/API"], "Architectural Style": ["REST"], "Endpoint Url": ["http://dmas.uvic.ca/api/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "286"}}
{"API name": ["Iowa Environmental Mesonet RadMap REST API"], "Description": [" The Iowa Environmental Mesonet (IEM) collects and makes available environmental data from a network of independent members. The IEM produces several products to display their data, including the RadMap API. The RadMap dynamically generates a PNG image based on a given set of HTTP parameters."], "Url": ["http://mesonet.agron.iastate.edu/GIS/radmap_api.phtml"], "Category": ["Weather", "Mapping", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://mesonet.agron.iastate.edu/GIS/radmap_api.phtml"], "Architectural Style": ["REST"], "Endpoint Url": ["http://mesonet.agron.iastate.edu/GIS/"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "287"}}
{"API name": ["Deep Voyage RPC API"], "Description": [" Deep Voyage is an Egyptian dive operation, created and run by experienced divers. Divers will travel on the ship, Liberty, which has a maximum speed of 12 knots, a spacious dive deck, and fully air conditioned cabins. The Deep Voyage API allows users to send booking requests and subscribe or unsubscribe from the Deep Voyage mailing list."], "Url": ["http://www.deepvoyage.com/WebService.asmx?"], "Category": ["Travel", "Marine"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.deepvoyage.com/WebService.asmx"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "288"}}
{"API name": ["CoolClimate Calculator REST API"], "Description": [" The CoolClimate Network, a division of UC Berkeley\u00e2\u20ac\u2122s Renewable and Appropriate Energy Laboratory, researches greenhouse gas emission and reduction, develops carbon management tools, and advocates voluntary carbon reduction for businesses and individuals.\nThe CoolClimate Calculator is a tool allowing U.S. households to calculate their carbon footprints, compare results, and receive personalized advice on reducing their carbon impact. The calculator is exposed through an API allowing 3rd party applications to compute carbon footprints given user-specified parameters."], "Url": ["http://coolclimate.berkeley.edu/api"], "Category": ["Science", "Sustainability", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://coolclimate.berkeley.edu/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://apis-dev.berkeley.edu/coolclimate/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "289"}}
{"API name": ["USDA Economic Research Service REST API"], "Description": [" The Economic Research Service (ERS) is a branch of the USDA dedicated to informing and enhancing decision making on economic and policy issues related to agriculture, food, the environment, and rural development.\nThe USDA Economic Research Service API provides developer access to the primary content of the ERS website, including topical information, digital publications, and the ERS\u00e2\u20ac\u2122 online magazine Amber Waves. The RESTful API returns JSON or XML formatted responses."], "Url": ["http://ers.usda.gov/developer.aspx"], "Category": ["Government", "Agriculture", "Food", "Environment", "Application Development"], "Provider": [], "ServiceType": [], "Documentation": ["http://ers.usda.gov/developer.aspx"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.ers.usda.gov/REST/v1/"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "290"}}
{"API name": ["EcoSCADA RPC API"], "Description": [" EcoSCADA is a web-based energy savings service that is used to monitor energy consumption and identify wasteful energy use. EcoSCADA is useful for establishing benchmarks for energy usage across multiple buildings and monitoring their performance against those benchmarks. The service records data on gas, electricity, and water consumption as well as other relevant factors. This data is stored in EcoSCADA's online database where it can be accessed by users directly or via API."], "Url": ["http://portacapena.com/EN/Home/Products---Services/EcoSCADA.aspx"], "Category": ["Energy", "Environment", "Sustainability", "Monitoring"], "Provider": [], "ServiceType": [], "Documentation": ["http://portacapena.com/EN/Home/Products---Services/EcoSCADA.aspx"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "291"}}
{"API name": ["HQCasanova Weekly CO2 REST API"], "Description": [" The Weekly CO2 API is a JSONP service providing the latest weekly atmospheric CO2 average as measured at NOAA's Mauna Loa Observatory in Hawaii. The data is sourced from MLO's RSS feed. The averages recorded for the same week 1 and 10 years ago can also be retrieved. Responses are formatted in plain text."], "Url": ["http://www.hqcasanova.com/en/projects/co2.php"], "Category": ["Science", "Environment", "Weather"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.hqcasanova.com/en/projects/co2.php"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.hqcasanova.com/co2"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "292"}}
{"API name": ["Globalstar OSAT RPC API"], "Description": [" The service provides an aid to scheduling satellite telephone calls. Its resources are specific to users of the provider's satellite phone hardware and intended to help these users identify windows of available bandwidth based on the locations from which they will be placing calls. Programmatic access provides the same functions available in the provider's interactive interface.\nAPI methods support programmatic access to schedules of access timing for satellite telephone communications. Methods allow designation of a terrestrial location by latitude and longitude along with a desired time period to make calls. Returned data provide periods of projected minimal competing traffic, supporting decision making about call scheduling."], "Url": ["https://srt.glpconnect.com:2044/osat/osat_api_docs/osat_api_services.html"], "Category": ["Telephony", "Satellites", "Scheduling"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "293"}}
{"API name": ["NA-ARC REST API"], "Description": [" The global Argo array is made of about 3,000 free-drifting floats measuring temperature and salinity (along with possibly other parameters such as oxygen) of the upper ocean.\nThe North Atlantic Argo Regional Center (NA-ARC) focuses on profiles located in North Atlantic Ocean North of 20S, in the Mediterranean and Arctic Seas. The NA-ARC web API provides a set of services with many functions to retrieve information about Argo profiles and floats in the North Atlantic Ocean. Those information are based or computed from the NA-ARC database updated daily. The API uses RESTful calls and responses are formatted in JSON."], "Url": ["http://www.ifremer.fr/lpo/naarc/m/"], "Category": ["Social", "French", "Marine", "Science"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.ifremer.fr/lpo/naarc/m/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "294"}}
{"API name": ["MaConDa RPC API"], "Description": [" The service provides access to the Mass spectrometry Contaminant Database which aggregates research reports for chemical composition of environmental contaminant molecules. It gathers data from experimental results and theoretical projections developed both by researchers in the field and instrument providers in testing their mass spectrometers. Contaminant records are annotated with metadata describing compounds.\nAPI methods support search against the database of approximately 300 records, specifying contaminant type and ion structure of detected molecules, as well as type and specific model of mass spectrometry instruments performing the analysis."], "Url": ["http://www.maconda.bham.ac.uk/api.php"], "Category": ["Science", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "295"}}
{"API name": ["USFWS Geospatial Service REST API"], "Description": [" The service from the U.S. Fish and Wildlife Service provides geospatial data about U.S. wildlife habitats, including fisheries. It supports integration of data about animal populations and habitats from human observers and remote sensing networks with geographic information systems (GIS), including global positioning system (GPS) references.\nAPI methods support ArcGIS format for creating, updating, and distributing geospatial data collected during implementation of the USFWS Operational Plan. Methods give access to data about wildlife with GIS and GPS identifiers to allow mapping of observations and integration with other resource mapping applications. Datasets identify and allow mapping of coastal resources and wetlands, critical habitats inland, ecosystem regions, Landscape Conservation Cooperatives (LCCs) and National Wildlife Refuges, migratory bird movements, and others."], "Url": ["http://www.fws.gov/gis/data/national/index.html"], "Category": ["Mapping", "Animals", "Environment", "Fishing", "Government", "USA"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.fws.gov/gis/data/national/index.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://ecos.fws.gov/tat_services/TessQuery?request=schema"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "296"}}
{"API name": ["NREL PVWatts REST API"], "Description": [" The service estimates the expected performance of photovoltaic (PV) energy systems suitable for residential and small commercial applications. Simulations estimate energy production from PV cells, given a location and other operating conditions, along with cost savings. Cost data assume that a system is connected to an existing electrical power grid rather than free-standing.\nAPI methods support submission of a location, specified as address or latitude and longitude, along with system operating parameters such as generating capacity, solar tracking functions, and operating times including daily schedules. Cost savings parameters include system initial cost, maintenance cost and deterioration over time, financing costs, tax effects, and related variables."], "Url": ["http://developer.nrel.gov/docs/solar/pvwatts-v4/"], "Category": ["Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://developer.nrel.gov/docs/solar/pvwatts-v4/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://developer.nrel.gov/api/georeserv/app/sam/pvwatts"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "297"}}
{"API name": ["CORDC Nautical Charts Indirect API v3"], "Description": [" The Nautical Charts indirect API by the University of California at San Diego displays NOAA Nautical Charts within Google Maps API v. 3. The Nautical Charts API provides map layering capabilities and gives developers access to the data. Functionality allows developers to manipulate map layering and access any geographical information they may need. The API is guided towards scientific research and oceanic mapping innovation. JavaScript SDK available."], "Url": ["http://cordc.ucsd.edu/projects/charts/api/jsdoc/symbols/Panel.html"], "Category": ["Mapping", "Charts", "Marine"], "Provider": ["Regents of the University of California"], "ServiceType": ["Web/Internet"], "Documentation": ["http://cordc.ucsd.edu/projects/charts/api/jsdoc/symbols/Panel.html"], "Architectural Style": ["Indirect"], "Endpoint Url": ["http://cordc.ucsd.edu/projects/charts/api"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "298"}}
{"API name": ["NSW Motor Vehicle Reporting App RPC API"], "Description": [" The government of New South Wales (NSW) in Australia is developing an application for reporting various types of vehicular pollution. These include littering, excessive noise, and smoke emission. The Motor Vehicle Reporting App API provides programmatic access to the app's functions via SOAP calls."], "Url": ["http://www.environment.nsw.gov.au/pollution/ReportToEPA.htm"], "Category": ["Government", "Auto", "Environment", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.environment.nsw.gov.au/pollution/ReportToEPA.htm"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "299"}}
{"API name": ["NSW Office of Water Hydstra RPC API"], "Description": [" The NSW Office of Water manages an extensive water monitoring system that provides vital data such as flow levels, volume, and quality. Data is stored in the NSW's implementation of the Hydstra water database. Hydstra is a time-series data management system that provides tools for building and maintaining time-series data archives. The NSW Office of Water's water data is available through the website or via the Hydstra API."], "Url": ["http://realtimedata.water.nsw.gov.au/cgi/webhyd.pl?soapws_show_header"], "Category": ["Government", "Environment", "Water"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "300"}}
{"API name": ["National Institute for Geographic Information and forestry REST API"], "Description": [" The service provides data for mapping and geographic information sysetms (GIS) applications related to forestry and agricultural conditions in France. It documents forest coverage, tree species and health, soil conditions, and related environmental reports tied to specific locations, identified as geographic points or physical areas. It is intended to provide a continuously updated inventory of French forest resources.\nAPI methods support retrieval of reports on tree species, environmental health, and forestation. Data may be formatted as map layers for integration with third-party mapping applications. Native client integrations are available, including Geoportal."], "Url": ["http://api.ign.fr/accueil"], "Category": ["Science", "Nature", "Mapping", "Mapping", "French"], "Provider": [], "ServiceType": [], "Documentation": ["http://api.ign.fr/accueil"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "301"}}
{"API name": ["KMA Websky RPC API"], "Description": [" The service from the Korean Meteorological Administration (KMA) provides a shared database of weather observations, measurements, and forecasts. It reports any special warnings about weather conditions in the area along with reports on lightning activity, radar and satellite imagery, weather charts, and related resources. Data services are provided to partner agencies, businesses, and the general public.\nAPI methods support retrieval of forecast data, warnings about extraordinary conditions, readings from surface observation stations, and satellite radar data."], "Url": ["http://web.kma.go.kr/eng/wigos/04_strategy3/strategy3_02.jsp"], "Category": ["Weather", "Korean", "Satellites"], "Provider": [], "ServiceType": [], "Documentation": ["http://web.kma.go.kr/eng/wigos/04_strategy3/strategy3_02.jsp"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "302"}}
{"API name": ["Argos WebService RPC API"], "Description": [" The service provides tracking and monitoring of locations on the earth's surface by satellite processing of signals from a transmitter, either at a fixed station or mounted on a vehicle or other mobile platform. Applications of the satellite monitoring services include observations of oceanic conditions, management of fishing grounds and activities, and monitoring wildlife habitats.\nAPI methods support retrieval of satellite and transmitter positions and processing of tracking data collected by the system. Methods supply locations of transmitters and sensor readings for conditions there along with estimates of error in readings and system diagnostics."], "Url": ["http://www.argos-system.org/manual/index.html#6-data/61_overview.htm"], "Category": ["Mapping", "Environment", "Fishing", "Marine", "Monitoring"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["http://www.argos-system.org/manual/index.html"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "303"}}
{"API name": ["Landcare Research Information Service REST API"], "Description": [" The service provides a map-based interface to access data about environmental conditions in New Zealand. The provider maintains a repository of scientific datasets reporting measures of water and air quality, pollution, biosphere health, and other environmental conditions, and the service employs the Koordinates format to make the data available in a machine-processable interface with geolocation and mapping coordinates.\nIt supports direct queries to retrieve data directly along with mapping and spatial analyses via geographic information systems (GIS).\nAPI methods support Web Feature Service (OGC WFS) protocols to create vector layers for import into GIS and other mapping applications. Methods also integrate with other New Zealand mapping functions providing topographic data, forestation and land-cover data, and other conditions."], "Url": ["https://lris.scinfo.org.nz/p/api-support-wfs/"], "Category": ["Mapping", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["https://lris.scinfo.org.nz/p/api-support-wfs/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://wfs.lris.scinfo.org.nz/{YOUR-WEB-SERVICE-KEY}/wfs"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "304"}}
{"API name": ["EPA Environmental Dataset Gateway REST API"], "Description": [" The service provides access to a number of datasets containing recorded levels of environmental variables measured and tracked by the U.S. Environmental Protection Agency. A number of datasets document various monitoring programs over time tracking pollutants and environmental conditions affecting air quality, water quality, and land-borne contaminants. EPA staff and contractors can access both current and historical data via the service, built as an instance of ESRI Geoportal Server.\nAPI methods support listing of available datasets and selection of desired data based on location and conditions of interest to a researcher. Methods also support retrieval of desired datasets in formats suitable for further analysis."], "Url": ["http://iaspub.epa.gov/sor_internet/registry/reusereg/searchandretrieve/details.d\u2026"], "Category": ["Science", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://edg.epa.gov/metadata/catalog/components/components.page#"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "305"}}
{"API name": ["GEMStat RPC API"], "Description": [" The Global Environment Monitoring System (GEMS) is a multi-faceted water science center created by the United Nations Environment Programme. GEMS' goals are to improve global water quality monitoring and assessment abilities and to determine the status and trends of regional and global water quality. GEMStat is a global water quality database designed to provide access to surface and groundwater quality data and statistics collected by GEMS.\nGEMStat provides two online services for accessing its data: the Web Feature Service and the Web Map Service. The Web Feature Service returns information on GEMS stations and the measurements they've taken. The Web Map Service provides maps of GEMS station locations. Both of these services are accessible programmatically using either SOAP or REST calls."], "Url": ["http://www.gemstat.org/webservices.aspx"], "Category": ["Science", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["RPC"], "Endpoint Url": ["http://www.gemstat.org/WS/"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "306"}}
{"API name": ["BODC GEBCO Web Map Service REST API"], "Description": [" The British Oceanographic Data Centre (BODC) is a national facility for maintaining and distributing data concerning the marine environment. They provide several web services for implementing this data, including the GEBCO Web Map Service.\nThis service provides access to the General Bathymetric Chart of the Oceans' (GEBCO) global gridded bathymetric data set, enabling users to access geo-referenced underwater topographic maps over the internet. These can be viewed in a web browser or a geographic information system and incorporated with other web applications using REST (HTTP GET) calls."], "Url": ["http://www.bodc.ac.uk/products/web_services/gebco_wms/"], "Category": ["Mapping", "Marine", "England", "Science"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.bodc.ac.uk/products/web_services/gebco_wms/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.gebco.net/data_and_products/gebco_web_services/web_map_service/mapserv?"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "307"}}
{"API name": ["BODC Marsden Square Translator Service RPC API"], "Description": [" The British Oceanographic Data Centre (BODC) is a national facility for maintaining and distributing data concerning the marine environment. They provide several web services for implementing this data, including the Marsden Square Translator Service, which is accessible using SOAP calls. Data is returned in XML format.\nMarsden Squares are a tool for expressing spatial coordinates by dividing the Earth's surface into indexed squares. They are used primarily for identifying the geographic position of meteorological and oceanographic data. The BODC Marsden Square Translator Service allows users to input a list of Marsden Square references and calculate the geographical coordinates of the rectangular bounding box enclosing them."], "Url": ["http://www.bodc.ac.uk/products/web_services/msq2cov/"], "Category": ["Mapping", "Marine", "England"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.bodc.ac.uk/products/web_services/msq2cov/"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "308"}}
{"API name": ["BODC NERC Vocabulary Server RPC API"], "Description": [" The British Oceanographic Data Centre (BODC) is a national facility for maintaining and distributing data concerning the marine environment. It provides several web services for implementing this data, including the NERC Vocabulary Server. The Vocabulary Server provides access to lists of standard terms used for oceanographic metadata, including descriptions of data, platforms, instruments, and geographic locations.\nUsing standardized sets of terms solves the problem of ambiguities associated with data markup and also enables records to be interpreted by computers. This opens up possibilities for computer aided manipulation, distribution, and long-term reuse. The BODC NERC Vocabulary Server can be accessed programmatically using SOAP calls issued in XML format."], "Url": ["http://www.bodc.ac.uk/products/web_services/vocab/"], "Category": ["Science", "Marine", "England", "Semantics"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.bodc.ac.uk/products/web_services/vocab/"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "309"}}
{"API name": ["SOLEMI RPC API"], "Description": [" The Solar Energy Mining (SOLEMI) service provides measures of solar energy available at locations across Europe and Africa, along with selected parts of Asia, Australia, and South America. Measures of solar irradiance data are derived from images taken by Meteosat satellites over the period 1991-2005 for locations in Europe and Africa and 1999-2006 for Asian locations. Measures are available for hourly increments with a spatial resolution of 2.5 km.\nAPI methods support submission of a location and date range for which irradiance measures are desired. The API returns measures for global horizontal irradiance (GHI) and direct at normal incidence (DNI)."], "Url": ["http://www.webservice-energy.org/web-services/w3c-web-services/solemi-w3c"], "Category": ["Weather", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/w3c-web-services/solemi-w3c"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "310"}}
{"API name": ["Clean Power Estimator RPC API"], "Description": [" The service provides a tool for estimating cost savings and environmental benefits from renewable energy system installations. It is available both via a customizable web interface and a SOAP API. It accepts inputs such as the location of a proposed system and its likely performance parameters such as technologies employed, specific models and numbers of equipment to be used, and similar project specifications.\nAPI methods support analysis of project characteristics to generate estimates of economic benefits and environmental improvements. Specifications to be input include equipment, quantities, and costs as well as other relevant estimates such as natural gas prices, electric service rates, weather data source, and financing details. The API generates summaries of system cost and financial performance, expected utility bills and system cash flow, and power load along with reduction in emissions from conventional electricity generation."], "Url": ["http://www.cleanpower.com/products/powerclerk/powerclerk-api/"], "Category": ["Weather", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.cleanpower.com/products/powerclerk/powerclerk-api/"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "311"}}
{"API name": ["Clean Power SolarAnywhere RPC API"], "Description": [" The service provides accumulated data about solar energy potential and weather relevant to solar energy production for specified locations. It helps to estimate the effectiveness of solar power installations, including photovoltaic (PV) technologies. A PVSimulator function provides analysis of aggregated data to project likely behavior of a PV system installed at a specified location. Data provide hourly readings recorded by weather satellites.\nAPI methods support submission of a location specified as latitude and longitude to retrieve measures of solar irradiance, measured as direct normal irradiance (DNI), global horizontal irradiance (GHI), and diffuse horizontal irradiance (DIF). Related data provide measures of weather conditions such as cloud cover, precipitation, and temperature that can also affect solar power production."], "Url": ["http://www.cleanpower.com/products/solaranywhere/solaranywhere-api/"], "Category": ["Weather", "Solar", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.cleanpower.com/products/solaranywhere/solaranywhere-api/"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "312"}}
{"API name": ["EMP Climate RPC API"], "Description": [" The service provides measures of solar energy available at specified locations on the earth's surface. Data give monthly mean values of solar irradiance measures for locations around the globe. Data reflect satellite observations and meteorological observations and analyses from U.S. government agencies, the National Center for Environmental Predictions (NCEP) and National Center for Atmospheric Research (NCAR). Separate observations are rationalized by data fusion techniques.\nAPI methods support submission of a global location as latitude, longitude, and elevation. The API returns solar energy measures such as downwelling shortwave irradiance along with low, high, and average readings for air temperature and relative humidity."], "Url": ["http://www.webservice-energy.org/web-services/w3c-web-services/emp-climate-w3c"], "Category": ["Weather", "Energy", "Environment", "Solar"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/w3c-web-services/emp-climate-w3c"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "313"}}
{"API name": ["NCEP Forecast RPC API"], "Description": [" The service provides aggregated 3-day weather forecasts for several surface measurements of meteorological conditions, including wind speed and direction, barometric pressure, temperature, relative humidity, and precipitation. It also provides forecasts of solar irradiance. Estimates are updated every 3 hours. The data come from the National Centers for Environmental Prediction, part of the U.S. National Oceanic and Atmospheric Administration (NOAA).\nAPI methods support designation of a location by latitude, longitude, and elevation along with the types of weather observations desired. The API returns aggregated forecasts for the specific meterological measures at the requested location."], "Url": ["http://www.webservice-energy.org/web-services/w3c-web-services/ncep-forecast-w3c"], "Category": ["Weather", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/w3c-web-services/ncep-forecast-w3c"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "314"}}
{"API name": ["SRTM RPC API"], "Description": [" The service provides a Digital Elevation Model (DEM) build from data representing terrain features as detected by the Shuttle Radar Tomography Mission (SRTM). Elevation affects the efficiency of solar energy collection, including photovoltaic (PV) electricity production. By modeling terrain features and elevation, the service helps to improve accuracy of estimates of solar energy production at a location.\nAPI methods support specification of an area of interest (AOI), either a bounding box defined by mapped coordinates or a single location. Methods return high-accuracy elevation data for use in solar energy production estimates."], "Url": ["http://www.webservice-energy.org/web-services/w3c-web-services/srtm-w3c"], "Category": ["Weather", "Energy", "Environment", "Solar"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/w3c-web-services/srtm-w3c"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "315"}}
{"API name": ["Hydro1K RPC API"], "Description": [" The service provides a digital model of terrain elevation and slope based on a database of terrain features compiled by the EU-funded MESoR project. Elevation and slope affect the efficiency of solar energy collection and electricity generation via photovoltaic (PV) power plants. In addition to the data service, a mapping function allows for interactive consideration of sites for solar power plants.\nAPI methods support designation of an area of interest as a mapped bounding box or specific location. Returned data provide mapping data to represent elevation, slope, and other topological features."], "Url": ["http://www.webservice-energy.org/web-services/w3c-web-services/hydro1k-w3c"], "Category": ["Weather", "Energy", "Environment", "Solar"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/w3c-web-services/hydro1k-w3c"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "316"}}
{"API name": ["Shadow RPC API"], "Description": [" The service provides estimates of reduction of efficiency of solar energy installations due to shadows cast by terrain and other objects at a location. Estimates are based on data collected during the Shuttle Radar Topography Mission (SRTM), which created highly detailed images of surface topography. For a specified location, the service can project interference with solar irradiance by naturally occurring and constructed terrain features.\nAPI methods support submission of a location's coordinates to receive an estimate of the relief shadow effect on solar resources there. Shadow effect is stated as a percentage of the day that solar irradiance will be blocked. Methods also provide esimates of global horizontal irradiance and direct normal irradiance under clear-sky conditions."], "Url": ["http://www.webservice-energy.org/web-services/w3c-web-services/shadow-w3c"], "Category": ["Weather", "Energy", "Environment", "Solar"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/w3c-web-services/shadow-w3c"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "317"}}
{"API name": ["HelioClim RPC API"], "Description": [" The service provides estimates of solar energy potential for sites in Africa, the region surrounding the Mediterranean Sea, and the central part of the Atlantic Ocean. It refers to a database of solar radiation estimates based on images taken over a 20-year period by the Meteosat satellites. In addition to estimates of solar energy production, the data may provide useful input for climate studies.\nAPI methods support submission of location coordinates to retrieve estimated values for solar irradiance there. Each request can specify either a single geographic point or multiple points. Separate services are available for the period 1985-2005 and 2004-2005."], "Url": ["http://www.webservice-energy.org/web-services/ogc-web-services/helioclim3-ogc-wp\u2026"], "Category": ["Weather", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/ogc-web-services/helioclim3-ogc-wps"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "318"}}
{"API name": ["MnGeo Composite Image REST API"], "Description": [" The service provides aerial and satellite photos depicting terrain within the U.S. state of Minnesota. It works through a single access point that automatically provides appropriate photos taken from aircraft or by earth-orbiting satellites, depending on the space covered in the request and the resolution or level of detail requested. Images are available for locations across the state, with emphasis on the Twin Cities of Minneapolis-St. Paul. Some images are available of terrain bordering Minnesota, especially counties in Wisconsin near the Twin Cities. Images are used, for example, in the Interactive Twin Cities Transit Map from Metro Transit.\nAPI methods support access to imagery from the 7-country Twin Cities metro area and 4 counties to its north, 37 counties across Minnesota and near its eastern border, and areas within Canada along the state's northern border. Resolutions vary from 1:10,000 aerial photographs to FSA NAIP satellite photos up to 1:250,000 to even larger scale Landsat photos."], "Url": ["http://www.mngeo.state.mn.us/chouse/wms/composite_image.html"], "Category": ["Photos", "Mapping", "Satellites"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.mngeo.state.mn.us/chouse/wms/composite_image.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://geoint.lmic.state.mn.us/cgi-bin/mncomp?"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "319"}}
{"API name": ["Environment Canterbury Imagery (Map Server) REST API v10.5"], "Description": [" The service is provided by the Environment Canterbury Regional Council, a regional authority within New Zealand. It exposes geographic information service (GIS) data for open public access. GIS services available include OGC-compliant map services for standardized access by GIS clients and applications. Datasets make available aerial photography, regional planning zones, natural resources profiles, and more.\nAPI methods support access to a number of interrelated datasets, including color aerial photographs and planning zone boundaries. Natural resources within the region are documented, as are existing permitted uses. Environmental monitoring stations and other facilities are mapped."], "Url": ["https://gis.ecan.govt.nz/arcgis/rest/services/Imagery/MapServer"], "Category": ["Mapping", "Environment", "Images", "Location"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["https://gis.ecan.govt.nz/arcgis/sdk/rest/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://gis.ecan.govt.nz/arcgis/rest/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "320"}}
{"API name": ["NWCC Air and Water Database RPC API"], "Description": [" The service is provided by the U.S. National Water and Climate Center (NWCC), a division of the U.S. Department of Agriculture. It gives access to the AWDB (air and water database) which documents measurements of soil, water, and climatic conditions. Datasets are compiled by automated systems for measuring snowpack and stations in the Soil Climate Analysis Network (SCAN). Other measurements of snow accumulation and available water supplies are also included, such as streamflow and reservoir levels.\nAPI methods support queries against the AWDB datasets. Specific methods give access to resources like the SNOTEL (SNOw TELemetry) climate service, more general indexes of climate conditions, National Weather Service COOP stations, 30-year normal levels for some measures, etc."], "Url": ["http://www.wcc.nrcs.usda.gov/web_service/awdb_web_service_landing.htm"], "Category": ["Weather", "Science", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.wcc.nrcs.usda.gov/web_service/awdb_web_service_landing.htm"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "321"}}
{"API name": ["SPOTCatalog REST API"], "Description": [" The service provides a catalog of all \u00e2\u20ac\u0153scenes\u00e2\u20ac\u009d or earth images acquired by satellites in the SPOT series since February 1986.\nImages provide panchromatic and multispectral images of the earth's surface 60 kilometers square. Images are updated every 2-3 days with location accuracy varying from 30 to 350 meters.\nAPI methods support image search based on location and timeframe of image acquisition, specified as beginning and end dates. Methods also allow specification of image quality parameters like resolution and maximum cloud cover and snow cover."], "Url": ["http://api.spotimage.com/catalog/spot/data/doc/UserGuide.html"], "Category": ["Mapping", "Satellites", "Images"], "Provider": [], "ServiceType": [], "Documentation": ["http://api.spotimage.com/catalog/spot/data/doc/UserGuide.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.spotimage.com/catalog/spot/data/Dali.svc/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "322"}}
{"API name": ["IIAP Servicio Glosario RPC API"], "Description": [" The Instituto de Investigaciones de la Amazon\u00c3\u00ada Peruana (IIAP), or Research Institute of the Peruvian Amazon, is an institution of scientific research and technological development, specializing in the sustainable use of biodiversity in the Amazon region.\nIIAP Servicio Glosario is the IIAP's glossary service. It returns the contextual definitions of words relevant to the IIAP's work. This service is available as a SOAP API. The IIAP website and API documentation are provided solely in Spanish."], "Url": ["http://www.iiap.org.pe/WSGlosario/ServicioGlosario.asmx"], "Category": ["Reference", "Science", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.iiap.org.pe/WSGlosario/ServicioGlosario.asmx"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "323"}}
{"API name": ["Ecometrica Our Impacts REST API"], "Description": [" Ecometrica provides carbon and sustainability tools with the goal of making environmental accounting accessible to all organizations through web based services. The Ecometrica Our Impacts API allows developers to integrate internal and web based systems with Ecometrica\u00e2\u20ac\u2122s emission factors database."], "Url": ["http://ecometrica.com/products/our-impacts/"], "Category": ["Tools", "Environment", "Science"], "Provider": [], "ServiceType": [], "Documentation": ["http://ecometrica.com/products/our-impacts/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "324"}}
{"API name": ["LTER CLIMDB/HYDRODB RPC API"], "Description": [" The service provides a repository of meteorological and hydrological data, including recorded weather conditions and streamflow measurements from a number of widely distributed research sites. It is intended to meet the needs of researchers tracking long-term trends in precipitation and other weather conditions against surface water supplies in a region.\nAPI methods support access to either raw data or aggregated data for extended time periods. Raw data available include data for a specific site on a particular day along with the date when data were last recorded there. Aggregated data available include monthly, yearly, and overall data recorded for all recording stations."], "Url": ["http://climhy.lternet.edu/climhy_ws_api.html"], "Category": ["Weather", "Science", "Reference", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://climhy.lternet.edu/climhy_ws_api.html"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "325"}}
{"API name": ["PaperCut REST API"], "Description": [" PaperCut is a print optimization service that aims to help organizations reduce print costs and their environmental impact. The PaperCut API allows access to the functionality of the PaperCut system using SOAP, REST, or XML-RPC protocols. The service can track printing, check the environmental impact, manage wireless printing, set print limitations, set quotas by group or individual, and generate reports. The API uses IP level security, Authentication Tokens, and SSL for security."], "Url": ["http://www.papercut.com/products/ng/manual/apdx-tools-web-services.html"], "Category": ["Office", "Management", "Environment", "Printing"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.papercut.com/products/ng/manual/apdx-tools-web-services.html"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "326"}}
{"API name": ["eHabitat WPS RPC API"], "Description": [" The eHabitat Web Processing Service (WPS) is a web-based tool for assessing potential environmental changes due to anthropogenic activities, especially changes affecting protected areas. In particular, eHabitat's modeling services allow users to assess the likelihood of finding equivalent habitats either presently or in the future. Programmatic access to eHabitat WPS is available in the form of a SOAP-based API."], "Url": ["http://ehabitat-wps.jrc.ec.europa.eu/"], "Category": ["Science", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "327"}}
{"API name": ["gink GPS Data Web Service REST API v2"], "Description": [" The gink GPS Data Web Service takes the work out of building custom communications servers for GPS tracking devices. This makes it possible to build a tracking application without worrying about implementing your own custom server. The gink REST API makes it simple to get tracking data on demand or to save for later processing. The API can integrate sample data into your application before purchasing a gink-box tracking unit. (A gink-box receives position data from GPS satellites, as well as event data and status messages, and communicates with our servers, which process all incoming data and make them available via the REST web service.)\nThe API requires an access key to authenticate your HTTP requests and keep track of your devices. Currently, a token-based authentication scheme, HTTP Basic, and HTTP Digest Authentication are supported.\nData available through the REST Webservice includes Most Recent Position, Accumulated Distance Traveled, Historical Position Data, Historical Event Data, and more. The information received is accessible via Desktop applications, Web applications, Mobile, and any platform that has access to the World Wide Web. The API Supports a variety of data output formats: XML, KML, JSON, and CSV"], "Url": ["http://mygink.com/rest/v2docs/"], "Category": ["Mapping", "Applications", "Data", "Mobile", "Satellites"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["http://mygink.com/rest/v2docs/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://mygink.com/rest/v2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "328"}}
{"API name": ["Harwich Haven Authority RPC API"], "Description": [" Harwich Haven Authority (HHA), an organization based in the UK, is tasked with safeguarding the best natural haven on the east coast of England. Its jurisdiction covers the River Stour, the lower part of the River Orwell, Harwich Harbour and an area to seaward extending 12 nautical miles from the harbor entrance and covering 150 square miles.\nThe HHA provides services for shipping using the commercial ports of Felixstowe, Ipswich, Harwich International, Harwich Navyard and Mistley and also boarding and landing services for the rivers Thames, Medway, Blackwater, Colne and Crouch. The HHA provides a web service that lets users access the data kept by the organization. Data includes anchored ships, arrivals, forecasts, tides, traffic and more. The API uses SOAP protocol and responses are formatted in XML."], "Url": ["http://apps.hha.co.uk/mis/api.asmx"], "Category": ["Shipping", "Marine"], "Provider": [], "ServiceType": [], "Documentation": ["http://apps.hha.co.uk/mis/api.asmx"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "329"}}
{"API name": ["EUMETSAT Product Navigator RPC API"], "Description": [" The main purpose of the European Organisation for the Exploitation of Meteorological Satellites (EUMETSAT) is to make available weather- and climate-related satellite data, images, and products. The EUMETSAT Product Navigator is a service that allows users to search through the available data products. The Product Navigator can be accessed using either a web interface or a SOAP API."], "Url": ["http://navigator.eumetsat.int/discovery/Start/Explore/Quick.do"], "Category": ["Science", "Weather", "Weather", "Satellites"], "Provider": [], "ServiceType": [], "Documentation": ["http://navigator.eumetsat.int/discovery/Start/Explore/Quick.do"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://www.opengis.net/cat/csw/2.0.2/wsdl"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "330"}}
{"API name": ["Species Invaders REST API"], "Description": [" Species Invaders is a solution for identifying and mapping invasive species. It is a RESTful API that allows researchers to look up or add information about to a crowdsourced database of invasive species threats. This allows user from different apps or widgets to input data separately but develop the same knowledge base. Users can query it for data and updates or submit new information via the API. It returns JSON-encoded data and is still in its alpha release stage."], "Url": ["http://www.rhok.org/solutions/species-invaders-api"], "Category": ["Science", "Database", "Nature"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://silentrunning.info/si/api/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "331"}}
{"API name": ["CUAHSI WaterOneFlow RPC API"], "Description": [" The service handles exchanges of hydrologic data between servers, databases, and applications for data sharing and analysis. It provides a specialized flavor of XML known as WaterML. Provided by a consortium of university hydrology programs, it is part of a Hydrology Information Service (HIS) that documents and supports research in water supplies and environmental activities within many watersheds studied by affiliated researchers.\nAPI methods support retrieval of a list of sites studied with information objects and metadata summarizing location and conditions. The API also returns variables tracked and values logged."], "Url": ["http://his.cuahsi.org/wofws.html"], "Category": ["Science", "Environment", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://his.cuahsi.org/wofws.html"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://water.sdsc.edu/waterOneFlow/NWIS/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "332"}}
{"API name": ["Nike Materials Sustainability REST API"], "Description": [" Nike's Better World initiative looks at how Nike promotes sustainability practices as well as the benefits of sports around the world. As part of this initiative, Nike has a Materials Sustainability Index (MSI). The MSI is a tool used to help product teams select environmentally better footwear and apparel materials from better suppliers. The index's scoring system evaluates the environmental impacts of materials used in products using a combination of materials-specific data. It tracks impacts such as Chemistry, Energy and Greenhouse Gas Intensity, Water and Land Use Intensity, and Waste. The API provides access to data such as listing of materials, matching materials, material search via keyword and more. It uses RESTful calls and responses are formatted in JSON or HTML."], "Url": ["http://nikemsiapi.nikebetterworld.com/"], "Category": ["Tools", "Environment", "Sustainability"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://nikemsiapi.nikebetterworld.com/"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "333"}}
{"API name": ["EnergyIQ RPC API"], "Description": [" The service is part of efforts by the U.S. Lawrence Berkeley National Laboratory to encourage benchmarking of building energy efficiency, with clear guidelines for actions to reduce waste and improve energy performance. It is intended both to process data in a way that supports decision-making and to provide access to raw data for an application's own processing.\nAPI methods support direct retrieval of complete datasets as well as querying data for specific building types, sizes, locations, ages, and activities housed (e.g., education, health care, retail, general office, etc.). Requests can specify energy profile details of interest, units of measurement, and chart types for output data."], "Url": ["http://energyiq.lbl.gov/EnergyIQ/SupportPages/EIQ-webservice.html"], "Category": ["Real Estate", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["RPC"], "Endpoint Url": ["http://ws.lbl.gov:8080/axis2/services/DirSvcWS/energyIQPlotInfo"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "334"}}
{"API name": ["openModeller RPC API"], "Description": [" openModeller is a program for performing species niche modelling simulations. It does so by building a representation of the ecological requirements for a species and extrapolating those requirements into a geographical region. openModeller makes its ecological niche modelling functions available as a SOAP-based API to facilitate standardized online use."], "Url": ["http://openmodeller.sourceforge.net/index.php"], "Category": ["Science", "Nature"], "Provider": [], "ServiceType": [], "Documentation": ["http://openmodeller.sourceforge.net/index.php"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://openmodeller.cria.org.br/ws/1.0"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "335"}}
{"API name": ["EnergyStar Third-Party Certification RPC API"], "Description": [" The free service from the U.S. Environmental Protection Agency (EPA) establishes a qualified product exchange (QPX) system to accept requests for EnergyStar certification and facilitate processing of those requests by certification bodies (CBs). The service augments prior systems, which were based on submission of spreadsheets listing all currently certified products. It handles XML submissions for individual products, including capabilities to modify certification requests after submission.\nAPI methods support submission of EnergyStar certification requests for products like boilers, air conditioners and heat pumps, dehumidifiers, commercial fryers and griddles, and electronic equipment. Methods also support modifying, withdrawing, and re-submitting existing certifications."], "Url": ["http://www.energystar.gov/index.cfm?c=third_party_certification.tpc_xml_forms"], "Category": ["Government", "Reference", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.energystar.gov/index.cfm"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "336"}}
{"API name": ["ColoradoWaterSMS RPC API"], "Description": [" The service from the state\u00e2\u20ac\u2122s Division of Water Resources (DWR) provides measurements of surface water resources, including stream flow and climate effects, from watersheds statewide. The data is available to cooperating agencies, environmental researchers, developers, and other interested parties.\nAPI methods support retrieval of current conditions in streams and reservoirs across Colorado along with rating tables and shift curves indicating their susceptibility to contamination and variance in flow. Methods also document measuring stations and water districts administering state water resources."], "Url": ["http://water.state.co.us/DataMaps/WebServices/Pages/WebServices.aspx"], "Category": ["Government", "Environment", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://water.state.co.us/DataMaps/WebServices/Pages/WebServices.aspx"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "337"}}
{"API name": ["Colorado HBGuest RPC API"], "Description": [" The services from the state Division of Water Resources (DWR) gives access to watershed and groundwater resources data throughout the state from its Hydrobase repository. Data is available to cooperating agencies, environmental researchers, and others with an interest in water supply within the state.\nAPI methods support retrieval of water supply data by county and for groups of wells or specific wells. Results include test results for well production as well as factors influencing supply like volcanic activity and aquifer characteristics. Methods also provide summaries of the agency's transactions, well drilling permits issued, etc."], "Url": ["http://water.state.co.us/DataMaps/WebServices/Pages/WebServices.aspx"], "Category": ["Government", "Environment", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://water.state.co.us/DataMaps/WebServices/Pages/WebServices.aspx"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "338"}}
{"API name": ["Degree Days REST API"], "Description": [" API providing degree days for locations worldwide. It calculates heating degree days and cooling degree days in Celsius or Fahrenheit, to any base temperature, and in a range of breakdowns such as daily, weekly, monthly, yearly, and multi-year average. Data can be fetched by weather station ID or by postal/zip code or longitude/latitude position anywhere in the world."], "Url": ["https://www.degreedays.net/api/"], "Category": ["Weather", "Climate", "Data", "Energy", "Environment", "Sustainability"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.degreedays.net/api/integration"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "339"}}
{"API name": ["National Renewable Energy Lab REST API"], "Description": [" The service provides access to authoritative information on uses of alternative energy technologies from the U.S. National Renewable Energy Laboratory (NREL). It provides energy usage and rate data to enable development of renewable energy installations and use of alternative fuels. Resources emphasize electricity generation, solar-power installations in general, and transportation solutions.\nAPI methods support access to utilities serving specific locations and electricity rates charged, energy generation and cost savings from photovoltaic (PV) energy systems, and locations of alternative fuel stations."], "Url": ["http://developer.nrel.gov/"], "Category": ["Education", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://developer.nrel.gov/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://developer.nrel.gov/api/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "340"}}
{"API name": ["Webservice-Energy RPC API"], "Description": [" The service, developed through the EU-funded MESoR project, provides data and applications to encourage uses and management of renewable energy resources. It provides information about applications of solar and wind energy, along with forecasts of effectiveness over a system's life cycle. Its goal is to link users to information and encourage sharing and interaction around energy conservation.\nAPI methods support estimation by location of solar irradience and shadow effects from several different sources. Methods also forecast availability of hydro power resources and weather events with likely effects on renewable energy use."], "Url": ["http://www.webservice-energy.org/web-services/w3c-web-services"], "Category": ["Education", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.webservice-energy.org/web-services/w3c-web-services"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://soap.webservice-energy.org/"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "341"}}
{"API name": ["USGS Waterservices RPC API"], "Description": [" The service provides instantaneous, daily, and summary data for water supply and water quality. Data provided are collected from a network of U.S. Geological Service reporting stations and provided in aggregate or at a point in time. A notification system distributes alerts based on data collected.\nAPI methods support designation of reporting station location by state and county as well as location type. Results are defined by highly detailed characteristics such as watershed size and location, aquifer type, sampling methods, and well characteristics."], "Url": ["http://waterservices.usgs.gov/"], "Category": ["Government", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://waterservices.usgs.gov/"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://qwwebservices.usgs.gov/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "342"}}
{"API name": ["Nature.com Blogs REST API"], "Description": [" The Nature Publishing Group (NPG) is a publisher of scientific and medical information both in print and online. NPG publishes journals, online databases, and services across a variety of sciences and clinical medicine. Nature.com also hosts blogs from the Nature Network, publishing blogs written by in-house editors and journalists.\nThe Blogs API provides a programmatic interface to the Blogs indexing and aggregation services, giving developers tools to search blogs, posts, stories (collections of aggregated blog posts about a topic), and papers published or indexed by the Nature Network. This API exposes methods that support queries based on a variety of aspects such as content tag, keyword, and index metadata. This RESTful API returns data in JSON, though some queries support Atom/RSS and CSV formats."], "Url": ["http://www.nature.com/developers/documentation/api-references/blogs-api/"], "Category": ["Blogging", "Nature"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.nature.com/developers/documentation/api-references/blogs-api/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.nature.com/service/blogs"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "343"}}
{"API name": ["MyGarden REST API"], "Description": [" MyGarden.org is a social platform for gardeners to share their gardens virtually with people. Members can follow other gardeners and share knowledge, look up detailed plant records, keep wish lists, save articles and more. The MyGarden API lets developers integrate the platform into their own web site or applications. Method categories exposed by the API include Activities, Badges, Comments, Plants and more. The API uses RESTful calls and responses are formatted in XML and JSON."], "Url": ["http://www.mygarden.org/dev/"], "Category": ["Social", "Nature"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.mygarden.org/dev/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.mygarden.org/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "344"}}
{"API name": ["nowCOAST LayerInfo REST API"], "Description": [" nowCOAST is a GIS-based online mapping tool that provides access to real-time coastal environmental observations and NOAA forecasts for any region in the coastal United States. nowCOAST's LayerInfo API provides access to additional useful information on mapping layers, including Legends, Timestamps, Icons, and Layer Descriptions. The API uses HTTP calls and responses are formatted in XML, HTML and TXT."], "Url": ["http://nowcoast.noaa.gov/help/layerinfo.shtml?name=layerinfo"], "Category": ["Mapping", "Marine"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://nowcoast.noaa.gov/LayerInfo?"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "345"}}
{"API name": ["IOOS SOS REST API"], "Description": [" This API is the CO-OPS Implementation of IOOS (Integrated Ocean Observation System) SOS (Sensor Observation Service). IOOS is an online tool that allows users to access information on oceanic, coastal, and Great Lakes environments collected from sources that can include NOAA and other federal agencies, the IOOS Regional Associations, and potentially other national or international organizations.\nWith the IOOS SOS API, users can retrieve data on currents, water levels (preliminary, verified, and predicted), meteorology, water conditions, wave harmonics, sensors, and stations via HTTP GET/POST."], "Url": ["http://opendap.co-ops.nos.noaa.gov/ioos-dif-sos/"], "Category": ["Science", "Marine", "Weather"], "Provider": ["NOAA"], "ServiceType": ["Web/Internet"], "Documentation": ["http://opendap.co-ops.nos.noaa.gov/ioos-dif-sos/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://opendap.co-ops.nos.noaa.gov/ioos-dif-sos/SOS"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "346"}}
{"API name": ["CO-OPS RPC API"], "Description": [" As part of NOAA, CO-OPS (Center for Operational Oceanographic Products and Services) monitors, assesses, and distributes information relating to tides, currents, water levels, and other coastal oceanographic indicators. CO-OPS provides several SOAP APIs that return information on water levels, tides, currents, harmonics, station metadata, and meteorology for locations along the U.S. coast."], "Url": ["http://opendap.co-ops.nos.noaa.gov/"], "Category": ["Science", "Marine"], "Provider": [], "ServiceType": [], "Documentation": ["http://opendap.co-ops.nos.noaa.gov/"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://opendap.co-ops.nos.noaa.gov/axis/webservices/waterlevelrawsixmin/wsdl"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "347"}}
{"API name": ["USGS National Water Information System RPC API"], "Description": [" The USGS National Water Information System (NWIS) provides a suite of APIs to facilitate the automated sharing of water monitoring data. The USGS NWIS APIs provide information on all monitoring locations within a given geographic area and can also retrieve water-quality measurements by site. All data is provided by the NWISWeb database."], "Url": ["http://qwwebservices.usgs.gov/"], "Category": ["Science", "Water", "Government", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://qwwebservices.usgs.gov/"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://qwwebservices.usgs.gov/Station"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "348"}}
{"API name": ["EPA Station RPC API"], "Description": [" The EPA Station API provides information for all monitoring locations within a user-determined geographic bounding box. The API allows users to quickly pull station locations for mapping, return station counts for a given geographic area, or obtain detailed station information."], "Url": ["http://www.epa.gov/storet/web_services.html"], "Category": ["Science", "Government", "Environment", "Mapping"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.epa.gov/storet/web_services.html"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://gov.epa.storet.stationservice/StationService.wsdl"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "349"}}
{"API name": ["EPA Project Catalog RPC API"], "Description": [" The EPA's Project Catalog API provides summary information on research projects such as the period of record, characteristics monitored, and the names of stations used. Users can search for projects by Organization ID, Project ID, Station ID, or Hydrologic Unit Code (HUC)."], "Url": ["http://www.epa.gov/storet/web_services.html"], "Category": ["Science", "Environment", "Government"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.epa.gov/storet/web_services.html"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://gov.epa.storet.projectcatalogservice/ProjectCatalogService.wsdl"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "350"}}
{"API name": ["Powershop REST API"], "Description": [" The service provides information about electrical power consumption and access to electrical service from multiple providers within New Zealand, in areas where options are available to consumers. Information supplied helps users monitor their power use and understand provider options for both residential and business customers. In this way, the service promotes conservation and conscious choice among electricity suppliers.\nAPI methods support retrieval of customer account information, including electrical meter readings. Provider service information is also available, with offer pricing for available service providers."], "Url": ["http://www.powershop.co.nz/developers-api/"], "Category": ["Other", "Energy", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://secure.powershop.co.nz/external_api/v1/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "351"}}
{"API name": ["DataFed WCS RPC API"], "Description": [" The DataFed Web Coverage Service (WCS) is a SOAP-based API that describes, requests, and delivers \"coverages\" \u00e2\u20ac\u201c that is, information representing space-time variances in air quality. The current version of the WCS API (1.0) supports grid and image data types."], "Url": ["http://datafedwiki.wustl.edu/index.php/DataFedEngine"], "Category": ["Science", "Environment", "Visualizations"], "Provider": [], "ServiceType": [], "Documentation": ["http://datafedwiki.wustl.edu/index.php/DataFedEngine"], "Architectural Style": ["RPC"], "Endpoint Url": ["http://datafed.net/xs/wcs"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "352"}}
{"API name": ["Alaska Satellite Facility REST API"], "Description": [" The Alaska Satellite Facility (ASF) is one of eight Distributed Active Archive Centers (DAAC) which provide data to the NASA Earth Science Data and Information System (ESDIS). ASF's DAAC is the synthetic aperture radar (SAR) Data Center specializing in SAR data collection, processing, archiving, and distribution. An API allows access to the SAR Data Center archive using POST and GET protocols."], "Url": ["https://www.asf.alaska.edu/get-data/api/"], "Category": ["Science", "Data", "Satellites"], "Provider": ["Alaska Satellite Facility"], "ServiceType": ["Web/Internet"], "Documentation": ["https://www.asf.alaska.edu/get-data/get-started/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.daac.asf.alaska.edu/services/search/param"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "353"}}
{"API name": ["National Maritime Museum REST API"], "Description": [" The National Maritime Museum (NMM) in Greenwich, England, is the leading maritime museum in the world, with a collection of over 2 million items related to seafaring, navigation and astronomy. NMM provides an online collection of catalogue records and images. Access to the online catalog is also available through an API.\nThe API uses SOLR for queries."], "Url": ["http://collections.rmg.co.uk/page/76fd680cdfa46b8848f3a719e15a6772.html"], "Category": ["Education", "Catalogs", "Collecting", "Marine", "Museums", "Photos"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["http://collections.rmg.co.uk/page/76fd680cdfa46b8848f3a719e15a6772.html"], "Architectural Style": ["REST"], "Endpoint Url": ["http://collections.nmm.ac.uk/solr"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "354"}}
{"API name": ["EPA Envirofacts RPC API"], "Description": [" Envirofacts is a service of the U.S. Environmental Protection Agency. It provides search access to multiple environmental databases which may include data on such things as toxic chemical releases, water discharge permit compliance, hazardous waste handling processes, Superfund status, and air emission estimates, among others.\nThe Envirofacts API uses the REST and SOAP protocols and returns responses in XML, CSV, and Excel formats."], "Url": ["http://www.epa.gov/enviro/facts/services.html"], "Category": ["Science", "Government", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.epa.gov/enviro/facts/services.html"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "355"}}
{"API name": ["Satellite Situation Center Web (SSCWeb) RPC API"], "Description": [" Satellite Situation Center Web (SSCWeb) is a NASA service consisting of software and an associated database which provides geocentric spacecraft location information mapped to geophysical regions of Earth's magnetic field. Access to an SDK and associated API are available for developers to create and incorporate SSCWeb software and data into their own applications. The API uses the SOAP protocol."], "Url": ["http://sscweb.gsfc.nasa.gov/WebServices/"], "Category": ["Science", "Government", "Satellites", "Mapping", "Mapping"], "Provider": [], "ServiceType": [], "Documentation": ["http://sscweb.gsfc.nasa.gov/WebServices/"], "Architectural Style": ["RPC"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "356"}}
{"API name": ["MyHeritage Family Graph REST API"], "Description": [" Family Graph by MyHeritage.com allows users to share their family trees and photos with other people. Family Graph also allows users to connect with other families that use MyHeritage.com.\nThe Family Graph API allows users to access data and functionality from MyHeritage.com to build other applications. Some example API methods include accessing photos and albums, retrieving user information, finding other members and families, and connecting to other users and families."], "Url": ["http://www.familygraph.com/"], "Category": ["Social", "Family", "Genealogy", "Photos", "Nature"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.familygraph.com/"], "Architectural Style": ["REST"], "Endpoint Url": ["https://familygraph.myheritage.com"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "357"}}
{"API name": ["NoiseTube REST API"], "Description": [" NoiseTube is a service that allows users to upload an application to their smartphones to collect and monitor data on noise pollution. Users can collect noise data and contribute the data to the NoiseTube community for mapping and visualization.\nThe NoiseTube API allows developers to integrate NoiseTube into other applications. Methods include collecting and feeding data into the NoiseTube server based on times and locations specified, as well as searching and accessing Noisetube data from the server based on certain criteria, such as a geographic location, the most recent measurements, and data from a given date."], "Url": ["http://noisetube.net/api_overview"], "Category": ["Tools", "Mapping", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://noisetube.net/api_overview"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "358"}}
{"API name": ["Greencheck REST API"], "Description": [" Cleanbits is a website that allows companies to see how much pollution their internet infrastructure and activities account for as well as gives them the opportunity to offset it through wind energy or tree planting. The site offers the Greencheck API service makes it possible to check if any website is \"green\" or not. The service is also available as a Firefox plug-in."], "Url": ["http://api.thegreenwebfoundation.org/"], "Category": ["Tools", "Sustainability", "Environment", "Web Site Management"], "Provider": [], "ServiceType": [], "Documentation": ["http://api.thegreenwebfoundation.org/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://api.cleanbits.net/json.php"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "359"}}
{"API name": ["Open Charge Map REST API v2"], "Description": [" The Open Charge Map project provides an open, publically accessible database of consolidated electric vehicle charging point information. The API allows data consumers to access the latest charging point information which can then be used in apps, databases or websites. The API uses RESTful calls and responses can be formatted in JSON, XML, CSV, KML or RSS."], "Url": ["http://openchargemap.org/site/develop"], "Category": ["Mapping", "Auto", "Environment", "Sustainability", "Transportation"], "Provider": [], "ServiceType": ["Web/Internet"], "Documentation": ["https://openchargemap.org/site/develop/api"], "Architectural Style": ["REST"], "Endpoint Url": ["https://api.openchargemap.io/v2/"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "360"}}
{"API name": ["WattzOn REST API"], "Description": [" WattzOn is a free online tool to quantify, track, compare and understand the total amount of energy needed to support all of the facets of user's lifestyles with the goal of helping users find ways to reduce your personal power consumption. The WattzOn API is a RESTful API that allows developers to integrate WattzOn with other tools and to design their own applications. WattzOn allows developers to access data as well as upload new power meter readings."], "Url": ["http://www.wattzon.com/api/documentation"], "Category": ["Reference", "Sustainability", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.wattzon.com/api/2009-01-27/2/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "361"}}
{"API name": ["Ecolabel Index REST API"], "Description": [" Ecolabel Index is a global directory of ecolabels (such as Audubon International or Energy Star). Ecolabel Index also provides a RESTful API allowing developers to access the Ecolabel Index database. Available methods allow developers to list all published ecolabels or to get details about a particular label."], "Url": ["http://www.ecolabelindex.com/developers/api/"], "Category": ["Reference", "Environment", "Sustainability"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.ecolabelindex.com/developers/api/"], "Architectural Style": ["REST"], "Endpoint Url": ["http://www.ecolabelindex.com/services/rest/"], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "362"}}
{"API name": ["Brighter Planet Climate Data REST API"], "Description": [" Brighter Planet fetches, corrects, and parses dozens of datasets daily to inform its emission calculation service. This data is presented for public use as a service to the community. Additional datasets are posted regularly. Brighter Planet delivers cloud-based web services providing on-demand carbon information for a fraction of a cent per query, meant for enhancing existing operational data with environmental intelligence that matters. The API uses RESTful or Taps protocol and responses are formatted in XML, JSON, CSV or SQL."], "Url": ["http://data.brighterplanet.com"], "Category": ["Other", "Sustainability", "Weather", "Environment"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["http://data.brighterplanet.com"], "Support SSL": ["No"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "363"}}
{"API name": ["Marine/Surfing Weather REST API"], "Description": [" The Free Marine Weather REST API methods allows developers and programmers to access today's live marine and sailing weather forecast. You can use any programming language of your choice to get marine weather using our REST based weather API methods."], "Url": ["http://www.worldweatheronline.com/free-marine-weather-feed.aspx"], "Category": ["Weather", "Marine", "API"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.worldweatheronline.com/free-marine-weather-feed.aspx"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "364"}}
{"API name": ["3TIER REST API"], "Description": [" 3TIER's API enables you to integrate our scientifically derived, global wind and solar resource data into your own internal applications and customer experiences. You can use the API to build revenue-generating applications and mash-ups including: \u00bb Web-based lead generation programs \u00bb Internal and customer-facing sales tools \u00bb Product selection tools \u00bb Project design and financial modeling tools\nThe API accesses 3TIER's global data using simple REST calls. It is an open, standards based, XML programming interface. To make integration simple and quick, 3TIER provides detailed developer documentation, programming examples, and sample code.\nFor more information, please visit: [[http://www.3tier.com/en/package_detail/prospecting-wind-api/ www.3tier.com]]."], "Url": ["http://www.3tier.com/en/package_detail/prospecting-wind-api/"], "Category": ["Weather", "Science", "Energy", "Sustainability", "Environment"], "Provider": [], "ServiceType": [], "Documentation": ["http://www.3tier.com/en/package_detail/prospecting-wind-api/"], "Architectural Style": ["REST"], "Endpoint Url": [], "Support SSL": [], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
{"index": {"_index": "web_api", "_id": "365"}}
{"API name": ["OpenEco REST API"], "Description": [" The OpenEco API allows you to track your greenhouse gas production."], "Url": ["https://www.openeco.org/developer"], "Category": ["Other", "Environment", "Sustainability"], "Provider": [], "ServiceType": [], "Documentation": [], "Architectural Style": ["REST"], "Endpoint Url": ["https://openeco.org/module/object/id/xml/"], "Support SSL": ["Yes"], "Logo": ["https://www.programmableweb.com/sites/all/modules/contrib/lazyloader/image_placeholder.gif"]}
